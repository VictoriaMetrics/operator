apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vmauths.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMAuth
    listKind: VMAuthList
    plural: vmauths
    singular: vmauth
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of update rollout
      jsonPath: .status.updateStatus
      name: Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMAuth is the Schema for the vmauths API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMAuthSpec defines the desired state of VMAuth
            properties:
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the VMAuth
                  object, which shall be mounted into the VMAuth Pods.
                items:
                  type: string
                type: array
              configReloaderExtraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container
                  for example resyncInterval: "30s"
                type: object
              configSecret:
                description: |-
                  ConfigSecret is the name of a Kubernetes Secret in the same namespace as the
                  VMAuth object, which contains auth configuration for vmauth,
                  configuration must be inside secret key: config.yaml.
                  It must be created and managed manually.
                  If it's defined, configuration for vmauth becomes unmanaged and operator'll not create any related secrets/config-reloaders
                type: string
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: Required.
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                type: object
                items:
                  x-kubernetes-preserve-unknown-fields: true
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to  VMAuth pod
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be added to VMAuth pod
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              image:
                description: |-
                  Image - docker image settings for VMAuth
                  if no specified operator uses default config version
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              ingress:
                description: Ingress enables ingress configuration for VMAuth.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  class_name:
                    description: ClassName defines ingress class name for VMAuth
                    type: string
                  extraRules:
                    description: |-
                      ExtraRules - additional rules for ingress,
                      must be checked for correctness by user.
                    items:
                      description: |-
                        IngressRule represents the rules mapping the paths under a specified host to
                        the related backend services. Incoming requests are first evaluated for a host
                        match, then routed to the backend associated with the matching IngressRuleValue.
                      properties:
                        host:
                          description: "host is the fully qualified domain name of
                            a network host, as defined by RFC 3986.\nNote the following
                            deviations from the \"host\" part of the\nURI as defined
                            in RFC 3986:\n1. IPs are not allowed. Currently an IngressRuleValue
                            can only apply to\n   the IP in the Spec of the parent
                            Ingress.\n2. The `:` delimiter is not respected because
                            ports are not allowed.\n\t  Currently the port of an Ingress
                            is implicitly :80 for http and\n\t  :443 for https.\nBoth
                            these may change in the future.\nIncoming requests are
                            matched against the host before the\nIngressRuleValue.
                            If the host is unspecified, the Ingress routes all\ntraffic
                            based on the specified IngressRuleValue.\n\n\nhost can
                            be \"precise\" which is a domain name without the terminating
                            dot of\na network host (e.g. \"foo.bar.com\") or \"wildcard\",
                            which is a domain name\nprefixed with a single wildcard
                            label (e.g. \"*.foo.com\").\nThe wildcard character '*'
                            must appear by itself as the first DNS label and\nmatches
                            only a single label. You cannot have a wildcard label
                            by itself (e.g. Host == \"*\").\nRequests will be matched
                            against the Host field in the following way:\n1. If host
                            is precise, the request matches this rule if the http
                            host header is equal to Host.\n2. If host is a wildcard,
                            then the request matches this rule if the http host header\nis
                            to equal to the suffix (removing the first label) of the
                            wildcard rule."
                          type: string
                        http:
                          description: |-
                            HTTPIngressRuleValue is a list of http selectors pointing to backends.
                            In the example: http://<host>/<path>?<searchpart> -> backend where
                            where parts of the url correspond to RFC 3986, this resource will be used
                            to match against everything after the last '/' and before the first '?'
                            or '#'.
                          properties:
                            paths:
                              description: paths is a collection of paths that map
                                requests to backends.
                              items:
                                description: |-
                                  HTTPIngressPath associates a path with a backend. Incoming urls matching the
                                  path are forwarded to the backend.
                                properties:
                                  backend:
                                    description: |-
                                      backend defines the referenced service endpoint to which the traffic
                                      will be forwarded to.
                                    properties:
                                      resource:
                                        description: |-
                                          resource is an ObjectRef to another Kubernetes resource in the namespace
                                          of the Ingress object. If resource is specified, a service.Name and
                                          service.Port must not be specified.
                                          This is a mutually exclusive setting with "Service".
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      service:
                                        description: |-
                                          service references a service as a backend.
                                          This is a mutually exclusive setting with "Resource".
                                        properties:
                                          name:
                                            description: |-
                                              name is the referenced service. The service must exist in
                                              the same namespace as the Ingress object.
                                            type: string
                                          port:
                                            description: |-
                                              port of the referenced service. A port name or port number
                                              is required for a IngressServiceBackend.
                                            properties:
                                              name:
                                                description: |-
                                                  name is the name of the port on the Service.
                                                  This is a mutually exclusive setting with "Number".
                                                type: string
                                              number:
                                                description: |-
                                                  number is the numerical port number (e.g. 80) on the Service.
                                                  This is a mutually exclusive setting with "Name".
                                                format: int32
                                                type: integer
                                            type: object
                                        required:
                                        - name
                                        type: object
                                    type: object
                                  path:
                                    description: |-
                                      path is matched against the path of an incoming request. Currently it can
                                      contain characters disallowed from the conventional "path" part of a URL
                                      as defined by RFC 3986. Paths must begin with a '/' and must be present
                                      when using PathType with value "Exact" or "Prefix".
                                    type: string
                                  pathType:
                                    description: |-
                                      pathType determines the interpretation of the path matching. PathType can
                                      be one of the following values:
                                      * Exact: Matches the URL path exactly.
                                      * Prefix: Matches based on a URL path prefix split by '/'. Matching is
                                        done on a path element by element basis. A path element refers is the
                                        list of labels in the path split by the '/' separator. A request is a
                                        match for path p if every p is an element-wise prefix of p of the
                                        request path. Note that if the last element of the path is a substring
                                        of the last element in request path, it is not a match (e.g. /foo/bar
                                        matches /foo/bar/baz, but does not match /foo/barbaz).
                                      * ImplementationSpecific: Interpretation of the Path matching is up to
                                        the IngressClass. Implementations can treat this as a separate PathType
                                        or treat it identically to Prefix or Exact path types.
                                      Implementations are required to support all path types.
                                    type: string
                                required:
                                - backend
                                - pathType
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - paths
                          type: object
                      type: object
                    type: array
                  extraTls:
                    description: |-
                      ExtraTLS - additional TLS configuration for ingress
                      must be checked for correctness by user.
                    items:
                      description: IngressTLS describes the transport layer security
                        associated with an ingress.
                      properties:
                        hosts:
                          description: |-
                            hosts is a list of hosts included in the TLS certificate. The values in
                            this list must match the name/s used in the tlsSecret. Defaults to the
                            wildcard host setting for the loadbalancer controller fulfilling this
                            Ingress, if left unspecified.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        secretName:
                          description: |-
                            secretName is the name of the secret used to terminate TLS traffic on
                            port 443. Field is left optional to allow TLS routing based on SNI
                            hostname alone. If the SNI host in a listener conflicts with the "Host"
                            header field used by an IngressRule, the SNI host is used for termination
                            and value of the "Host" header is used for routing.
                          type: string
                      type: object
                    type: array
                  host:
                    description: |-
                      Host defines ingress host parameter for default rule
                      It will be used, only if TlsHosts is empty
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                  tlsHosts:
                    description: TlsHosts configures TLS access for ingress, tlsSecretName
                      must be defined for it.
                    items:
                      type: string
                    type: array
                  tlsSecretName:
                    description: |-
                      TlsSecretName defines secretname at the VMAuth namespace with cert and key
                      https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
                    type: string
                type: object
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.
                  fetch secrets for injection into the vmSingle configuration from external sources. Any
                  errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                  Using initContainers for any use case other then secret fetching is entirely outside the scope
                  of what the maintainers will support and by doing so, you accept that this behaviour may break
                  at any time without notice.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              license:
                description: |-
                  License allows to configure license key to be used for enterprise features.
                  Using license key is supported starting from VictoriaMetrics v1.94.0.
                  See: https://docs.victoriametrics.com/enterprise.html
                properties:
                  key:
                    description: |-
                      Enterprise license key. This flag is available only in VictoriaMetrics enterprise.
                      Documentation - https://docs.victoriametrics.com/enterprise.html
                      for more information, visit https://victoriametrics.com/products/enterprise/ .
                      To request a trial license, go to https://victoriametrics.com/products/enterprise/trial/
                    type: string
                  keyRef:
                    description: KeyRef is reference to secret with license key for
                      enterprise features.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              logFormat:
                description: LogFormat for VMAuth to be configured with.
                enum:
                - default
                - json
                type: string
              logLevel:
                description: LogLevel for victoria metrics single to be configured
                  with.
                enum:
                - INFO
                - WARN
                - ERROR
                - FATAL
                - PANIC
                type: string
              minReadySeconds:
                description: |-
                  MinReadySeconds defines a minim number os seconds to wait before starting update next pod
                  if previous in healthy state
                format: int32
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              paused:
                description: |-
                  Paused If set to true all actions on the underlaying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podDisruptionBudget:
                description: PodDisruptionBudget created by operator
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at most "maxUnavailable" pods selected by
                      "selector" are unavailable after the eviction, i.e. even in absence of
                      the evicted pod. For example, one can prevent all voluntary evictions
                      by specifying 0. This is a mutually exclusive setting with "minAvailable".
                    x-kubernetes-int-or-string: true
                  minAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at least "minAvailable" pods selected by
                      "selector" will still be available after the eviction, i.e. even in the
                      absence of the evicted pod.  So for example you can prevent all voluntary
                      evictions by specifying "100%".
                    x-kubernetes-int-or-string: true
                  selectorLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      replaces default labels selector generated by operator
                      it's useful when you need to create custom budget
                    type: object
                type: object
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the VMAuth pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              port:
                description: Port listen port
                type: string
              priorityClassName:
                description: PriorityClassName assigned to the Pods
                type: string
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              replicaCount:
                description: ReplicaCount is the expected size of the VMAuth
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the StatefulSet's revision history.
                  Defaults to 10.
                format: int32
                type: integer
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the VMAuth
                  object, which shall be mounted into the VMAuth Pods.
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              selectAllByDefault:
                description: |-
                  SelectAllByDefault changes default behavior for empty CRD selectors, such userSelector.
                  with selectAllByDefault: true and empty userSelector and userNamespaceSelector
                  Operator selects all exist users
                  with selectAllByDefault: false - selects nothing
                type: boolean
              serviceAccountName:
                description: |-
                  ServiceAccountName is the name of the ServiceAccount to use to run the
                  VMAuth Pods.
                type: string
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vmauth VMServiceScrape
                  spec
                required:
                - endpoints
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceSpec:
                description: ServiceSpec that will be added to vmsingle service spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              unauthorizedAccessConfig:
                description: UnauthorizedAccessConfig configures access for un authorized
                  users
                items:
                  properties:
                    discover_backend_ips:
                      description: DiscoverBackendIPs instructs discovering URLPrefix
                        backend IPs via DNS.
                      type: boolean
                    drop_src_path_prefix_parts:
                      description: |-
                        DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                        See https://docs.victoriametrics.com/vmauth.html#dropping-request-path-prefix for more details.
                      type: integer
                    headers:
                      description: |-
                        RequestHeaders represent additional http headers, that vmauth uses
                        in form of ["header_key: header_value"]
                        multiple values for header key:
                        ["header_key: value1,value2"]
                        it's available since 1.68.0 version of vmauth
                      items:
                        type: string
                      type: array
                    ip_filters:
                      description: |-
                        IPFilters defines filter for src ip address
                        enterprise only
                      properties:
                        allow_list:
                          items:
                            type: string
                          type: array
                        deny_list:
                          items:
                            type: string
                          type: array
                      type: object
                    load_balancing_policy:
                      description: |-
                        LoadBalancingPolicy defines load balancing policy to use for backend urls.
                        Supported policies: least_loaded, first_available.
                        See https://docs.victoriametrics.com/vmauth.html#load-balancing for more details (default "least_loaded")
                      enum:
                      - least_loaded
                      - first_available
                      type: string
                    max_concurrent_requests:
                      description: |-
                        MaxConcurrentRequests defines max concurrent requests per user
                        300 is default value for vmauth
                      type: integer
                    response_headers:
                      description: |-
                        ResponseHeaders represent additional http headers, that vmauth adds for request response
                        in form of ["header_key: header_value"]
                        multiple values for header key:
                        ["header_key: value1,value2"]
                        it's available since 1.93.0 version of vmauth
                      items:
                        type: string
                      type: array
                    retry_status_codes:
                      description: |-
                        RetryStatusCodes defines http status codes in numeric format for request retries
                        Can be defined per target or at VMUser.spec level
                        e.g. [429,503]
                      items:
                        type: integer
                      type: array
                    src_headers:
                      description: SrcHeaders is an optional list of headers, which
                        must match request headers.
                      items:
                        type: string
                      type: array
                    src_hosts:
                      description: SrcHosts is an optional list of regular expressions,
                        which must match the request hostname.
                      items:
                        type: string
                      type: array
                    src_paths:
                      description: SrcPaths is an optional list of regular expressions,
                        which must match the request path.
                      items:
                        type: string
                      type: array
                    src_query_args:
                      description: SrcQueryArgs is an optional list of query args,
                        which must match request URL query args.
                      items:
                        type: string
                      type: array
                    url_prefix:
                      description: UrlPrefix contains backend url prefixes for the
                        proxied request url.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              unauthorizedAccessConfigOption:
                properties:
                  default_url:
                    description: |-
                      DefaultURLs backend url for non-matching paths filter
                      usually used for default backend with error message
                    items:
                      type: string
                    type: array
                  discover_backend_ips:
                    description: DiscoverBackendIPs instructs discovering URLPrefix
                      backend IPs via DNS.
                    type: boolean
                  drop_src_path_prefix_parts:
                    description: |-
                      DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                      See https://docs.victoriametrics.com/vmauth.html#dropping-request-path-prefix for more details.
                    type: integer
                  headers:
                    description: |-
                      Headers represent additional http headers, that vmauth uses
                      in form of ["header_key: header_value"]
                      multiple values for header key:
                      ["header_key: value1,value2"]
                      it's available since 1.68.0 version of vmauth
                    items:
                      type: string
                    type: array
                  ip_filters:
                    description: |-
                      IPFilters defines per target src ip filters
                      supported only with enterprise version of vmauth
                      https://docs.victoriametrics.com/vmauth.html#ip-filters
                    properties:
                      allow_list:
                        items:
                          type: string
                        type: array
                      deny_list:
                        items:
                          type: string
                        type: array
                    type: object
                  load_balancing_policy:
                    description: |-
                      LoadBalancingPolicy defines load balancing policy to use for backend urls.
                      Supported policies: least_loaded, first_available.
                      See https://docs.victoriametrics.com/vmauth.html#load-balancing for more details (default "least_loaded")
                    enum:
                    - least_loaded
                    - first_available
                    type: string
                  max_concurrent_requests:
                    description: |-
                      MaxConcurrentRequests defines max concurrent requests per user
                      300 is default value for vmauth
                    type: integer
                  response_headers:
                    description: |-
                      ResponseHeaders represent additional http headers, that vmauth adds for request response
                      in form of ["header_key: header_value"]
                      multiple values for header key:
                      ["header_key: value1,value2"]
                      it's available since 1.93.0 version of vmauth
                    items:
                      type: string
                    type: array
                  retry_status_codes:
                    description: |-
                      RetryStatusCodes defines http status codes in numeric format for request retries
                      e.g. [429,503]
                    items:
                      type: integer
                    type: array
                  tls_ca_file:
                    type: string
                  tls_cert_file:
                    type: string
                  tls_insecure_skip_verify:
                    description: |-
                      TLSInsecureSkipVerify - whether to skip TLS verification when connecting to backend over HTTPS.
                      See https://docs.victoriametrics.com/vmauth.html#backend-tls-setup
                    type: boolean
                  tls_key_file:
                    type: string
                  tls_server_name:
                    type: string
                type: object
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              userNamespaceSelector:
                description: |-
                  UserNamespaceSelector Namespaces to be selected for  VMAuth discovery.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAuth namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              userSelector:
                description: |-
                  UserSelector defines VMUser to be selected for config file generation.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAuth namespace.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the VMAuth container,
                  that are generated as a result of StorageSpec objects.
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output deploy definition.
                  Volumes specified will be appended to other volumes that are generated as a result of
                  StorageSpec objects.
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            type: object
          status:
            description: VMAuthStatus defines the observed state of VMAuth
            properties:
              reason:
                description: Reason defines fail reason for update process, effective
                  only for statefuleMode
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout, effective
                  only for statefuleMode
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
