/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen-v0.32. DO NOT EDIT.

package v1alpha1

import (
	operatorv1alpha1 "github.com/VictoriaMetrics/operator/api/operator/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// VMDistributedClusterLister helps list VMDistributedClusters.
// All objects returned here must be treated as read-only.
type VMDistributedClusterLister interface {
	// List lists all VMDistributedClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1alpha1.VMDistributedCluster, err error)
	// VMDistributedClusters returns an object that can list and get VMDistributedClusters.
	VMDistributedClusters(namespace string) VMDistributedClusterNamespaceLister
	VMDistributedClusterListerExpansion
}

// vMDistributedClusterLister implements the VMDistributedClusterLister interface.
type vMDistributedClusterLister struct {
	listers.ResourceIndexer[*operatorv1alpha1.VMDistributedCluster]
}

// NewVMDistributedClusterLister returns a new VMDistributedClusterLister.
func NewVMDistributedClusterLister(indexer cache.Indexer) VMDistributedClusterLister {
	return &vMDistributedClusterLister{listers.New[*operatorv1alpha1.VMDistributedCluster](indexer, operatorv1alpha1.Resource("vmdistributedcluster"))}
}

// VMDistributedClusters returns an object that can list and get VMDistributedClusters.
func (s *vMDistributedClusterLister) VMDistributedClusters(namespace string) VMDistributedClusterNamespaceLister {
	return vMDistributedClusterNamespaceLister{listers.NewNamespaced[*operatorv1alpha1.VMDistributedCluster](s.ResourceIndexer, namespace)}
}

// VMDistributedClusterNamespaceLister helps list and get VMDistributedClusters.
// All objects returned here must be treated as read-only.
type VMDistributedClusterNamespaceLister interface {
	// List lists all VMDistributedClusters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1alpha1.VMDistributedCluster, err error)
	// Get retrieves the VMDistributedCluster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*operatorv1alpha1.VMDistributedCluster, error)
	VMDistributedClusterNamespaceListerExpansion
}

// vMDistributedClusterNamespaceLister implements the VMDistributedClusterNamespaceLister
// interface.
type vMDistributedClusterNamespaceLister struct {
	listers.ResourceIndexer[*operatorv1alpha1.VMDistributedCluster]
}
