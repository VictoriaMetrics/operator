/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by client-gen-v0.32. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/VictoriaMetrics/operator/api/client/versioned/typed/operator/v1beta1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeOperatorV1beta1 struct {
	*testing.Fake
}

func (c *FakeOperatorV1beta1) VLogs(namespace string) v1beta1.VLogsInterface {
	return newFakeVLogs(c, namespace)
}

func (c *FakeOperatorV1beta1) VMAgents(namespace string) v1beta1.VMAgentInterface {
	return newFakeVMAgents(c, namespace)
}

func (c *FakeOperatorV1beta1) VMAlerts(namespace string) v1beta1.VMAlertInterface {
	return newFakeVMAlerts(c, namespace)
}

func (c *FakeOperatorV1beta1) VMAlertmanagers(namespace string) v1beta1.VMAlertmanagerInterface {
	return newFakeVMAlertmanagers(c, namespace)
}

func (c *FakeOperatorV1beta1) VMAlertmanagerConfigs(namespace string) v1beta1.VMAlertmanagerConfigInterface {
	return newFakeVMAlertmanagerConfigs(c, namespace)
}

func (c *FakeOperatorV1beta1) VMAuths(namespace string) v1beta1.VMAuthInterface {
	return newFakeVMAuths(c, namespace)
}

func (c *FakeOperatorV1beta1) VMClusters(namespace string) v1beta1.VMClusterInterface {
	return newFakeVMClusters(c, namespace)
}

func (c *FakeOperatorV1beta1) VMNodeScrapes(namespace string) v1beta1.VMNodeScrapeInterface {
	return newFakeVMNodeScrapes(c, namespace)
}

func (c *FakeOperatorV1beta1) VMPodScrapes(namespace string) v1beta1.VMPodScrapeInterface {
	return newFakeVMPodScrapes(c, namespace)
}

func (c *FakeOperatorV1beta1) VMProbes(namespace string) v1beta1.VMProbeInterface {
	return newFakeVMProbes(c, namespace)
}

func (c *FakeOperatorV1beta1) VMRules(namespace string) v1beta1.VMRuleInterface {
	return newFakeVMRules(c, namespace)
}

func (c *FakeOperatorV1beta1) VMScrapeConfigs(namespace string) v1beta1.VMScrapeConfigInterface {
	return newFakeVMScrapeConfigs(c, namespace)
}

func (c *FakeOperatorV1beta1) VMServiceScrapes(namespace string) v1beta1.VMServiceScrapeInterface {
	return newFakeVMServiceScrapes(c, namespace)
}

func (c *FakeOperatorV1beta1) VMSingles(namespace string) v1beta1.VMSingleInterface {
	return newFakeVMSingles(c, namespace)
}

func (c *FakeOperatorV1beta1) VMStaticScrapes(namespace string) v1beta1.VMStaticScrapeInterface {
	return newFakeVMStaticScrapes(c, namespace)
}

func (c *FakeOperatorV1beta1) VMUsers(namespace string) v1beta1.VMUserInterface {
	return newFakeVMUsers(c, namespace)
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeOperatorV1beta1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
