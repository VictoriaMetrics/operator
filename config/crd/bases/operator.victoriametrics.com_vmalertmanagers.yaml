apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  name: vmalertmanagers.operator.victoriametrics.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.version
    description: The version of VMAlertmanager
    name: Version
    type: string
  - JSONPath: .spec.ReplicaCount
    description: The desired replicas number of Alertmanagers
    name: ReplicaCount
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: operator.victoriametrics.com
  names:
    kind: VMAlertmanager
    listKind: VMAlertmanagerList
    plural: vmalertmanagers
    shortNames:
    - vma
    singular: vmalertmanager
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: VMAlertmanager represents Victoria-Metrics deployment for Alertmanager.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: 'Specification of the desired behavior of the VMAlertmanager
            cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
          properties:
            additionalPeers:
              description: AdditionalPeers allows injecting a set of additional Alertmanagers
                to peer with to form a highly available cluster.
              items:
                type: string
              type: array
            affinity:
              description: Affinity If specified, the pod's scheduling constraints.
              type: object
            clusterAdvertiseAddress:
              description: 'ClusterAdvertiseAddress is the explicit address to advertise
                in cluster. Needs to be provided for non RFC1918 [1] (public) addresses.
                [1] RFC1918: https://tools.ietf.org/html/rfc1918'
              type: string
            configMaps:
              description: ConfigMaps is a list of ConfigMaps in the same namespace
                as the VMAlertmanager object, which shall be mounted into the VMAlertmanager
                Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.
              items:
                type: string
              type: array
            configRawYaml:
              description: ConfigRawYaml - raw configuration for alertmanager, it
                helps it to start without secret. priority -> hardcoded ConfigRaw
                -> ConfigRaw, provided by user -> ConfigSecret.
              type: string
            configSecret:
              description: 'ConfigSecret is the name of a Kubernetes Secret in the
                same namespace as the VMAlertmanager object, which contains configuration
                for this VMAlertmanager, configuration must be inside secret key:
                alertmanager.yaml. It must be created by user. instance. Defaults
                to ''vmalertmanager-<alertmanager-name>'' The secret is mounted into
                /etc/alertmanager/config.'
              type: string
            containers:
              description: Containers allows injecting additional containers or patching
                existing containers. This is meant to allow adding an authentication
                proxy to an VMAlertmanager pod.
              items:
                description: A single application container that you want to run within
                  a pod.
                required:
                - name
                type: object
              type: array
            dnsPolicy:
              description: DNSPolicy sets DNS policy for the pod
              type: string
            externalURL:
              description: ExternalURL the VMAlertmanager instances will be available
                under. This is necessary to generate correct URLs. This is necessary
                if VMAlertmanager is not served from root of a DNS name.
              type: string
            hostNetwork:
              description: HostNetwork controls whether the pod may use the node network
                namespace
              type: boolean
            image:
              description: Image - docker image settings for VMAlertmanager if no
                specified operator uses default config version
              properties:
                pullPolicy:
                  description: PullPolicy describes how to pull docker image
                  type: string
                repository:
                  description: Repository contains name of docker image + it's repository
                    if needed
                  type: string
                tag:
                  description: Tag contains desired docker image version
                  type: string
              type: object
            imagePullSecrets:
              description: ImagePullSecrets An optional list of references to secrets
                in the same namespace to use for pulling images from registries see
                http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              type: array
            initContainers:
              description: 'InitContainers allows adding initContainers to the pod
                definition. Those can be used to e.g. fetch secrets for injection
                into the VMAlertmanager configuration from external sources. Any errors
                during the execution of an initContainer will lead to a restart of
                the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                Using initContainers for any use case other then secret fetching is
                entirely outside the scope of what the maintainers will support and
                by doing so, you accept that this behaviour may break at any time
                without notice.'
              items:
                description: A single application container that you want to run within
                  a pod.
                required:
                - name
                type: object
              type: array
            listenLocal:
              description: ListenLocal makes the VMAlertmanager server listen on loopback,
                so that it does not bind against the Pod IP. Note this is only for
                the VMAlertmanager UI, not the gossip communication.
              type: boolean
            livenessProbe:
              description: LivenessProbe that will be added CRD pod
              properties:
                exec:
                  description: One and only one of the following should be specified.
                    Exec specifies the action to take.
                  properties:
                    command:
                      description: Command is the command line to execute inside the
                        container, the working directory for the command  is root
                        ('/') in the container's filesystem. The command is simply
                        exec'd, it is not run inside a shell, so traditional shell
                        instructions ('|', etc) won't work. To use a shell, you need
                        to explicitly call out to that shell. Exit status of 0 is
                        treated as live/healthy and non-zero is unhealthy.
                      items:
                        type: string
                      type: array
                  type: object
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  format: int32
                  type: integer
                httpGet:
                  description: HTTPGet specifies the http request to perform.
                  properties:
                    host:
                      description: Host name to connect to, defaults to the pod IP.
                        You probably want to set "Host" in httpHeaders instead.
                      type: string
                    httpHeaders:
                      description: Custom headers to set in the request. HTTP allows
                        repeated headers.
                      items:
                        description: HTTPHeader describes a custom header to be used
                          in HTTP probes
                        properties:
                          name:
                            description: The header field name
                            type: string
                          value:
                            description: The header field value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    path:
                      description: Path to access on the HTTP server.
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                    scheme:
                      description: Scheme to use for connecting to the host. Defaults
                        to HTTP.
                      type: string
                  required:
                  - port
                  type: object
                initialDelaySeconds:
                  description: 'Number of seconds after the container has started
                    before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  format: int32
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness
                    and startup. Minimum value is 1.
                  format: int32
                  type: integer
                tcpSocket:
                  description: 'TCPSocket specifies an action involving a TCP port.
                    TCP hooks not yet supported TODO: implement a realistic TCP lifecycle
                    hook'
                  properties:
                    host:
                      description: 'Optional: Host name to connect to, defaults to
                        the pod IP.'
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Number or name of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                terminationGracePeriodSeconds:
                  description: Optional duration in seconds the pod needs to terminate
                    gracefully upon probe failure. The grace period is the duration
                    in seconds after the processes running in the pod are sent a termination
                    signal and the time when the processes are forcibly halted with
                    a kill signal. Set this value longer than the expected cleanup
                    time for your process. If this value is nil, the pod's terminationGracePeriodSeconds
                    will be used. Otherwise, this value overrides the value provided
                    by the pod spec. Value must be non-negative integer. The value
                    zero indicates stop immediately via the kill signal (no opportunity
                    to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod
                    feature gate.
                  format: int64
                  type: integer
                timeoutSeconds:
                  description: 'Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
              type: object
            logFormat:
              description: LogFormat for VMAlertmanager to be configured with.
              type: string
            logLevel:
              description: Log level for VMAlertmanager to be configured with.
              type: string
            nodeSelector:
              additionalProperties:
                type: string
              description: NodeSelector Define which Nodes the Pods are scheduled
                on.
              type: object
            paused:
              description: Paused If set to true all actions on the underlaying managed
                objects are not goint to be performed, except for delete actions.
              type: boolean
            podDisruptionBudget:
              description: PodDisruptionBudget created by operator
              properties:
                maxUnavailable:
                  anyOf:
                  - type: integer
                  - type: string
                  description: An eviction is allowed if at most "maxUnavailable"
                    pods selected by "selector" are unavailable after the eviction,
                    i.e. even in absence of the evicted pod. For example, one can
                    prevent all voluntary evictions by specifying 0. This is a mutually
                    exclusive setting with "minAvailable".
                  x-kubernetes-int-or-string: true
                minAvailable:
                  anyOf:
                  - type: integer
                  - type: string
                  description: An eviction is allowed if at least "minAvailable" pods
                    selected by "selector" will still be available after the eviction,
                    i.e. even in the absence of the evicted pod.  So for example you
                    can prevent all voluntary evictions by specifying "100%".
                  x-kubernetes-int-or-string: true
              type: object
            podMetadata:
              description: PodMetadata configures Labels and Annotations which are
                propagated to the alertmanager pods.
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description: 'Annotations is an unstructured key value map stored
                    with a resource that may be set by external tools to store and
                    retrieve arbitrary metadata. They are not queryable and should
                    be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  description: 'Labels Map of string keys and values that can be used
                    to organize and categorize (scope and select) objects. May match
                    selectors of replication controllers and services. More info:
                    http://kubernetes.io/docs/user-guide/labels'
                  type: object
                name:
                  description: 'Name must be unique within a namespace. Is required
                    when creating resources, although some resources may allow a client
                    to request the generation of an appropriate name automatically.
                    Name is primarily intended for creation idempotence and configuration
                    definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              type: object
            podSecurityPolicyName:
              description: PodSecurityPolicyName - defines name for podSecurityPolicy
                in case of empty value, prefixedName will be used.
              type: string
            portName:
              description: PortName used for the pods and governing service. This
                defaults to web
              type: string
            priorityClassName:
              description: PriorityClassName class assigned to the Pods
              type: string
            readinessProbe:
              description: ReadinessProbe that will be added CRD pod
              properties:
                exec:
                  description: One and only one of the following should be specified.
                    Exec specifies the action to take.
                  properties:
                    command:
                      description: Command is the command line to execute inside the
                        container, the working directory for the command  is root
                        ('/') in the container's filesystem. The command is simply
                        exec'd, it is not run inside a shell, so traditional shell
                        instructions ('|', etc) won't work. To use a shell, you need
                        to explicitly call out to that shell. Exit status of 0 is
                        treated as live/healthy and non-zero is unhealthy.
                      items:
                        type: string
                      type: array
                  type: object
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  format: int32
                  type: integer
                httpGet:
                  description: HTTPGet specifies the http request to perform.
                  properties:
                    host:
                      description: Host name to connect to, defaults to the pod IP.
                        You probably want to set "Host" in httpHeaders instead.
                      type: string
                    httpHeaders:
                      description: Custom headers to set in the request. HTTP allows
                        repeated headers.
                      items:
                        description: HTTPHeader describes a custom header to be used
                          in HTTP probes
                        properties:
                          name:
                            description: The header field name
                            type: string
                          value:
                            description: The header field value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    path:
                      description: Path to access on the HTTP server.
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                    scheme:
                      description: Scheme to use for connecting to the host. Defaults
                        to HTTP.
                      type: string
                  required:
                  - port
                  type: object
                initialDelaySeconds:
                  description: 'Number of seconds after the container has started
                    before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  format: int32
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness
                    and startup. Minimum value is 1.
                  format: int32
                  type: integer
                tcpSocket:
                  description: 'TCPSocket specifies an action involving a TCP port.
                    TCP hooks not yet supported TODO: implement a realistic TCP lifecycle
                    hook'
                  properties:
                    host:
                      description: 'Optional: Host name to connect to, defaults to
                        the pod IP.'
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Number or name of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                terminationGracePeriodSeconds:
                  description: Optional duration in seconds the pod needs to terminate
                    gracefully upon probe failure. The grace period is the duration
                    in seconds after the processes running in the pod are sent a termination
                    signal and the time when the processes are forcibly halted with
                    a kill signal. Set this value longer than the expected cleanup
                    time for your process. If this value is nil, the pod's terminationGracePeriodSeconds
                    will be used. Otherwise, this value overrides the value provided
                    by the pod spec. Value must be non-negative integer. The value
                    zero indicates stop immediately via the kill signal (no opportunity
                    to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod
                    feature gate.
                  format: int64
                  type: integer
                timeoutSeconds:
                  description: 'Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
              type: object
            replicaCount:
              description: ReplicaCount Size is the expected size of the alertmanager
                cluster. The controller will eventually make the size of the running
                cluster equal to the expected
              format: int32
              minimum: 1
              type: integer
            resources:
              description: Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                  type: object
              type: object
            retention:
              description: Retention Time duration VMAlertmanager shall retain data
                for. Default is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)`
                (milliseconds seconds minutes hours).
              pattern: '[0-9]+(ms|s|m|h)'
              type: string
            routePrefix:
              description: RoutePrefix VMAlertmanager registers HTTP handlers for.
                This is useful, if using ExternalURL and a proxy is rewriting HTTP
                routes of a request, and the actual ExternalURL is still true, but
                the server serves requests under a different route prefix. For example
                for use with `kubectl proxy`.
              type: string
            runtimeClassName:
              description: RuntimeClassName - defines runtime class for kubernetes
                pod. https://kubernetes.io/docs/concepts/containers/runtime-class/
              type: string
            schedulerName:
              description: SchedulerName - defines kubernetes scheduler name
              type: string
            secrets:
              description: Secrets is a list of Secrets in the same namespace as the
                VMAlertmanager object, which shall be mounted into the VMAlertmanager
                Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>
              items:
                type: string
              type: array
            securityContext:
              description: SecurityContext holds pod-level security attributes and
                common container settings. This defaults to the default PodSecurityContext.
              properties:
                fsGroup:
                  description: "A special supplemental group that applies to all containers
                    in a pod. Some volume types allow the Kubelet to change the ownership
                    of that volume to be owned by the pod: \n 1. The owning GID will
                    be the FSGroup 2. The setgid bit is set (new files created in
                    the volume will be owned by FSGroup) 3. The permission bits are
                    OR'd with rw-rw---- \n If unset, the Kubelet will not modify the
                    ownership and permissions of any volume."
                  format: int64
                  type: integer
                fsGroupChangePolicy:
                  description: 'fsGroupChangePolicy defines behavior of changing ownership
                    and permission of the volume before being exposed inside Pod.
                    This field will only apply to volume types which support fsGroup
                    based ownership(and permissions). It will have no effect on ephemeral
                    volume types such as: secret, configmaps and emptydir. Valid values
                    are "OnRootMismatch" and "Always". If not specified, "Always"
                    is used.'
                  type: string
                runAsGroup:
                  description: The GID to run the entrypoint of the container process.
                    Uses runtime default if unset. May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  format: int64
                  type: integer
                runAsNonRoot:
                  description: Indicates that the container must run as a non-root
                    user. If true, the Kubelet will validate the image at runtime
                    to ensure that it does not run as UID 0 (root) and fail to start
                    the container if it does. If unset or false, no such validation
                    will be performed. May also be set in SecurityContext.  If set
                    in both SecurityContext and PodSecurityContext, the value specified
                    in SecurityContext takes precedence.
                  type: boolean
                runAsUser:
                  description: The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified. May
                    also be set in SecurityContext.  If set in both SecurityContext
                    and PodSecurityContext, the value specified in SecurityContext
                    takes precedence for that container.
                  format: int64
                  type: integer
                seLinuxOptions:
                  description: The SELinux context to be applied to all containers.
                    If unspecified, the container runtime will allocate a random SELinux
                    context for each container.  May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the
                        container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the
                        container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the
                        container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the
                        container.
                      type: string
                  type: object
                seccompProfile:
                  description: The seccomp options to use by the containers in this
                    pod.
                  properties:
                    localhostProfile:
                      description: localhostProfile indicates a profile defined in
                        a file on the node should be used. The profile must be preconfigured
                        on the node to work. Must be a descending path, relative to
                        the kubelet's configured seccomp profile location. Must only
                        be set if type is "Localhost".
                      type: string
                    type:
                      description: "type indicates which kind of seccomp profile will
                        be applied. Valid options are: \n Localhost - a profile defined
                        in a file on the node should be used. RuntimeDefault - the
                        container runtime default profile should be used. Unconfined
                        - no profile should be applied."
                      type: string
                  required:
                  - type
                  type: object
                supplementalGroups:
                  description: A list of groups applied to the first process run in
                    each container, in addition to the container's primary GID.  If
                    unspecified, no groups will be added to any container.
                  items:
                    format: int64
                    type: integer
                  type: array
                sysctls:
                  description: Sysctls hold a list of namespaced sysctls used for
                    the pod. Pods with unsupported sysctls (by the container runtime)
                    might fail to launch.
                  items:
                    description: Sysctl defines a kernel parameter to be set
                    properties:
                      name:
                        description: Name of a property to set
                        type: string
                      value:
                        description: Value of a property to set
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                windowsOptions:
                  description: The Windows specific settings applied to all containers.
                    If unspecified, the options within a container's SecurityContext
                    will be used. If set in both SecurityContext and PodSecurityContext,
                    the value specified in SecurityContext takes precedence.
                  properties:
                    gmsaCredentialSpec:
                      description: GMSACredentialSpec is where the GMSA admission
                        webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                        inlines the contents of the GMSA credential spec named by
                        the GMSACredentialSpecName field.
                      type: string
                    gmsaCredentialSpecName:
                      description: GMSACredentialSpecName is the name of the GMSA
                        credential spec to use.
                      type: string
                    runAsUserName:
                      description: The UserName in Windows to run the entrypoint of
                        the container process. Defaults to the user specified in image
                        metadata if unspecified. May also be set in PodSecurityContext.
                        If set in both SecurityContext and PodSecurityContext, the
                        value specified in SecurityContext takes precedence.
                      type: string
                  type: object
              type: object
            serviceAccountName:
              description: ServiceAccountName is the name of the ServiceAccount to
                use
              type: string
            serviceSpec:
              description: ServiceSpec that will be added to vmalertmanager service
                spec
              properties:
                metadata:
                  description: EmbeddedObjectMetadata defines objectMeta for additional
                    service.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels Map of string keys and values that can
                        be used to organize and categorize (scope and select) objects.
                        May match selectors of replication controllers and services.
                        More info: http://kubernetes.io/docs/user-guide/labels'
                      type: object
                    name:
                      description: 'Name must be unique within a namespace. Is required
                        when creating resources, although some resources may allow
                        a client to request the generation of an appropriate name
                        automatically. Name is primarily intended for creation idempotence
                        and configuration definition. Cannot be updated. More info:
                        http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                  type: object
                spec:
                  description: 'ServiceSpec describes the attributes that a user creates
                    on a service. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                  properties:
                    allocateLoadBalancerNodePorts:
                      description: allocateLoadBalancerNodePorts defines if NodePorts
                        will be automatically allocated for services with type LoadBalancer.  Default
                        is "true". It may be set to "false" if the cluster load-balancer
                        does not rely on NodePorts. allocateLoadBalancerNodePorts
                        may only be set for services with type LoadBalancer and will
                        be cleared if the type is changed to any other type. This
                        field is alpha-level and is only honored by servers that enable
                        the ServiceLBNodePortControl feature.
                      type: boolean
                    clusterIP:
                      description: 'clusterIP is the IP address of the service and
                        is usually assigned randomly. If an address is specified manually,
                        is in-range (as per system configuration), and is not in use,
                        it will be allocated to the service; otherwise creation of
                        the service will fail. This field may not be changed through
                        updates unless the type field is also being changed to ExternalName
                        (which requires this field to be blank) or the type field
                        is being changed from ExternalName (in which case this field
                        may optionally be specified, as describe above).  Valid values
                        are "None", empty string (""), or a valid IP address. Setting
                        this to "None" makes a "headless service" (no virtual IP),
                        which is useful when direct endpoint connections are preferred
                        and proxying is not required.  Only applies to types ClusterIP,
                        NodePort, and LoadBalancer. If this field is specified when
                        creating a Service of type ExternalName, creation will fail.
                        This field will be wiped when updating a Service to type ExternalName.
                        More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                      type: string
                    externalIPs:
                      description: externalIPs is a list of IP addresses for which
                        nodes in the cluster will also accept traffic for this service.  These
                        IPs are not managed by Kubernetes.  The user is responsible
                        for ensuring that traffic arrives at a node with this IP.  A
                        common example is external load-balancers that are not part
                        of the Kubernetes system.
                      items:
                        type: string
                      type: array
                    externalName:
                      description: externalName is the external reference that discovery
                        mechanisms will return as an alias for this service (e.g.
                        a DNS CNAME record). No proxying will be involved.  Must be
                        a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                        and requires `type` to be "ExternalName".
                      type: string
                    externalTrafficPolicy:
                      description: externalTrafficPolicy denotes if this Service desires
                        to route external traffic to node-local or cluster-wide endpoints.
                        "Local" preserves the client source IP and avoids a second
                        hop for LoadBalancer and Nodeport type services, but risks
                        potentially imbalanced traffic spreading. "Cluster" obscures
                        the client source IP and may cause a second hop to another
                        node, but should have good overall load-spreading.
                      type: string
                    healthCheckNodePort:
                      description: healthCheckNodePort specifies the healthcheck nodePort
                        for the service. This only applies when type is set to LoadBalancer
                        and externalTrafficPolicy is set to Local. If a value is specified,
                        is in-range, and is not in use, it will be used.  If not specified,
                        a value will be automatically allocated.  External systems
                        (e.g. load-balancers) can use this port to determine if a
                        given node holds endpoints for this service or not.  If this
                        field is specified when creating a Service which does not
                        need it, creation will fail. This field will be wiped when
                        updating a Service to no longer need it (e.g. changing type).
                      format: int32
                      type: integer
                    internalTrafficPolicy:
                      description: InternalTrafficPolicy specifies if the cluster
                        internal traffic should be routed to all endpoints or node-local
                        endpoints only. "Cluster" routes internal traffic to a Service
                        to all endpoints. "Local" routes traffic to node-local endpoints
                        only, traffic is dropped if no node-local endpoints are ready.
                        The default value is "Cluster".
                      type: string
                    ipFamilyPolicy:
                      description: IPFamilyPolicy represents the dual-stack-ness requested
                        or required by this Service, and is gated by the "IPv6DualStack"
                        feature gate.  If there is no value provided, then this field
                        will be set to SingleStack. Services can be "SingleStack"
                        (a single IP family), "PreferDualStack" (two IP families on
                        dual-stack configured clusters or a single IP family on single-stack
                        clusters), or "RequireDualStack" (two IP families on dual-stack
                        configured clusters, otherwise fail). The ipFamilies and clusterIPs
                        fields depend on the value of this field.  This field will
                        be wiped when updating a service to type ExternalName.
                      type: string
                    loadBalancerClass:
                      description: loadBalancerClass is the class of the load balancer
                        implementation this Service belongs to. If specified, the
                        value of this field must be a label-style identifier, with
                        an optional prefix, e.g. "internal-vip" or "example.com/internal-vip".
                        Unprefixed names are reserved for end-users. This field can
                        only be set when the Service type is 'LoadBalancer'. If not
                        set, the default load balancer implementation is used, today
                        this is typically done through the cloud provider integration,
                        but should apply for any default implementation. If set, it
                        is assumed that a load balancer implementation is watching
                        for Services with a matching class. Any default load balancer
                        implementation (e.g. cloud providers) should ignore Services
                        that set this field. This field can only be set when creating
                        or updating a Service to type 'LoadBalancer'. Once set, it
                        can not be changed. This field will be wiped when a service
                        is updated to a non 'LoadBalancer' type.
                      type: string
                    loadBalancerIP:
                      description: 'Only applies to Service Type: LoadBalancer LoadBalancer
                        will get created with the IP specified in this field. This
                        feature depends on whether the underlying cloud-provider supports
                        specifying the loadBalancerIP when a load balancer is created.
                        This field will be ignored if the cloud-provider does not
                        support the feature.'
                      type: string
                    loadBalancerSourceRanges:
                      description: 'If specified and supported by the platform, this
                        will restrict traffic through the cloud-provider load-balancer
                        will be restricted to the specified client IPs. This field
                        will be ignored if the cloud-provider does not support the
                        feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                      items:
                        type: string
                      type: array
                    publishNotReadyAddresses:
                      description: publishNotReadyAddresses indicates that any agent
                        which deals with endpoints for this Service should disregard
                        any indications of ready/not-ready. The primary use case for
                        setting this field is for a StatefulSet's Headless Service
                        to propagate SRV DNS records for its Pods for the purpose
                        of peer discovery. The Kubernetes controllers that generate
                        Endpoints and EndpointSlice resources for Services interpret
                        this to mean that all endpoints are considered "ready" even
                        if the Pods themselves are not. Agents which consume only
                        Kubernetes generated endpoints through the Endpoints or EndpointSlice
                        resources can safely assume this behavior.
                      type: boolean
                    selector:
                      additionalProperties:
                        type: string
                      description: 'Route service traffic to pods with label keys
                        and values matching this selector. If empty or not present,
                        the service is assumed to have an external process managing
                        its endpoints, which Kubernetes will not modify. Only applies
                        to types ClusterIP, NodePort, and LoadBalancer. Ignored if
                        type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                      type: object
                    sessionAffinity:
                      description: 'Supports "ClientIP" and "None". Used to maintain
                        session affinity. Enable client IP based session affinity.
                        Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                      type: string
                    sessionAffinityConfig:
                      description: sessionAffinityConfig contains the configurations
                        of session affinity.
                      properties:
                        clientIP:
                          description: clientIP contains the configurations of Client
                            IP based session affinity.
                          properties:
                            timeoutSeconds:
                              description: timeoutSeconds specifies the seconds of
                                ClientIP type session sticky time. The value must
                                be >0 && <=86400(for 1 day) if ServiceAffinity ==
                                "ClientIP". Default value is 10800(for 3 hours).
                              format: int32
                              type: integer
                          type: object
                      type: object
                    topologyKeys:
                      description: topologyKeys is a preference-order list of topology
                        keys which implementations of services should use to preferentially
                        sort endpoints when accessing this Service, it can not be
                        used at the same time as externalTrafficPolicy=Local. Topology
                        keys must be valid label keys and at most 16 keys may be specified.
                        Endpoints are chosen based on the first topology key with
                        available backends. If this field is specified and all entries
                        have no backends that match the topology of the client, the
                        service has no backends for that client and connections should
                        fail. The special value "*" may be used to mean "any topology".
                        This catch-all value, if used, only makes sense as the last
                        value in the list. If this is not specified or empty, no topology
                        constraints will be applied. This field is alpha-level and
                        is only honored by servers that enable the ServiceTopology
                        feature. This field is deprecated and will be removed in a
                        future version.
                      items:
                        type: string
                      type: array
                    type:
                      description: 'type determines how the Service is exposed. Defaults
                        to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort,
                        and LoadBalancer. "ClusterIP" allocates a cluster-internal
                        IP address for load-balancing to endpoints. Endpoints are
                        determined by the selector or if that is not specified, by
                        manual construction of an Endpoints object or EndpointSlice
                        objects. If clusterIP is "None", no virtual IP is allocated
                        and the endpoints are published as a set of endpoints rather
                        than a virtual IP. "NodePort" builds on ClusterIP and allocates
                        a port on every node which routes to the same endpoints as
                        the clusterIP. "LoadBalancer" builds on NodePort and creates
                        an external load-balancer (if supported in the current cloud)
                        which routes to the same endpoints as the clusterIP. "ExternalName"
                        aliases this service to the specified externalName. Several
                        other fields do not apply to ExternalName services. More info:
                        https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                      type: string
                  type: object
              required:
              - spec
              type: object
            startupProbe:
              description: StartupProbe that will be added to CRD pod
              properties:
                exec:
                  description: One and only one of the following should be specified.
                    Exec specifies the action to take.
                  properties:
                    command:
                      description: Command is the command line to execute inside the
                        container, the working directory for the command  is root
                        ('/') in the container's filesystem. The command is simply
                        exec'd, it is not run inside a shell, so traditional shell
                        instructions ('|', etc) won't work. To use a shell, you need
                        to explicitly call out to that shell. Exit status of 0 is
                        treated as live/healthy and non-zero is unhealthy.
                      items:
                        type: string
                      type: array
                  type: object
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  format: int32
                  type: integer
                httpGet:
                  description: HTTPGet specifies the http request to perform.
                  properties:
                    host:
                      description: Host name to connect to, defaults to the pod IP.
                        You probably want to set "Host" in httpHeaders instead.
                      type: string
                    httpHeaders:
                      description: Custom headers to set in the request. HTTP allows
                        repeated headers.
                      items:
                        description: HTTPHeader describes a custom header to be used
                          in HTTP probes
                        properties:
                          name:
                            description: The header field name
                            type: string
                          value:
                            description: The header field value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    path:
                      description: Path to access on the HTTP server.
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Name or number of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                    scheme:
                      description: Scheme to use for connecting to the host. Defaults
                        to HTTP.
                      type: string
                  required:
                  - port
                  type: object
                initialDelaySeconds:
                  description: 'Number of seconds after the container has started
                    before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  format: int32
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness
                    and startup. Minimum value is 1.
                  format: int32
                  type: integer
                tcpSocket:
                  description: 'TCPSocket specifies an action involving a TCP port.
                    TCP hooks not yet supported TODO: implement a realistic TCP lifecycle
                    hook'
                  properties:
                    host:
                      description: 'Optional: Host name to connect to, defaults to
                        the pod IP.'
                      type: string
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Number or name of the port to access on the container.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                terminationGracePeriodSeconds:
                  description: Optional duration in seconds the pod needs to terminate
                    gracefully upon probe failure. The grace period is the duration
                    in seconds after the processes running in the pod are sent a termination
                    signal and the time when the processes are forcibly halted with
                    a kill signal. Set this value longer than the expected cleanup
                    time for your process. If this value is nil, the pod's terminationGracePeriodSeconds
                    will be used. Otherwise, this value overrides the value provided
                    by the pod spec. Value must be non-negative integer. The value
                    zero indicates stop immediately via the kill signal (no opportunity
                    to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod
                    feature gate.
                  format: int64
                  type: integer
                timeoutSeconds:
                  description: 'Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
              type: object
            storage:
              description: Storage is the definition of how storage will be used by
                the VMAlertmanager instances.
              properties:
                disableMountSubPath:
                  description: 'Deprecated: subPath usage will be disabled by default
                    in a future release, this option will become unnecessary. DisableMountSubPath
                    allows to remove any subPath usage in volume mounts.'
                  type: boolean
                emptyDir:
                  description: 'EmptyDirVolumeSource to be used by the Prometheus
                    StatefulSets. If specified, used in place of any volumeClaimTemplate.
                    More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                  properties:
                    medium:
                      description: 'What type of storage medium should back this directory.
                        The default is "" which means to use the node''s default medium.
                        Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                      type: string
                    sizeLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'Total amount of local storage required for this
                        EmptyDir volume. The size limit is also applicable for memory
                        medium. The maximum usage on memory medium EmptyDir would
                        be the minimum value between the SizeLimit specified here
                        and the sum of memory limits of all containers in a pod. The
                        default is nil which means that the limit is undefined. More
                        info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                  type: object
                volumeClaimTemplate:
                  description: A PVC spec to be used by the VMAlertManager StatefulSets.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      description: EmbeddedMetadata contains metadata relevant to
                        an EmbeddedResource.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Labels Map of string keys and values that
                            can be used to organize and categorize (scope and select)
                            objects. May match selectors of replication controllers
                            and services. More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                      type: object
                    spec:
                      description: 'Spec defines the desired characteristics of a
                        volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'This field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                            * An existing PVC (PersistentVolumeClaim) * An existing
                            custom resource that implements data population (Alpha)
                            In order to use custom resource types that implement data
                            population, the AnyVolumeDataSource feature gate must
                            be enabled. If the provisioner or an external controller
                            can support the specified data source, it will create
                            a new volume based on the contents of the specified data
                            source.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'Resources represents the minimum resources
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for
                            binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: 'Status represents the current information/status
                        of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        accessModes:
                          description: 'AccessModes contains the actual access modes
                            the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        capacity:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Represents the actual resources of the underlying
                            volume.
                          type: object
                        conditions:
                          description: Current Condition of persistent volume claim.
                            If underlying persistent volume is being resized then
                            the Condition will be set to 'ResizeStarted'.
                          items:
                            description: PersistentVolumeClaimCondition contails details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: Last time we probed the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: Last time the condition transitioned
                                  from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Human-readable message indicating details
                                  about last transition.
                                type: string
                              reason:
                                description: Unique, this should be a short, machine
                                  understandable string that gives the reason for
                                  condition's last transition. If it reports "ResizeStarted"
                                  that means the underlying persistent volume is being
                                  resized.
                                type: string
                              status:
                                type: string
                              type:
                                description: PersistentVolumeClaimConditionType is
                                  a valid value of PersistentVolumeClaimCondition.Type
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        phase:
                          description: Phase represents the current phase of PersistentVolumeClaim.
                          type: string
                      type: object
                  type: object
              type: object
            tolerations:
              description: Tolerations If specified, the pod's tolerations.
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
            topologySpreadConstraints:
              description: TopologySpreadConstraints embedded kubernetes pod configuration
                option, controls how pods are spread across your cluster among failure-domains
                such as regions, zones, nodes, and other user-defined topology domains
                https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
              items:
                description: TopologySpreadConstraint specifies how to spread matching
                  pods among the given topology.
                required:
                - maxSkew
                - topologyKey
                - whenUnsatisfiable
                type: object
              type: array
            volumeMounts:
              description: VolumeMounts allows configuration of additional VolumeMounts
                on the output StatefulSet definition. VolumeMounts specified will
                be appended to other VolumeMounts in the alertmanager container, that
                are generated as a result of StorageSpec objects.
              items:
                description: VolumeMount describes a mounting of a Volume within a
                  container.
                properties:
                  mountPath:
                    description: Path within the container at which the volume should
                      be mounted.  Must not contain ':'.
                    type: string
                  mountPropagation:
                    description: mountPropagation determines how mounts are propagated
                      from the host to container and the other way around. When not
                      set, MountPropagationNone is used. This field is beta in 1.10.
                    type: string
                  name:
                    description: This must match the Name of a Volume.
                    type: string
                  readOnly:
                    description: Mounted read-only if true, read-write otherwise (false
                      or unspecified). Defaults to false.
                    type: boolean
                  subPath:
                    description: Path within the volume from which the container's
                      volume should be mounted. Defaults to "" (volume's root).
                    type: string
                  subPathExpr:
                    description: Expanded path within the volume from which the container's
                      volume should be mounted. Behaves similarly to SubPath but environment
                      variable references $(VAR_NAME) are expanded using the container's
                      environment. Defaults to "" (volume's root). SubPathExpr and
                      SubPath are mutually exclusive.
                    type: string
                required:
                - mountPath
                - name
                type: object
              type: array
            volumes:
              description: Volumes allows configuration of additional volumes on the
                output StatefulSet definition. Volumes specified will be appended
                to other volumes that are generated as a result of StorageSpec objects.
              items:
                description: Volume represents a named volume in a pod that may be
                  accessed by any container in the pod.
                required:
                - name
                type: object
              type: array
          type: object
        status:
          description: 'Most recent observed status of the VMAlertmanager cluster.
            Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
          properties:
            availableReplicas:
              description: AvailableReplicas Total number of available pods (ready
                for at least minReadySeconds) targeted by this VMAlertmanager cluster.
              format: int32
              type: integer
            paused:
              description: Paused Represents whether any actions on the underlaying
                managed objects are being performed. Only delete actions will be performed.
              type: boolean
            replicas:
              description: ReplicaCount Total number of non-terminated pods targeted
                by this VMAlertmanager cluster (their labels match the selector).
              format: int32
              type: integer
            unavailableReplicas:
              description: UnavailableReplicas Total number of unavailable pods targeted
                by this VMAlertmanager cluster.
              format: int32
              type: integer
            updatedReplicas:
              description: UpdatedReplicas Total number of non-terminated pods targeted
                by this VMAlertmanager cluster that have the desired version spec.
              format: int32
              type: integer
          required:
          - availableReplicas
          - paused
          - replicas
          - unavailableReplicas
          - updatedReplicas
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
