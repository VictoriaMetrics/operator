/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen-v0.32. DO NOT EDIT.

package v1beta1

import (
	operatorv1beta1 "github.com/VictoriaMetrics/operator/api/operator/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// VLogsLister helps list VLogs.
// All objects returned here must be treated as read-only.
type VLogsLister interface {
	// List lists all VLogs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1beta1.VLogs, err error)
	// VLogs returns an object that can list and get VLogs.
	VLogs(namespace string) VLogsNamespaceLister
	VLogsListerExpansion
}

// vLogsLister implements the VLogsLister interface.
type vLogsLister struct {
	listers.ResourceIndexer[*operatorv1beta1.VLogs]
}

// NewVLogsLister returns a new VLogsLister.
func NewVLogsLister(indexer cache.Indexer) VLogsLister {
	return &vLogsLister{listers.New[*operatorv1beta1.VLogs](indexer, operatorv1beta1.Resource("vlogs"))}
}

// VLogs returns an object that can list and get VLogs.
func (s *vLogsLister) VLogs(namespace string) VLogsNamespaceLister {
	return vLogsNamespaceLister{listers.NewNamespaced[*operatorv1beta1.VLogs](s.ResourceIndexer, namespace)}
}

// VLogsNamespaceLister helps list and get VLogs.
// All objects returned here must be treated as read-only.
type VLogsNamespaceLister interface {
	// List lists all VLogs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1beta1.VLogs, err error)
	// Get retrieves the VLogs from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*operatorv1beta1.VLogs, error)
	VLogsNamespaceListerExpansion
}

// vLogsNamespaceLister implements the VLogsNamespaceLister
// interface.
type vLogsNamespaceLister struct {
	listers.ResourceIndexer[*operatorv1beta1.VLogs]
}
