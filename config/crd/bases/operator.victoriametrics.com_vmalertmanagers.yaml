apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  name: vmalertmanagers.operator.victoriametrics.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.version
    description: The version of VMAlertmanager
    name: Version
    type: string
  - JSONPath: .spec.ReplicaCount
    description: The desired replicas number of Alertmanagers
    name: ReplicaCount
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: operator.victoriametrics.com
  names:
    kind: VMAlertmanager
    listKind: VMAlertmanagerList
    plural: vmalertmanagers
    shortNames:
    - vma
    singular: vmalertmanager
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: VMAlertmanager represents Victoria-Metrics deployment for Alertmanager.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: 'Specification of the desired behavior of the VMAlertmanager
            cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
          properties:
            additionalPeers:
              description: AdditionalPeers allows injecting a set of additional Alertmanagers
                to peer with to form a highly available cluster.
              items:
                type: string
              type: array
            affinity:
              description: Affinity If specified, the pod's scheduling constraints.
              type: object
            clusterAdvertiseAddress:
              description: 'ClusterAdvertiseAddress is the explicit address to advertise
                in cluster. Needs to be provided for non RFC1918 [1] (public) addresses.
                [1] RFC1918: https://tools.ietf.org/html/rfc1918'
              type: string
            configMaps:
              description: ConfigMaps is a list of ConfigMaps in the same namespace
                as the VMAlertmanager object, which shall be mounted into the VMAlertmanager
                Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.
              items:
                type: string
              type: array
            configRawYaml:
              description: ConfigRawYaml - raw configuration for alertmanager, it
                helps it to start without secret. priority -> hardcoded ConfigRaw
                -> ConfigRaw, provided by user -> ConfigSecret.
              type: string
            configSecret:
              description: ConfigSecret is the name of a Kubernetes Secret in the
                same namespace as the VMAlertmanager object, which contains configuration
                for this VMAlertmanager instance. Defaults to 'vmalertmanager-<alertmanager-name>'
                The secret is mounted into /etc/alertmanager/config.
              type: string
            containers:
              description: Containers allows injecting additional containers or patching
                existing containers. This is meant to allow adding an authentication
                proxy to an VMAlertmanager pod.
              items:
                description: A single application container that you want to run within
                  a pod.
                required:
                - name
                type: object
              type: array
            dnsPolicy:
              description: DNSPolicy sets DNS policy for the pod
              type: string
            externalURL:
              description: ExternalURL the VMAlertmanager instances will be available
                under. This is necessary to generate correct URLs. This is necessary
                if VMAlertmanager is not served from root of a DNS name.
              type: string
            hostNetwork:
              description: HostNetwork controls whether the pod may use the node network
                namespace
              type: boolean
            image:
              description: Image - docker image settings for VMAlertmanager if no
                specified operator uses default config version
              properties:
                pullPolicy:
                  description: PullPolicy describes how to pull docker image
                  type: string
                repository:
                  description: Repository contains name of docker image + it's repository
                    if needed
                  type: string
                tag:
                  description: Tag contains desired docker image version
                  type: string
              type: object
            imagePullSecrets:
              description: ImagePullSecrets An optional list of references to secrets
                in the same namespace to use for pulling images from registries see
                http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              type: array
            initContainers:
              description: 'InitContainers allows adding initContainers to the pod
                definition. Those can be used to e.g. fetch secrets for injection
                into the VMAlertmanager configuration from external sources. Any errors
                during the execution of an initContainer will lead to a restart of
                the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                Using initContainers for any use case other then secret fetching is
                entirely outside the scope of what the maintainers will support and
                by doing so, you accept that this behaviour may break at any time
                without notice.'
              items:
                description: A single application container that you want to run within
                  a pod.
                required:
                - name
                type: object
              type: array
            listenLocal:
              description: ListenLocal makes the VMAlertmanager server listen on loopback,
                so that it does not bind against the Pod IP. Note this is only for
                the VMAlertmanager UI, not the gossip communication.
              type: boolean
            logFormat:
              description: LogFormat for VMAlertmanager to be configured with.
              type: string
            logLevel:
              description: Log level for VMAlertmanager to be configured with.
              type: string
            nodeSelector:
              additionalProperties:
                type: string
              description: NodeSelector Define which Nodes the Pods are scheduled
                on.
              type: object
            paused:
              description: Paused If set to true all actions on the underlaying managed
                objects are not goint to be performed, except for delete actions.
              type: boolean
            podMetadata:
              description: PodMetadata configures Labels and Annotations which are
                propagated to the alertmanager pods.
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description: 'Annotations is an unstructured key value map stored
                    with a resource that may be set by external tools to store and
                    retrieve arbitrary metadata. They are not queryable and should
                    be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  description: 'Labels Map of string keys and values that can be used
                    to organize and categorize (scope and select) objects. May match
                    selectors of replication controllers and services. More info:
                    http://kubernetes.io/docs/user-guide/labels'
                  type: object
                name:
                  description: 'Name must be unique within a namespace. Is required
                    when creating resources, although some resources may allow a client
                    to request the generation of an appropriate name automatically.
                    Name is primarily intended for creation idempotence and configuration
                    definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              type: object
            podSecurityPolicyName:
              description: PodSecurityPolicyName - defines name for podSecurityPolicy
                in case of empty value, prefixedName will be used.
              type: string
            portName:
              description: PortName used for the pods and governing service. This
                defaults to web
              type: string
            priorityClassName:
              description: PriorityClassName class assigned to the Pods
              type: string
            replicaCount:
              description: ReplicaCount Size is the expected size of the alertmanager
                cluster. The controller will eventually make the size of the running
                cluster equal to the expected
              format: int32
              minimum: 1
              type: integer
            resources:
              description: Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            retention:
              description: Retention Time duration VMAlertmanager shall retain data
                for. Default is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)`
                (milliseconds seconds minutes hours).
              pattern: '[0-9]+(ms|s|m|h)'
              type: string
            routePrefix:
              description: RoutePrefix VMAlertmanager registers HTTP handlers for.
                This is useful, if using ExternalURL and a proxy is rewriting HTTP
                routes of a request, and the actual ExternalURL is still true, but
                the server serves requests under a different route prefix. For example
                for use with `kubectl proxy`.
              type: string
            runtimeClassName:
              description: RuntimeClassName - defines runtime class for kubernetes
                pod. https://kubernetes.io/docs/concepts/containers/runtime-class/
              type: string
            schedulerName:
              description: SchedulerName - defines kubernetes scheduler name
              type: string
            secrets:
              description: Secrets is a list of Secrets in the same namespace as the
                VMAlertmanager object, which shall be mounted into the VMAlertmanager
                Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>
              items:
                type: string
              type: array
            securityContext:
              description: SecurityContext holds pod-level security attributes and
                common container settings. This defaults to the default PodSecurityContext.
              properties:
                fsGroup:
                  description: "A special supplemental group that applies to all containers
                    in a pod. Some volume types allow the Kubelet to change the ownership
                    of that volume to be owned by the pod: \n 1. The owning GID will
                    be the FSGroup 2. The setgid bit is set (new files created in
                    the volume will be owned by FSGroup) 3. The permission bits are
                    OR'd with rw-rw---- \n If unset, the Kubelet will not modify the
                    ownership and permissions of any volume."
                  format: int64
                  type: integer
                fsGroupChangePolicy:
                  description: 'fsGroupChangePolicy defines behavior of changing ownership
                    and permission of the volume before being exposed inside Pod.
                    This field will only apply to volume types which support fsGroup
                    based ownership(and permissions). It will have no effect on ephemeral
                    volume types such as: secret, configmaps and emptydir. Valid values
                    are "OnRootMismatch" and "Always". If not specified defaults to
                    "Always".'
                  type: string
                runAsGroup:
                  description: The GID to run the entrypoint of the container process.
                    Uses runtime default if unset. May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  format: int64
                  type: integer
                runAsNonRoot:
                  description: Indicates that the container must run as a non-root
                    user. If true, the Kubelet will validate the image at runtime
                    to ensure that it does not run as UID 0 (root) and fail to start
                    the container if it does. If unset or false, no such validation
                    will be performed. May also be set in SecurityContext.  If set
                    in both SecurityContext and PodSecurityContext, the value specified
                    in SecurityContext takes precedence.
                  type: boolean
                runAsUser:
                  description: The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified. May
                    also be set in SecurityContext.  If set in both SecurityContext
                    and PodSecurityContext, the value specified in SecurityContext
                    takes precedence for that container.
                  format: int64
                  type: integer
                seLinuxOptions:
                  description: The SELinux context to be applied to all containers.
                    If unspecified, the container runtime will allocate a random SELinux
                    context for each container.  May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the
                        container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the
                        container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the
                        container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the
                        container.
                      type: string
                  type: object
                supplementalGroups:
                  description: A list of groups applied to the first process run in
                    each container, in addition to the container's primary GID.  If
                    unspecified, no groups will be added to any container.
                  items:
                    format: int64
                    type: integer
                  type: array
                sysctls:
                  description: Sysctls hold a list of namespaced sysctls used for
                    the pod. Pods with unsupported sysctls (by the container runtime)
                    might fail to launch.
                  items:
                    description: Sysctl defines a kernel parameter to be set
                    properties:
                      name:
                        description: Name of a property to set
                        type: string
                      value:
                        description: Value of a property to set
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                windowsOptions:
                  description: The Windows specific settings applied to all containers.
                    If unspecified, the options within a container's SecurityContext
                    will be used. If set in both SecurityContext and PodSecurityContext,
                    the value specified in SecurityContext takes precedence.
                  properties:
                    gmsaCredentialSpec:
                      description: GMSACredentialSpec is where the GMSA admission
                        webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                        inlines the contents of the GMSA credential spec named by
                        the GMSACredentialSpecName field.
                      type: string
                    gmsaCredentialSpecName:
                      description: GMSACredentialSpecName is the name of the GMSA
                        credential spec to use.
                      type: string
                    runAsUserName:
                      description: The UserName in Windows to run the entrypoint of
                        the container process. Defaults to the user specified in image
                        metadata if unspecified. May also be set in PodSecurityContext.
                        If set in both SecurityContext and PodSecurityContext, the
                        value specified in SecurityContext takes precedence.
                      type: string
                  type: object
              type: object
            serviceAccountName:
              description: ServiceAccountName is the name of the ServiceAccount to
                use
              type: string
            storage:
              description: Storage is the definition of how storage will be used by
                the VMAlertmanager instances.
              properties:
                disableMountSubPath:
                  description: 'Deprecated: subPath usage will be disabled by default
                    in a future release, this option will become unnecessary. DisableMountSubPath
                    allows to remove any subPath usage in volume mounts.'
                  type: boolean
                emptyDir:
                  description: 'EmptyDirVolumeSource to be used by the Prometheus
                    StatefulSets. If specified, used in place of any volumeClaimTemplate.
                    More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir'
                  properties:
                    medium:
                      description: 'What type of storage medium should back this directory.
                        The default is "" which means to use the node''s default medium.
                        Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                      type: string
                    sizeLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'Total amount of local storage required for this
                        EmptyDir volume. The size limit is also applicable for memory
                        medium. The maximum usage on memory medium EmptyDir would
                        be the minimum value between the SizeLimit specified here
                        and the sum of memory limits of all containers in a pod. The
                        default is nil which means that the limit is undefined. More
                        info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                  type: object
                volumeClaimTemplate:
                  description: A PVC spec to be used by the VMAlertManager StatefulSets.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      description: EmbeddedMetadata contains metadata relevant to
                        an EmbeddedResource.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Labels Map of string keys and values that
                            can be used to organize and categorize (scope and select)
                            objects. May match selectors of replication controllers
                            and services. More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                      type: object
                    spec:
                      description: 'Spec defines the desired characteristics of a
                        volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'This field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot
                            - Beta) * An existing PVC (PersistentVolumeClaim) * An
                            existing custom resource/object that implements data population
                            (Alpha) In order to use VolumeSnapshot object types, the
                            appropriate feature gate must be enabled (VolumeSnapshotDataSource
                            or AnyVolumeDataSource) If the provisioner or an external
                            controller can support the specified data source, it will
                            create a new volume based on the contents of the specified
                            data source. If the specified data source is not supported,
                            the volume will not be created and the failure will be
                            reported as an event. In the future, we plan to support
                            more data source types and the behavior of the provisioner
                            may change.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'Resources represents the minimum resources
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for
                            binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: 'Status represents the current information/status
                        of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                      properties:
                        accessModes:
                          description: 'AccessModes contains the actual access modes
                            the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        capacity:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Represents the actual resources of the underlying
                            volume.
                          type: object
                        conditions:
                          description: Current Condition of persistent volume claim.
                            If underlying persistent volume is being resized then
                            the Condition will be set to 'ResizeStarted'.
                          items:
                            description: PersistentVolumeClaimCondition contails details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: Last time we probed the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: Last time the condition transitioned
                                  from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Human-readable message indicating details
                                  about last transition.
                                type: string
                              reason:
                                description: Unique, this should be a short, machine
                                  understandable string that gives the reason for
                                  condition's last transition. If it reports "ResizeStarted"
                                  that means the underlying persistent volume is being
                                  resized.
                                type: string
                              status:
                                type: string
                              type:
                                description: PersistentVolumeClaimConditionType is
                                  a valid value of PersistentVolumeClaimCondition.Type
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        phase:
                          description: Phase represents the current phase of PersistentVolumeClaim.
                          type: string
                      type: object
                  type: object
              type: object
            tolerations:
              description: Tolerations If specified, the pod's tolerations.
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
            topologySpreadConstraints:
              description: TopologySpreadConstraints embedded kubernetes pod configuration
                option, controls how pods are spread across your cluster among failure-domains
                such as regions, zones, nodes, and other user-defined topology domains
                https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
              items:
                description: TopologySpreadConstraint specifies how to spread matching
                  pods among the given topology.
                required:
                - maxSkew
                - topologyKey
                - whenUnsatisfiable
                type: object
              type: array
            volumeMounts:
              description: VolumeMounts allows configuration of additional VolumeMounts
                on the output StatefulSet definition. VolumeMounts specified will
                be appended to other VolumeMounts in the alertmanager container, that
                are generated as a result of StorageSpec objects.
              items:
                description: VolumeMount describes a mounting of a Volume within a
                  container.
                properties:
                  mountPath:
                    description: Path within the container at which the volume should
                      be mounted.  Must not contain ':'.
                    type: string
                  mountPropagation:
                    description: mountPropagation determines how mounts are propagated
                      from the host to container and the other way around. When not
                      set, MountPropagationNone is used. This field is beta in 1.10.
                    type: string
                  name:
                    description: This must match the Name of a Volume.
                    type: string
                  readOnly:
                    description: Mounted read-only if true, read-write otherwise (false
                      or unspecified). Defaults to false.
                    type: boolean
                  subPath:
                    description: Path within the volume from which the container's
                      volume should be mounted. Defaults to "" (volume's root).
                    type: string
                  subPathExpr:
                    description: Expanded path within the volume from which the container's
                      volume should be mounted. Behaves similarly to SubPath but environment
                      variable references $(VAR_NAME) are expanded using the container's
                      environment. Defaults to "" (volume's root). SubPathExpr and
                      SubPath are mutually exclusive.
                    type: string
                required:
                - mountPath
                - name
                type: object
              type: array
            volumes:
              description: Volumes allows configuration of additional volumes on the
                output StatefulSet definition. Volumes specified will be appended
                to other volumes that are generated as a result of StorageSpec objects.
              items:
                description: Volume represents a named volume in a pod that may be
                  accessed by any container in the pod.
                properties:
                  awsElasticBlockStore:
                    description: 'AWSElasticBlockStore represents an AWS Disk resource
                      that is attached to a kubelet''s host machine and then exposed
                      to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                    properties:
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      partition:
                        description: 'The partition in the volume that you want to
                          mount. If omitted, the default is to mount by volume name.
                          Examples: For volume /dev/sda1, you specify the partition
                          as "1". Similarly, the volume partition for /dev/sda is
                          "0" (or you can leave the property empty).'
                        format: int32
                        type: integer
                      readOnly:
                        description: 'Specify "true" to force and set the ReadOnly
                          property in VolumeMounts to "true". If omitted, the default
                          is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        type: boolean
                      volumeID:
                        description: 'Unique ID of the persistent disk resource in
                          AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                        type: string
                    required:
                    - volumeID
                    type: object
                  azureDisk:
                    description: AzureDisk represents an Azure Data Disk mount on
                      the host and bind mount to the pod.
                    properties:
                      cachingMode:
                        description: 'Host Caching mode: None, Read Only, Read Write.'
                        type: string
                      diskName:
                        description: The Name of the data disk in the blob storage
                        type: string
                      diskURI:
                        description: The URI the data disk in the blob storage
                        type: string
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      kind:
                        description: 'Expected values Shared: multiple blob disks
                          per storage account  Dedicated: single blob disk per storage
                          account  Managed: azure managed data disk (only in managed
                          availability set). defaults to shared'
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                    required:
                    - diskName
                    - diskURI
                    type: object
                  azureFile:
                    description: AzureFile represents an Azure File Service mount
                      on the host and bind mount to the pod.
                    properties:
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      secretName:
                        description: the name of secret that contains Azure Storage
                          Account Name and Key
                        type: string
                      shareName:
                        description: Share Name
                        type: string
                    required:
                    - secretName
                    - shareName
                    type: object
                  cephfs:
                    description: CephFS represents a Ceph FS mount on the host that
                      shares a pod's lifetime
                    properties:
                      monitors:
                        description: 'Required: Monitors is a collection of Ceph monitors
                          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        items:
                          type: string
                        type: array
                      path:
                        description: 'Optional: Used as the mounted root, rather than
                          the full Ceph tree, default is /'
                        type: string
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts. More
                          info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        type: boolean
                      secretFile:
                        description: 'Optional: SecretFile is the path to key ring
                          for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        type: string
                      secretRef:
                        description: 'Optional: SecretRef is reference to the authentication
                          secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      user:
                        description: 'Optional: User is the rados user name, default
                          is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                        type: string
                    required:
                    - monitors
                    type: object
                  cinder:
                    description: 'Cinder represents a cinder volume attached and mounted
                      on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                    properties:
                      fsType:
                        description: 'Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Examples: "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        type: string
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts. More
                          info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        type: boolean
                      secretRef:
                        description: 'Optional: points to a secret object containing
                          parameters used to connect to OpenStack.'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      volumeID:
                        description: 'volume id used to identify the volume in cinder.
                          More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                        type: string
                    required:
                    - volumeID
                    type: object
                  configMap:
                    description: ConfigMap represents a configMap that should populate
                      this volume
                    properties:
                      defaultMode:
                        description: 'Optional: mode bits to use on created files
                          by default. Must be a value between 0 and 0777. Defaults
                          to 0644. Directories within the path are not affected by
                          this setting. This might be in conflict with other options
                          that affect the file mode, like fsGroup, and the result
                          can be other mode bits set.'
                        format: int32
                        type: integer
                      items:
                        description: If unspecified, each key-value pair in the Data
                          field of the referenced ConfigMap will be projected into
                          the volume as a file whose name is the key and content is
                          the value. If specified, the listed keys will be projected
                          into the specified paths, and unlisted keys will not be
                          present. If a key is specified which is not present in the
                          ConfigMap, the volume setup will error unless it is marked
                          optional. Paths must be relative and may not contain the
                          '..' path or start with '..'.
                        items:
                          description: Maps a string key to a path within a volume.
                          properties:
                            key:
                              description: The key to project.
                              type: string
                            mode:
                              description: 'Optional: mode bits to use on this file,
                                must be a value between 0 and 0777. If not specified,
                                the volume defaultMode will be used. This might be
                                in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode
                                bits set.'
                              format: int32
                              type: integer
                            path:
                              description: The relative path of the file to map the
                                key to. May not be an absolute path. May not contain
                                the path element '..'. May not start with the string
                                '..'.
                              type: string
                          required:
                          - key
                          - path
                          type: object
                        type: array
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its keys must
                          be defined
                        type: boolean
                    type: object
                  csi:
                    description: CSI (Container Storage Interface) represents storage
                      that is handled by an external CSI driver (Alpha feature).
                    properties:
                      driver:
                        description: Driver is the name of the CSI driver that handles
                          this volume. Consult with your admin for the correct name
                          as registered in the cluster.
                        type: string
                      fsType:
                        description: Filesystem type to mount. Ex. "ext4", "xfs",
                          "ntfs". If not provided, the empty value is passed to the
                          associated CSI driver which will determine the default filesystem
                          to apply.
                        type: string
                      nodePublishSecretRef:
                        description: NodePublishSecretRef is a reference to the secret
                          object containing sensitive information to pass to the CSI
                          driver to complete the CSI NodePublishVolume and NodeUnpublishVolume
                          calls. This field is optional, and  may be empty if no secret
                          is required. If the secret object contains more than one
                          secret, all secret references are passed.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      readOnly:
                        description: Specifies a read-only configuration for the volume.
                          Defaults to false (read/write).
                        type: boolean
                      volumeAttributes:
                        additionalProperties:
                          type: string
                        description: VolumeAttributes stores driver-specific properties
                          that are passed to the CSI driver. Consult your driver's
                          documentation for supported values.
                        type: object
                    required:
                    - driver
                    type: object
                  downwardAPI:
                    description: DownwardAPI represents downward API about the pod
                      that should populate this volume
                    properties:
                      defaultMode:
                        description: 'Optional: mode bits to use on created files
                          by default. Must be a value between 0 and 0777. Defaults
                          to 0644. Directories within the path are not affected by
                          this setting. This might be in conflict with other options
                          that affect the file mode, like fsGroup, and the result
                          can be other mode bits set.'
                        format: int32
                        type: integer
                      items:
                        description: Items is a list of downward API volume file
                        items:
                          description: DownwardAPIVolumeFile represents information
                            to create the file containing the pod field
                          properties:
                            fieldRef:
                              description: 'Required: Selects a field of the pod:
                                only annotations, labels, name and namespace are supported.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            mode:
                              description: 'Optional: mode bits to use on this file,
                                must be a value between 0 and 0777. If not specified,
                                the volume defaultMode will be used. This might be
                                in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode
                                bits set.'
                              format: int32
                              type: integer
                            path:
                              description: 'Required: Path is  the relative path name
                                of the file to be created. Must not be absolute or
                                contain the ''..'' path. Must be utf-8 encoded. The
                                first item of the relative path must not start with
                                ''..'''
                              type: string
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                requests.cpu and requests.memory) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                          required:
                          - path
                          type: object
                        type: array
                    type: object
                  emptyDir:
                    description: 'EmptyDir represents a temporary directory that shares
                      a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                    properties:
                      medium:
                        description: 'What type of storage medium should back this
                          directory. The default is "" which means to use the node''s
                          default medium. Must be an empty string (default) or Memory.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        type: string
                      sizeLimit:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'Total amount of local storage required for this
                          EmptyDir volume. The size limit is also applicable for memory
                          medium. The maximum usage on memory medium EmptyDir would
                          be the minimum value between the SizeLimit specified here
                          and the sum of memory limits of all containers in a pod.
                          The default is nil which means that the limit is undefined.
                          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  fc:
                    description: FC represents a Fibre Channel resource that is attached
                      to a kubelet's host machine and then exposed to the pod.
                    properties:
                      fsType:
                        description: 'Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      lun:
                        description: 'Optional: FC target lun number'
                        format: int32
                        type: integer
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts.'
                        type: boolean
                      targetWWNs:
                        description: 'Optional: FC target worldwide names (WWNs)'
                        items:
                          type: string
                        type: array
                      wwids:
                        description: 'Optional: FC volume world wide identifiers (wwids)
                          Either wwids or combination of targetWWNs and lun must be
                          set, but not both simultaneously.'
                        items:
                          type: string
                        type: array
                    type: object
                  flexVolume:
                    description: FlexVolume represents a generic volume resource that
                      is provisioned/attached using an exec based plugin.
                    properties:
                      driver:
                        description: Driver is the name of the driver to use for this
                          volume.
                        type: string
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". The default filesystem depends on FlexVolume
                          script.
                        type: string
                      options:
                        additionalProperties:
                          type: string
                        description: 'Optional: Extra command options if any.'
                        type: object
                      readOnly:
                        description: 'Optional: Defaults to false (read/write). ReadOnly
                          here will force the ReadOnly setting in VolumeMounts.'
                        type: boolean
                      secretRef:
                        description: 'Optional: SecretRef is reference to the secret
                          object containing sensitive information to pass to the plugin
                          scripts. This may be empty if no secret object is specified.
                          If the secret object contains more than one secret, all
                          secrets are passed to the plugin scripts.'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - driver
                    type: object
                  flocker:
                    description: Flocker represents a Flocker volume attached to a
                      kubelet's host machine. This depends on the Flocker control
                      service being running
                    properties:
                      datasetName:
                        description: Name of the dataset stored as metadata -> name
                          on the dataset for Flocker should be considered as deprecated
                        type: string
                      datasetUUID:
                        description: UUID of the dataset. This is unique identifier
                          of a Flocker dataset
                        type: string
                    type: object
                  gcePersistentDisk:
                    description: 'GCEPersistentDisk represents a GCE Disk resource
                      that is attached to a kubelet''s host machine and then exposed
                      to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                    properties:
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      partition:
                        description: 'The partition in the volume that you want to
                          mount. If omitted, the default is to mount by volume name.
                          Examples: For volume /dev/sda1, you specify the partition
                          as "1". Similarly, the volume partition for /dev/sda is
                          "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        format: int32
                        type: integer
                      pdName:
                        description: 'Unique name of the PD resource in GCE. Used
                          to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the ReadOnly setting
                          in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                        type: boolean
                    required:
                    - pdName
                    type: object
                  gitRepo:
                    description: 'GitRepo represents a git repository at a particular
                      revision. DEPRECATED: GitRepo is deprecated. To provision a
                      container with a git repo, mount an EmptyDir into an InitContainer
                      that clones the repo using git, then mount the EmptyDir into
                      the Pod''s container.'
                    properties:
                      directory:
                        description: Target directory name. Must not contain or start
                          with '..'.  If '.' is supplied, the volume directory will
                          be the git repository.  Otherwise, if specified, the volume
                          will contain the git repository in the subdirectory with
                          the given name.
                        type: string
                      repository:
                        description: Repository URL
                        type: string
                      revision:
                        description: Commit hash for the specified revision.
                        type: string
                    required:
                    - repository
                    type: object
                  glusterfs:
                    description: 'Glusterfs represents a Glusterfs mount on the host
                      that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                    properties:
                      endpoints:
                        description: 'EndpointsName is the endpoint name that details
                          Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                        type: string
                      path:
                        description: 'Path is the Glusterfs volume path. More info:
                          https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the Glusterfs volume
                          to be mounted with read-only permissions. Defaults to false.
                          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                        type: boolean
                    required:
                    - endpoints
                    - path
                    type: object
                  hostPath:
                    description: 'HostPath represents a pre-existing file or directory
                      on the host machine that is directly exposed to the container.
                      This is generally used for system agents or other privileged
                      things that are allowed to see the host machine. Most containers
                      will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                      --- TODO(jonesdl) We need to restrict who can use host directory
                      mounts and who can/can not mount host directories as read/write.'
                    properties:
                      path:
                        description: 'Path of the directory on the host. If the path
                          is a symlink, it will follow the link to the real path.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                        type: string
                      type:
                        description: 'Type for HostPath Volume Defaults to "" More
                          info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                        type: string
                    required:
                    - path
                    type: object
                  iscsi:
                    description: 'ISCSI represents an ISCSI Disk resource that is
                      attached to a kubelet''s host machine and then exposed to the
                      pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                    properties:
                      chapAuthDiscovery:
                        description: whether support iSCSI Discovery CHAP authentication
                        type: boolean
                      chapAuthSession:
                        description: whether support iSCSI Session CHAP authentication
                        type: boolean
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      initiatorName:
                        description: Custom iSCSI Initiator Name. If initiatorName
                          is specified with iscsiInterface simultaneously, new iSCSI
                          interface <target portal>:<volume name> will be created
                          for the connection.
                        type: string
                      iqn:
                        description: Target iSCSI Qualified Name.
                        type: string
                      iscsiInterface:
                        description: iSCSI Interface Name that uses an iSCSI transport.
                          Defaults to 'default' (tcp).
                        type: string
                      lun:
                        description: iSCSI Target Lun number.
                        format: int32
                        type: integer
                      portals:
                        description: iSCSI Target Portal List. The portal is either
                          an IP or ip_addr:port if the port is other than default
                          (typically TCP ports 860 and 3260).
                        items:
                          type: string
                        type: array
                      readOnly:
                        description: ReadOnly here will force the ReadOnly setting
                          in VolumeMounts. Defaults to false.
                        type: boolean
                      secretRef:
                        description: CHAP Secret for iSCSI target and initiator authentication
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      targetPortal:
                        description: iSCSI Target Portal. The Portal is either an
                          IP or ip_addr:port if the port is other than default (typically
                          TCP ports 860 and 3260).
                        type: string
                    required:
                    - iqn
                    - lun
                    - targetPortal
                    type: object
                  name:
                    description: 'Volume''s name. Must be a DNS_LABEL and unique within
                      the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  nfs:
                    description: 'NFS represents an NFS mount on the host that shares
                      a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                    properties:
                      path:
                        description: 'Path that is exported by the NFS server. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the NFS export to be
                          mounted with read-only permissions. Defaults to false. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        type: boolean
                      server:
                        description: 'Server is the hostname or IP address of the
                          NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                        type: string
                    required:
                    - path
                    - server
                    type: object
                  persistentVolumeClaim:
                    description: 'PersistentVolumeClaimVolumeSource represents a reference
                      to a PersistentVolumeClaim in the same namespace. More info:
                      https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                    properties:
                      claimName:
                        description: 'ClaimName is the name of a PersistentVolumeClaim
                          in the same namespace as the pod using this volume. More
                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        type: string
                      readOnly:
                        description: Will force the ReadOnly setting in VolumeMounts.
                          Default false.
                        type: boolean
                    required:
                    - claimName
                    type: object
                  photonPersistentDisk:
                    description: PhotonPersistentDisk represents a PhotonController
                      persistent disk attached and mounted on kubelets host machine
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      pdID:
                        description: ID that identifies Photon Controller persistent
                          disk
                        type: string
                    required:
                    - pdID
                    type: object
                  portworxVolume:
                    description: PortworxVolume represents a portworx volume attached
                      and mounted on kubelets host machine
                    properties:
                      fsType:
                        description: FSType represents the filesystem type to mount
                          Must be a filesystem type supported by the host operating
                          system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4"
                          if unspecified.
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      volumeID:
                        description: VolumeID uniquely identifies a Portworx volume
                        type: string
                    required:
                    - volumeID
                    type: object
                  projected:
                    description: Items for all in one resources secrets, configmaps,
                      and downward API
                    properties:
                      defaultMode:
                        description: Mode bits to use on created files by default.
                          Must be a value between 0 and 0777. Directories within the
                          path are not affected by this setting. This might be in
                          conflict with other options that affect the file mode, like
                          fsGroup, and the result can be other mode bits set.
                        format: int32
                        type: integer
                      sources:
                        description: list of volume projections
                        items:
                          description: Projection that may be projected along with
                            other supported volume types
                          properties:
                            configMap:
                              description: information about the configMap data to
                                project
                              properties:
                                items:
                                  description: If unspecified, each key-value pair
                                    in the Data field of the referenced ConfigMap
                                    will be projected into the volume as a file whose
                                    name is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the ConfigMap, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: 'Optional: mode bits to use on
                                          this file, must be a value between 0 and
                                          0777. If not specified, the volume defaultMode
                                          will be used. This might be in conflict
                                          with other options that affect the file
                                          mode, like fsGroup, and the result can be
                                          other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to. May not be an absolute
                                          path. May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    keys must be defined
                                  type: boolean
                              type: object
                            downwardAPI:
                              description: information about the downwardAPI data
                                to project
                              properties:
                                items:
                                  description: Items is a list of DownwardAPIVolume
                                    file
                                  items:
                                    description: DownwardAPIVolumeFile represents
                                      information to create the file containing the
                                      pod field
                                    properties:
                                      fieldRef:
                                        description: 'Required: Selects a field of
                                          the pod: only annotations, labels, name
                                          and namespace are supported.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                      mode:
                                        description: 'Optional: mode bits to use on
                                          this file, must be a value between 0 and
                                          0777. If not specified, the volume defaultMode
                                          will be used. This might be in conflict
                                          with other options that affect the file
                                          mode, like fsGroup, and the result can be
                                          other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: 'Required: Path is  the relative
                                          path name of the file to be created. Must
                                          not be absolute or contain the ''..'' path.
                                          Must be utf-8 encoded. The first item of
                                          the relative path must not start with ''..'''
                                        type: string
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container:
                                          only resources limits and requests (limits.cpu,
                                          limits.memory, requests.cpu and requests.memory)
                                          are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                    required:
                                    - path
                                    type: object
                                  type: array
                              type: object
                            secret:
                              description: information about the secret data to project
                              properties:
                                items:
                                  description: If unspecified, each key-value pair
                                    in the Data field of the referenced Secret will
                                    be projected into the volume as a file whose name
                                    is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the Secret, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: The key to project.
                                        type: string
                                      mode:
                                        description: 'Optional: mode bits to use on
                                          this file, must be a value between 0 and
                                          0777. If not specified, the volume defaultMode
                                          will be used. This might be in conflict
                                          with other options that affect the file
                                          mode, like fsGroup, and the result can be
                                          other mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: The relative path of the file
                                          to map the key to. May not be an absolute
                                          path. May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              type: object
                            serviceAccountToken:
                              description: information about the serviceAccountToken
                                data to project
                              properties:
                                audience:
                                  description: Audience is the intended audience of
                                    the token. A recipient of a token must identify
                                    itself with an identifier specified in the audience
                                    of the token, and otherwise should reject the
                                    token. The audience defaults to the identifier
                                    of the apiserver.
                                  type: string
                                expirationSeconds:
                                  description: ExpirationSeconds is the requested
                                    duration of validity of the service account token.
                                    As the token approaches expiration, the kubelet
                                    volume plugin will proactively rotate the service
                                    account token. The kubelet will start trying to
                                    rotate the token if the token is older than 80
                                    percent of its time to live or if the token is
                                    older than 24 hours.Defaults to 1 hour and must
                                    be at least 10 minutes.
                                  format: int64
                                  type: integer
                                path:
                                  description: Path is the path relative to the mount
                                    point of the file to project the token into.
                                  type: string
                              required:
                              - path
                              type: object
                          type: object
                        type: array
                    required:
                    - sources
                    type: object
                  quobyte:
                    description: Quobyte represents a Quobyte mount on the host that
                      shares a pod's lifetime
                    properties:
                      group:
                        description: Group to map volume access to Default is no group
                        type: string
                      readOnly:
                        description: ReadOnly here will force the Quobyte volume to
                          be mounted with read-only permissions. Defaults to false.
                        type: boolean
                      registry:
                        description: Registry represents a single or multiple Quobyte
                          Registry services specified as a string as host:port pair
                          (multiple entries are separated with commas) which acts
                          as the central registry for volumes
                        type: string
                      tenant:
                        description: Tenant owning the given Quobyte volume in the
                          Backend Used with dynamically provisioned Quobyte volumes,
                          value is set by the plugin
                        type: string
                      user:
                        description: User to map volume access to Defaults to serivceaccount
                          user
                        type: string
                      volume:
                        description: Volume is a string that references an already
                          created Quobyte volume by name.
                        type: string
                    required:
                    - registry
                    - volume
                    type: object
                  rbd:
                    description: 'RBD represents a Rados Block Device mount on the
                      host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                    properties:
                      fsType:
                        description: 'Filesystem type of the volume that you want
                          to mount. Tip: Ensure that the filesystem type is supported
                          by the host operating system. Examples: "ext4", "xfs", "ntfs".
                          Implicitly inferred to be "ext4" if unspecified. More info:
                          https://kubernetes.io/docs/concepts/storage/volumes#rbd
                          TODO: how do we prevent errors in the filesystem from compromising
                          the machine'
                        type: string
                      image:
                        description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                      keyring:
                        description: 'Keyring is the path to key ring for RBDUser.
                          Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                      monitors:
                        description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        items:
                          type: string
                        type: array
                      pool:
                        description: 'The rados pool name. Default is rbd. More info:
                          https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                      readOnly:
                        description: 'ReadOnly here will force the ReadOnly setting
                          in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: boolean
                      secretRef:
                        description: 'SecretRef is name of the authentication secret
                          for RBDUser. If provided overrides keyring. Default is nil.
                          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      user:
                        description: 'The rados user name. Default is admin. More
                          info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                        type: string
                    required:
                    - image
                    - monitors
                    type: object
                  scaleIO:
                    description: ScaleIO represents a ScaleIO persistent volume attached
                      and mounted on Kubernetes nodes.
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Default is "xfs".
                        type: string
                      gateway:
                        description: The host address of the ScaleIO API Gateway.
                        type: string
                      protectionDomain:
                        description: The name of the ScaleIO Protection Domain for
                          the configured storage.
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      secretRef:
                        description: SecretRef references to the secret for ScaleIO
                          user and other sensitive information. If this is not provided,
                          Login operation will fail.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      sslEnabled:
                        description: Flag to enable/disable SSL communication with
                          Gateway, default false
                        type: boolean
                      storageMode:
                        description: Indicates whether the storage for a volume should
                          be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                        type: string
                      storagePool:
                        description: The ScaleIO Storage Pool associated with the
                          protection domain.
                        type: string
                      system:
                        description: The name of the storage system as configured
                          in ScaleIO.
                        type: string
                      volumeName:
                        description: The name of a volume already created in the ScaleIO
                          system that is associated with this volume source.
                        type: string
                    required:
                    - gateway
                    - secretRef
                    - system
                    type: object
                  secret:
                    description: 'Secret represents a secret that should populate
                      this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                    properties:
                      defaultMode:
                        description: 'Optional: mode bits to use on created files
                          by default. Must be a value between 0 and 0777. Defaults
                          to 0644. Directories within the path are not affected by
                          this setting. This might be in conflict with other options
                          that affect the file mode, like fsGroup, and the result
                          can be other mode bits set.'
                        format: int32
                        type: integer
                      items:
                        description: If unspecified, each key-value pair in the Data
                          field of the referenced Secret will be projected into the
                          volume as a file whose name is the key and content is the
                          value. If specified, the listed keys will be projected into
                          the specified paths, and unlisted keys will not be present.
                          If a key is specified which is not present in the Secret,
                          the volume setup will error unless it is marked optional.
                          Paths must be relative and may not contain the '..' path
                          or start with '..'.
                        items:
                          description: Maps a string key to a path within a volume.
                          properties:
                            key:
                              description: The key to project.
                              type: string
                            mode:
                              description: 'Optional: mode bits to use on this file,
                                must be a value between 0 and 0777. If not specified,
                                the volume defaultMode will be used. This might be
                                in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode
                                bits set.'
                              format: int32
                              type: integer
                            path:
                              description: The relative path of the file to map the
                                key to. May not be an absolute path. May not contain
                                the path element '..'. May not start with the string
                                '..'.
                              type: string
                          required:
                          - key
                          - path
                          type: object
                        type: array
                      optional:
                        description: Specify whether the Secret or its keys must be
                          defined
                        type: boolean
                      secretName:
                        description: 'Name of the secret in the pod''s namespace to
                          use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                        type: string
                    type: object
                  storageos:
                    description: StorageOS represents a StorageOS volume attached
                      and mounted on Kubernetes nodes.
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      readOnly:
                        description: Defaults to false (read/write). ReadOnly here
                          will force the ReadOnly setting in VolumeMounts.
                        type: boolean
                      secretRef:
                        description: SecretRef specifies the secret to use for obtaining
                          the StorageOS API credentials.  If not specified, default
                          values will be attempted.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      volumeName:
                        description: VolumeName is the human-readable name of the
                          StorageOS volume.  Volume names are only unique within a
                          namespace.
                        type: string
                      volumeNamespace:
                        description: VolumeNamespace specifies the scope of the volume
                          within StorageOS.  If no namespace is specified then the
                          Pod's namespace will be used.  This allows the Kubernetes
                          name scoping to be mirrored within StorageOS for tighter
                          integration. Set VolumeName to any name to override the
                          default behaviour. Set to "default" if you are not using
                          namespaces within StorageOS. Namespaces that do not pre-exist
                          within StorageOS will be created.
                        type: string
                    type: object
                  vsphereVolume:
                    description: VsphereVolume represents a vSphere volume attached
                      and mounted on kubelets host machine
                    properties:
                      fsType:
                        description: Filesystem type to mount. Must be a filesystem
                          type supported by the host operating system. Ex. "ext4",
                          "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        type: string
                      storagePolicyID:
                        description: Storage Policy Based Management (SPBM) profile
                          ID associated with the StoragePolicyName.
                        type: string
                      storagePolicyName:
                        description: Storage Policy Based Management (SPBM) profile
                          name.
                        type: string
                      volumePath:
                        description: Path that identifies vSphere volume vmdk
                        type: string
                    required:
                    - volumePath
                    type: object
                required:
                - name
                type: object
              type: array
          type: object
        status:
          description: 'Most recent observed status of the VMAlertmanager cluster.
            Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
          properties:
            availableReplicas:
              description: AvailableReplicas Total number of available pods (ready
                for at least minReadySeconds) targeted by this VMAlertmanager cluster.
              format: int32
              type: integer
            paused:
              description: Paused Represents whether any actions on the underlaying
                managed objects are being performed. Only delete actions will be performed.
              type: boolean
            replicas:
              description: ReplicaCount Total number of non-terminated pods targeted
                by this VMAlertmanager cluster (their labels match the selector).
              format: int32
              type: integer
            unavailableReplicas:
              description: UnavailableReplicas Total number of unavailable pods targeted
                by this VMAlertmanager cluster.
              format: int32
              type: integer
            updatedReplicas:
              description: UpdatedReplicas Total number of non-terminated pods targeted
                by this VMAlertmanager cluster that have the desired version spec.
              format: int32
              type: integer
          required:
          - availableReplicas
          - paused
          - replicas
          - unavailableReplicas
          - updatedReplicas
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
