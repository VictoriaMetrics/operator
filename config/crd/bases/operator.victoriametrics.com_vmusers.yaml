apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: vmusers.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMUser
    listKind: VMUserList
    plural: vmusers
    singular: vmuser
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMUser is the Schema for the vmusers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMUserSpec defines the desired state of VMUser
            properties:
              bearerToken:
                description: BearerToken Authorization header value for accessing
                  protected endpoint.
                type: string
              default_url:
                description: |-
                  DefaultURLs backend url for non-matching paths filter
                  usually used for default backend with error message
                items:
                  type: string
                type: array
              disable_secret_creation:
                description: DisableSecretCreation skips related secret creation for
                  vmuser
                type: boolean
              discover_backend_ips:
                description: DiscoverBackendIPs instructs discovering URLPrefix backend
                  IPs via DNS.
                type: boolean
              drop_src_path_prefix_parts:
                description: |-
                  DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                  See https://docs.victoriametrics.com/vmauth.html#dropping-request-path-prefix for more details.
                type: integer
              generatePassword:
                description: |-
                  GeneratePassword instructs operator to generate password for user
                  if spec.password if empty.
                type: boolean
              headers:
                description: |-
                  Headers represent additional http headers, that vmauth uses
                  in form of ["header_key: header_value"]
                  multiple values for header key:
                  ["header_key: value1,value2"]
                  it's available since 1.68.0 version of vmauth
                items:
                  type: string
                type: array
              ip_filters:
                description: |-
                  IPFilters defines per target src ip filters
                  supported only with enterprise version of vmauth
                  https://docs.victoriametrics.com/vmauth.html#ip-filters
                properties:
                  allow_list:
                    items:
                      type: string
                    type: array
                  deny_list:
                    items:
                      type: string
                    type: array
                type: object
              load_balancing_policy:
                description: |-
                  LoadBalancingPolicy defines load balancing policy to use for backend urls.
                  Supported policies: least_loaded, first_available.
                  See https://docs.victoriametrics.com/vmauth.html#load-balancing for more details (default "least_loaded")
                enum:
                - least_loaded
                - first_available
                type: string
              max_concurrent_requests:
                description: |-
                  MaxConcurrentRequests defines max concurrent requests per user
                  300 is default value for vmauth
                type: integer
              metric_labels:
                additionalProperties:
                  type: string
                description: MetricLabels - additional labels for metrics exported
                  by vmauth for given user.
                type: object
              name:
                description: Name of the VMUser object.
                type: string
              password:
                description: Password basic auth password for accessing protected
                  endpoint.
                type: string
              passwordRef:
                description: PasswordRef allows fetching password from user-create
                  secret by its name and key.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              response_headers:
                description: |-
                  ResponseHeaders represent additional http headers, that vmauth adds for request response
                  in form of ["header_key: header_value"]
                  multiple values for header key:
                  ["header_key: value1,value2"]
                  it's available since 1.93.0 version of vmauth
                items:
                  type: string
                type: array
              retry_status_codes:
                description: |-
                  RetryStatusCodes defines http status codes in numeric format for request retries
                  e.g. [429,503]
                items:
                  type: integer
                type: array
              targetRefs:
                description: TargetRefs - reference to endpoints, which user may access.
                items:
                  description: |-
                    TargetRef describes target for user traffic forwarding.
                    one of target types can be chosen:
                    crd or static per targetRef.
                    user can define multiple targetRefs with different ref Types.
                  properties:
                    crd:
                      description: |-
                        CRD describes exist operator's CRD object,
                        operator generates access url based on CRD params.
                      properties:
                        kind:
                          description: |-
                            Kind one of:
                            VMAgent VMAlert VMCluster VMSingle or VMAlertManager
                          type: string
                        name:
                          description: Name target CRD object name
                          type: string
                        namespace:
                          description: Namespace target CRD object namespace.
                          type: string
                      required:
                      - kind
                      - name
                      - namespace
                      type: object
                    discover_backend_ips:
                      description: DiscoverBackendIPs instructs discovering URLPrefix
                        backend IPs via DNS.
                      type: boolean
                    drop_src_path_prefix_parts:
                      description: |-
                        DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                        See https://docs.victoriametrics.com/vmauth.html#dropping-request-path-prefix for more details.
                      type: integer
                    headers:
                      description: |-
                        RequestHeaders represent additional http headers, that vmauth uses
                        in form of ["header_key: header_value"]
                        multiple values for header key:
                        ["header_key: value1,value2"]
                        it's available since 1.68.0 version of vmauth
                      items:
                        type: string
                      type: array
                    hosts:
                      items:
                        type: string
                      type: array
                    ip_filters:
                      description: |-
                        IPFilters defines filter for src ip address
                        enterprise only
                      properties:
                        allow_list:
                          items:
                            type: string
                          type: array
                        deny_list:
                          items:
                            type: string
                          type: array
                      type: object
                    load_balancing_policy:
                      description: |-
                        LoadBalancingPolicy defines load balancing policy to use for backend urls.
                        Supported policies: least_loaded, first_available.
                        See https://docs.victoriametrics.com/vmauth.html#load-balancing for more details (default "least_loaded")
                      enum:
                      - least_loaded
                      - first_available
                      type: string
                    max_concurrent_requests:
                      description: |-
                        MaxConcurrentRequests defines max concurrent requests per user
                        300 is default value for vmauth
                      type: integer
                    paths:
                      description: Paths - matched path to route.
                      items:
                        type: string
                      type: array
                    response_headers:
                      description: |-
                        ResponseHeaders represent additional http headers, that vmauth adds for request response
                        in form of ["header_key: header_value"]
                        multiple values for header key:
                        ["header_key: value1,value2"]
                        it's available since 1.93.0 version of vmauth
                      items:
                        type: string
                      type: array
                    retry_status_codes:
                      description: |-
                        RetryStatusCodes defines http status codes in numeric format for request retries
                        Can be defined per target or at VMUser.spec level
                        e.g. [429,503]
                      items:
                        type: integer
                      type: array
                    src_headers:
                      description: SrcHeaders is an optional list of headers, which
                        must match request headers.
                      items:
                        type: string
                      type: array
                    src_query_args:
                      description: SrcQueryArgs is an optional list of query args,
                        which must match request URL query args.
                      items:
                        type: string
                      type: array
                    static:
                      description: |-
                        Static - user defined url for traffic forward,
                        for instance http://vmsingle:8429
                      properties:
                        url:
                          description: URL http url for given staticRef.
                          type: string
                        urls:
                          description: URLs allows setting multiple urls for load-balancing
                            at vmauth-side.
                          items:
                            type: string
                          type: array
                      type: object
                    target_path_suffix:
                      description: |-
                        TargetPathSuffix allows to add some suffix to the target path
                        It allows to hide tenant configuration from user with crd as ref.
                        it also may contain any url encoded params.
                      type: string
                    targetRefBasicAuth:
                      description: TargetRefBasicAuth allow an target endpoint to
                        authenticate over basic authentication
                      properties:
                        password:
                          description: |-
                            The secret in the service scrape namespace that contains the password
                            for authentication.
                            It must be at them same namespace as CRD
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        username:
                          description: |-
                            The secret in the service scrape namespace that contains the username
                            for authentication.
                            It must be at them same namespace as CRD
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - password
                      - username
                      type: object
                  type: object
                type: array
              tls_ca_file:
                type: string
              tls_cert_file:
                type: string
              tls_insecure_skip_verify:
                description: |-
                  TLSInsecureSkipVerify - whether to skip TLS verification when connecting to backend over HTTPS.
                  See https://docs.victoriametrics.com/vmauth.html#backend-tls-setup
                type: boolean
              tls_key_file:
                type: string
              tls_server_name:
                type: string
              tokenRef:
                description: TokenRef allows fetching token from user-created secrets
                  by its name and key.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              username:
                description: |-
                  UserName basic auth user name for accessing protected endpoint,
                  will be replaced with metadata.name of VMUser if omitted.
                type: string
            required:
            - targetRefs
            type: object
          status:
            description: VMUserStatus defines the observed state of VMUser
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
