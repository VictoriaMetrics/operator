/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen-v0.32. DO NOT EDIT.

package v1

import (
	operatorv1 "github.com/VictoriaMetrics/operator/api/operator/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// VLClusterLister helps list VLClusters.
// All objects returned here must be treated as read-only.
type VLClusterLister interface {
	// List lists all VLClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1.VLCluster, err error)
	// VLClusters returns an object that can list and get VLClusters.
	VLClusters(namespace string) VLClusterNamespaceLister
	VLClusterListerExpansion
}

// vLClusterLister implements the VLClusterLister interface.
type vLClusterLister struct {
	listers.ResourceIndexer[*operatorv1.VLCluster]
}

// NewVLClusterLister returns a new VLClusterLister.
func NewVLClusterLister(indexer cache.Indexer) VLClusterLister {
	return &vLClusterLister{listers.New[*operatorv1.VLCluster](indexer, operatorv1.Resource("vlcluster"))}
}

// VLClusters returns an object that can list and get VLClusters.
func (s *vLClusterLister) VLClusters(namespace string) VLClusterNamespaceLister {
	return vLClusterNamespaceLister{listers.NewNamespaced[*operatorv1.VLCluster](s.ResourceIndexer, namespace)}
}

// VLClusterNamespaceLister helps list and get VLClusters.
// All objects returned here must be treated as read-only.
type VLClusterNamespaceLister interface {
	// List lists all VLClusters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1.VLCluster, err error)
	// Get retrieves the VLCluster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*operatorv1.VLCluster, error)
	VLClusterNamespaceListerExpansion
}

// vLClusterNamespaceLister implements the VLClusterNamespaceLister
// interface.
type vLClusterNamespaceLister struct {
	listers.ResourceIndexer[*operatorv1.VLCluster]
}
