/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen-v0.32. DO NOT EDIT.

package v1beta1

import (
	operatorv1beta1 "github.com/VictoriaMetrics/operator/api/operator/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// VMAlertmanagerLister helps list VMAlertmanagers.
// All objects returned here must be treated as read-only.
type VMAlertmanagerLister interface {
	// List lists all VMAlertmanagers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1beta1.VMAlertmanager, err error)
	// VMAlertmanagers returns an object that can list and get VMAlertmanagers.
	VMAlertmanagers(namespace string) VMAlertmanagerNamespaceLister
	VMAlertmanagerListerExpansion
}

// vMAlertmanagerLister implements the VMAlertmanagerLister interface.
type vMAlertmanagerLister struct {
	listers.ResourceIndexer[*operatorv1beta1.VMAlertmanager]
}

// NewVMAlertmanagerLister returns a new VMAlertmanagerLister.
func NewVMAlertmanagerLister(indexer cache.Indexer) VMAlertmanagerLister {
	return &vMAlertmanagerLister{listers.New[*operatorv1beta1.VMAlertmanager](indexer, operatorv1beta1.Resource("vmalertmanager"))}
}

// VMAlertmanagers returns an object that can list and get VMAlertmanagers.
func (s *vMAlertmanagerLister) VMAlertmanagers(namespace string) VMAlertmanagerNamespaceLister {
	return vMAlertmanagerNamespaceLister{listers.NewNamespaced[*operatorv1beta1.VMAlertmanager](s.ResourceIndexer, namespace)}
}

// VMAlertmanagerNamespaceLister helps list and get VMAlertmanagers.
// All objects returned here must be treated as read-only.
type VMAlertmanagerNamespaceLister interface {
	// List lists all VMAlertmanagers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1beta1.VMAlertmanager, err error)
	// Get retrieves the VMAlertmanager from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*operatorv1beta1.VMAlertmanager, error)
	VMAlertmanagerNamespaceListerExpansion
}

// vMAlertmanagerNamespaceLister implements the VMAlertmanagerNamespaceLister
// interface.
type vMAlertmanagerNamespaceLister struct {
	listers.ResourceIndexer[*operatorv1beta1.VMAlertmanager]
}
