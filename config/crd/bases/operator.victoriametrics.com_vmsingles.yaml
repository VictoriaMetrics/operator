---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: vmsingles.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMSingle
    listKind: VMSingleList
    plural: vmsingles
    singular: vmsingle
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of single node update process
      jsonPath: .status.singleStatus
      name: Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMSingle  is fast, cost-effective and scalable time-series database.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMSingleSpec defines the desired state of VMSingle
            properties:
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: |-
                            An empty preferred scheduling term matches all objects with implicit weight 0
                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to an update), the system
                          may or may not try to eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: |-
                                A null or empty node selector term matches no objects. The requirements of
                                them are ANDed.
                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the anti-affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the anti-affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the anti-affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: A label query over a set of resources,
                                in this case pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the VMSingle
                  object, which shall be mounted into the VMSingle Pods.
                items:
                  type: string
                type: array
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  properties:
                    args:
                      description: |-
                        Arguments to the entrypoint.
                        The container image's CMD is used if this is not provided.
                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Cannot be updated.
                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                      items:
                        type: string
                      type: array
                    command:
                      description: |-
                        Entrypoint array. Not executed within a shell.
                        The container image's ENTRYPOINT is used if this is not provided.
                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Cannot be updated.
                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                      items:
                        type: string
                      type: array
                    env:
                      description: |-
                        List of environment variables to set in the container.
                        Cannot be updated.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: |-
                              Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in the container and
                              any service environment variables. If a variable cannot be resolved,
                              the reference in the input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                              Escaped references will never be expanded, regardless of whether the variable
                              exists or not.
                              Defaults to "".
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    envFrom:
                      description: |-
                        List of sources to populate environment variables in the container.
                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                        will be reported as an event when the container is starting. When a key exists in multiple
                        sources, the value associated with the last source will take precedence.
                        Values defined by an Env with a duplicate key will take precedence.
                        Cannot be updated.
                      items:
                        description: EnvFromSource represents the source of a set
                          of ConfigMaps
                        properties:
                          configMapRef:
                            description: The ConfigMap to select from
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                type: string
                              optional:
                                description: Specify whether the ConfigMap must be
                                  defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                          prefix:
                            description: An optional identifier to prepend to each
                              key in the ConfigMap. Must be a C_IDENTIFIER.
                            type: string
                          secretRef:
                            description: The Secret to select from
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                type: string
                              optional:
                                description: Specify whether the Secret must be defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    image:
                      description: |-
                        Container image name.
                        More info: https://kubernetes.io/docs/concepts/containers/images
                        This field is optional to allow higher level config management to default or override
                        container images in workload controllers like Deployments and StatefulSets.
                      type: string
                    imagePullPolicy:
                      description: |-
                        Image pull policy.
                        One of Always, Never, IfNotPresent.
                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                      type: string
                    lifecycle:
                      description: |-
                        Actions that the management system should take in response to container lifecycle events.
                        Cannot be updated.
                      properties:
                        postStart:
                          description: |-
                            PostStart is called immediately after a container is created. If the handler fails,
                            the container is terminated and restarted according to its restart policy.
                            Other management of the container blocks until the hook completes.
                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            tcpSocket:
                              description: |-
                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                for the backward compatibility. There are no validation of this field and
                                lifecycle hooks will fail in runtime when tcp handler is specified.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                          type: object
                        preStop:
                          description: |-
                            PreStop is called immediately before a container is terminated due to an
                            API request or management event such as liveness/startup probe failure,
                            preemption, resource contention, etc. The handler is not called if the
                            container crashes or exits. The Pod's termination grace period countdown begins before the
                            PreStop hook is executed. Regardless of the outcome of the handler, the
                            container will eventually terminate within the Pod's termination grace
                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                            or until the termination grace period is reached.
                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            tcpSocket:
                              description: |-
                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                for the backward compatibility. There are no validation of this field and
                                lifecycle hooks will fail in runtime when tcp handler is specified.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                          type: object
                      type: object
                    livenessProbe:
                      description: |-
                        Periodic probe of container liveness.
                        Container will be restarted if the probe fails.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    name:
                      description: |-
                        Name of the container specified as a DNS_LABEL.
                        Each container in a pod must have a unique name (DNS_LABEL).
                        Cannot be updated.
                      type: string
                    ports:
                      description: |-
                        List of ports to expose from the container. Not specifying a port here
                        DOES NOT prevent that port from being exposed. Any port which is
                        listening on the default "0.0.0.0" address inside a container will be
                        accessible from the network.
                        Modifying this array with strategic merge patch may corrupt the data.
                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                        Cannot be updated.
                      items:
                        description: ContainerPort represents a network port in a
                          single container.
                        properties:
                          containerPort:
                            description: |-
                              Number of port to expose on the pod's IP address.
                              This must be a valid port number, 0 < x < 65536.
                            format: int32
                            type: integer
                          hostIP:
                            description: What host IP to bind the external port to.
                            type: string
                          hostPort:
                            description: |-
                              Number of port to expose on the host.
                              If specified, this must be a valid port number, 0 < x < 65536.
                              If HostNetwork is specified, this must match ContainerPort.
                              Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            description: |-
                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                              named port in a pod must have a unique name. Name for the port that can be
                              referred to by services.
                            type: string
                          protocol:
                            default: TCP
                            description: |-
                              Protocol for port. Must be UDP, TCP, or SCTP.
                              Defaults to "TCP".
                            type: string
                        required:
                        - containerPort
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - containerPort
                      - protocol
                      x-kubernetes-list-type: map
                    readinessProbe:
                      description: |-
                        Periodic probe of container service readiness.
                        Container will be removed from service endpoints if the probe fails.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    resizePolicy:
                      description: Resources resize policy for the container.
                      items:
                        description: ContainerResizePolicy represents resource resize
                          policy for the container.
                        properties:
                          resourceName:
                            description: |-
                              Name of the resource to which this resource resize policy applies.
                              Supported values: cpu, memory.
                            type: string
                          restartPolicy:
                            description: |-
                              Restart policy to apply when specified resource is resized.
                              If not specified, it defaults to NotRequired.
                            type: string
                        required:
                        - resourceName
                        - restartPolicy
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    resources:
                      description: |-
                        Compute Resources required by this container.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.


                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.


                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    securityContext:
                      description: |-
                        SecurityContext defines the security options the container should be run with.
                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                      properties:
                        allowPrivilegeEscalation:
                          description: |-
                            AllowPrivilegeEscalation controls whether a process can gain more
                            privileges than its parent process. This bool directly controls if
                            the no_new_privs flag will be set on the container process.
                            AllowPrivilegeEscalation is true always when the container is:
                            1) run as Privileged
                            2) has CAP_SYS_ADMIN
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        capabilities:
                          description: |-
                            The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by the container runtime.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                          type: object
                        privileged:
                          description: |-
                            Run container in privileged mode.
                            Processes in privileged containers are essentially equivalent to root on the host.
                            Defaults to false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        procMount:
                          description: |-
                            procMount denotes the type of proc mount to use for the containers.
                            The default is DefaultProcMount which uses the container runtime defaults for
                            readonly paths and masked paths.
                            This requires the ProcMountType feature flag to be enabled.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: string
                        readOnlyRootFilesystem:
                          description: |-
                            Whether this container has a read-only root filesystem.
                            Default is false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        runAsGroup:
                          description: |-
                            The GID to run the entrypoint of the container process.
                            Uses runtime default if unset.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: |-
                            Indicates that the container must run as a non-root user.
                            If true, the Kubelet will validate the image at runtime to ensure that it
                            does not run as UID 0 (root) and fail to start the container if it does.
                            If unset or false, no such validation will be performed.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: |-
                            The UID to run the entrypoint of the container process.
                            Defaults to user specified in image metadata if unspecified.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: |-
                            The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a random SELinux context for each
                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: |-
                            The seccomp options to use by this container. If seccomp options are
                            provided at both the pod & container level, the container options
                            override the pod options.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile defined in a file on the node should be used.
                                The profile must be preconfigured on the node to work.
                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                Must only be set if type is "Localhost".
                              type: string
                            type:
                              description: |-
                                type indicates which kind of seccomp profile will be applied.
                                Valid options are:


                                Localhost - a profile defined in a file on the node should be used.
                                RuntimeDefault - the container runtime default profile should be used.
                                Unconfined - no profile should be applied.
                              type: string
                          required:
                          - type
                          type: object
                        windowsOptions:
                          description: |-
                            The Windows specific settings applied to all containers.
                            If unspecified, the options from the PodSecurityContext will be used.
                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is linux.
                          properties:
                            gmsaCredentialSpec:
                              description: |-
                                GMSACredentialSpec is where the GMSA admission webhook
                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                GMSA credential spec named by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: |-
                                HostProcess determines if a container should be run as a 'Host Process' container.
                                This field is alpha-level and will only be honored by components that enable the
                                WindowsHostProcessContainers feature flag. Setting this field without the feature
                                flag will result in errors when validating the Pod. All of a Pod's containers must
                                have the same effective HostProcess value (it is not allowed to have a mix of HostProcess
                                containers and non-HostProcess containers).  In addition, if HostProcess is true
                                then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: |-
                                The UserName in Windows to run the entrypoint of the container process.
                                Defaults to the user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: string
                          type: object
                      type: object
                    startupProbe:
                      description: |-
                        StartupProbe indicates that the Pod has successfully initialized.
                        If specified, no other probes are executed until this completes successfully.
                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                        This cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    stdin:
                      description: |-
                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                        is not set, reads from stdin in the container will always result in EOF.
                        Default is false.
                      type: boolean
                    stdinOnce:
                      description: |-
                        Whether the container runtime should close the stdin channel after it has been opened by
                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                        at which time stdin is closed and remains closed until the container is restarted. If this
                        flag is false, a container processes that reads from stdin will never receive an EOF.
                        Default is false
                      type: boolean
                    terminationMessagePath:
                      description: |-
                        Optional: Path at which the file to which the container's termination message
                        will be written is mounted into the container's filesystem.
                        Message written is intended to be brief final status, such as an assertion failure message.
                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                        all containers will be limited to 12kb.
                        Defaults to /dev/termination-log.
                        Cannot be updated.
                      type: string
                    terminationMessagePolicy:
                      description: |-
                        Indicate how the termination message should be populated. File will use the contents of
                        terminationMessagePath to populate the container status message on both success and failure.
                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                        message file is empty and the container exited with an error.
                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                        Defaults to File.
                        Cannot be updated.
                      type: string
                    tty:
                      description: |-
                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                        Default is false.
                      type: boolean
                    volumeDevices:
                      description: volumeDevices is the list of block devices to be
                        used by the container.
                      items:
                        description: volumeDevice describes a mapping of a raw block
                          device within a container.
                        properties:
                          devicePath:
                            description: devicePath is the path inside of the container
                              that the device will be mapped to.
                            type: string
                          name:
                            description: name must match the name of a persistentVolumeClaim
                              in the pod
                            type: string
                        required:
                        - devicePath
                        - name
                        type: object
                      type: array
                    volumeMounts:
                      description: |-
                        Pod volumes to mount into the container's filesystem.
                        Cannot be updated.
                      items:
                        description: VolumeMount describes a mounting of a Volume
                          within a container.
                        properties:
                          mountPath:
                            description: |-
                              Path within the container at which the volume should be mounted.  Must
                              not contain ':'.
                            type: string
                          mountPropagation:
                            description: |-
                              mountPropagation determines how mounts are propagated from the host
                              to container and the other way around.
                              When not set, MountPropagationNone is used.
                              This field is beta in 1.10.
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: |-
                              Mounted read-only if true, read-write otherwise (false or unspecified).
                              Defaults to false.
                            type: boolean
                          subPath:
                            description: |-
                              Path within the volume from which the container's volume should be mounted.
                              Defaults to "" (volume's root).
                            type: string
                          subPathExpr:
                            description: |-
                              Expanded path within the volume from which the container's volume should be mounted.
                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                              Defaults to "" (volume's root).
                              SubPathExpr and SubPath are mutually exclusive.
                            type: string
                        required:
                        - mountPath
                        - name
                        type: object
                      type: array
                    workingDir:
                      description: |-
                        Container's working directory.
                        If not specified, the container runtime's default will be used, which
                        might be configured in the container image.
                        Cannot be updated.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: Required.
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                type: object
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to  VMSingle pod
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be added to VMSingle pod
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              image:
                description: |-
                  Image - docker image settings for VMSingle
                  if no specified operator uses default config version
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.
                  fetch secrets for injection into the vmSingle configuration from external sources. Any
                  errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                  Using initContainers for any use case other then secret fetching is entirely outside the scope
                  of what the maintainers will support and by doing so, you accept that this behaviour may break
                  at any time without notice.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  properties:
                    args:
                      description: |-
                        Arguments to the entrypoint.
                        The container image's CMD is used if this is not provided.
                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Cannot be updated.
                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                      items:
                        type: string
                      type: array
                    command:
                      description: |-
                        Entrypoint array. Not executed within a shell.
                        The container image's ENTRYPOINT is used if this is not provided.
                        Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                        cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                        produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Cannot be updated.
                        More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                      items:
                        type: string
                      type: array
                    env:
                      description: |-
                        List of environment variables to set in the container.
                        Cannot be updated.
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: |-
                              Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in the container and
                              any service environment variables. If a variable cannot be resolved,
                              the reference in the input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                              Escaped references will never be expanded, regardless of whether the variable
                              exists or not.
                              Defaults to "".
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    envFrom:
                      description: |-
                        List of sources to populate environment variables in the container.
                        The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                        will be reported as an event when the container is starting. When a key exists in multiple
                        sources, the value associated with the last source will take precedence.
                        Values defined by an Env with a duplicate key will take precedence.
                        Cannot be updated.
                      items:
                        description: EnvFromSource represents the source of a set
                          of ConfigMaps
                        properties:
                          configMapRef:
                            description: The ConfigMap to select from
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                type: string
                              optional:
                                description: Specify whether the ConfigMap must be
                                  defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                          prefix:
                            description: An optional identifier to prepend to each
                              key in the ConfigMap. Must be a C_IDENTIFIER.
                            type: string
                          secretRef:
                            description: The Secret to select from
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                type: string
                              optional:
                                description: Specify whether the Secret must be defined
                                type: boolean
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    image:
                      description: |-
                        Container image name.
                        More info: https://kubernetes.io/docs/concepts/containers/images
                        This field is optional to allow higher level config management to default or override
                        container images in workload controllers like Deployments and StatefulSets.
                      type: string
                    imagePullPolicy:
                      description: |-
                        Image pull policy.
                        One of Always, Never, IfNotPresent.
                        Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                      type: string
                    lifecycle:
                      description: |-
                        Actions that the management system should take in response to container lifecycle events.
                        Cannot be updated.
                      properties:
                        postStart:
                          description: |-
                            PostStart is called immediately after a container is created. If the handler fails,
                            the container is terminated and restarted according to its restart policy.
                            Other management of the container blocks until the hook completes.
                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            tcpSocket:
                              description: |-
                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                for the backward compatibility. There are no validation of this field and
                                lifecycle hooks will fail in runtime when tcp handler is specified.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                          type: object
                        preStop:
                          description: |-
                            PreStop is called immediately before a container is terminated due to an
                            API request or management event such as liveness/startup probe failure,
                            preemption, resource contention, etc. The handler is not called if the
                            container crashes or exits. The Pod's termination grace period countdown begins before the
                            PreStop hook is executed. Regardless of the outcome of the handler, the
                            container will eventually terminate within the Pod's termination grace
                            period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                            or until the termination grace period is reached.
                            More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            tcpSocket:
                              description: |-
                                Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                for the backward compatibility. There are no validation of this field and
                                lifecycle hooks will fail in runtime when tcp handler is specified.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                          type: object
                      type: object
                    livenessProbe:
                      description: |-
                        Periodic probe of container liveness.
                        Container will be restarted if the probe fails.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    name:
                      description: |-
                        Name of the container specified as a DNS_LABEL.
                        Each container in a pod must have a unique name (DNS_LABEL).
                        Cannot be updated.
                      type: string
                    ports:
                      description: |-
                        List of ports to expose from the container. Not specifying a port here
                        DOES NOT prevent that port from being exposed. Any port which is
                        listening on the default "0.0.0.0" address inside a container will be
                        accessible from the network.
                        Modifying this array with strategic merge patch may corrupt the data.
                        For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                        Cannot be updated.
                      items:
                        description: ContainerPort represents a network port in a
                          single container.
                        properties:
                          containerPort:
                            description: |-
                              Number of port to expose on the pod's IP address.
                              This must be a valid port number, 0 < x < 65536.
                            format: int32
                            type: integer
                          hostIP:
                            description: What host IP to bind the external port to.
                            type: string
                          hostPort:
                            description: |-
                              Number of port to expose on the host.
                              If specified, this must be a valid port number, 0 < x < 65536.
                              If HostNetwork is specified, this must match ContainerPort.
                              Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            description: |-
                              If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                              named port in a pod must have a unique name. Name for the port that can be
                              referred to by services.
                            type: string
                          protocol:
                            default: TCP
                            description: |-
                              Protocol for port. Must be UDP, TCP, or SCTP.
                              Defaults to "TCP".
                            type: string
                        required:
                        - containerPort
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - containerPort
                      - protocol
                      x-kubernetes-list-type: map
                    readinessProbe:
                      description: |-
                        Periodic probe of container service readiness.
                        Container will be removed from service endpoints if the probe fails.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    resizePolicy:
                      description: Resources resize policy for the container.
                      items:
                        description: ContainerResizePolicy represents resource resize
                          policy for the container.
                        properties:
                          resourceName:
                            description: |-
                              Name of the resource to which this resource resize policy applies.
                              Supported values: cpu, memory.
                            type: string
                          restartPolicy:
                            description: |-
                              Restart policy to apply when specified resource is resized.
                              If not specified, it defaults to NotRequired.
                            type: string
                        required:
                        - resourceName
                        - restartPolicy
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    resources:
                      description: |-
                        Compute Resources required by this container.
                        Cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.


                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.


                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    securityContext:
                      description: |-
                        SecurityContext defines the security options the container should be run with.
                        If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                      properties:
                        allowPrivilegeEscalation:
                          description: |-
                            AllowPrivilegeEscalation controls whether a process can gain more
                            privileges than its parent process. This bool directly controls if
                            the no_new_privs flag will be set on the container process.
                            AllowPrivilegeEscalation is true always when the container is:
                            1) run as Privileged
                            2) has CAP_SYS_ADMIN
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        capabilities:
                          description: |-
                            The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by the container runtime.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                          type: object
                        privileged:
                          description: |-
                            Run container in privileged mode.
                            Processes in privileged containers are essentially equivalent to root on the host.
                            Defaults to false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        procMount:
                          description: |-
                            procMount denotes the type of proc mount to use for the containers.
                            The default is DefaultProcMount which uses the container runtime defaults for
                            readonly paths and masked paths.
                            This requires the ProcMountType feature flag to be enabled.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: string
                        readOnlyRootFilesystem:
                          description: |-
                            Whether this container has a read-only root filesystem.
                            Default is false.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: boolean
                        runAsGroup:
                          description: |-
                            The GID to run the entrypoint of the container process.
                            Uses runtime default if unset.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: |-
                            Indicates that the container must run as a non-root user.
                            If true, the Kubelet will validate the image at runtime to ensure that it
                            does not run as UID 0 (root) and fail to start the container if it does.
                            If unset or false, no such validation will be performed.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: |-
                            The UID to run the entrypoint of the container process.
                            Defaults to user specified in image metadata if unspecified.
                            May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: |-
                            The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a random SELinux context for each
                            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        seccompProfile:
                          description: |-
                            The seccomp options to use by this container. If seccomp options are
                            provided at both the pod & container level, the container options
                            override the pod options.
                            Note that this field cannot be set when spec.os.name is windows.
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile defined in a file on the node should be used.
                                The profile must be preconfigured on the node to work.
                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                Must only be set if type is "Localhost".
                              type: string
                            type:
                              description: |-
                                type indicates which kind of seccomp profile will be applied.
                                Valid options are:


                                Localhost - a profile defined in a file on the node should be used.
                                RuntimeDefault - the container runtime default profile should be used.
                                Unconfined - no profile should be applied.
                              type: string
                          required:
                          - type
                          type: object
                        windowsOptions:
                          description: |-
                            The Windows specific settings applied to all containers.
                            If unspecified, the options from the PodSecurityContext will be used.
                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is linux.
                          properties:
                            gmsaCredentialSpec:
                              description: |-
                                GMSACredentialSpec is where the GMSA admission webhook
                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                GMSA credential spec named by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: |-
                                HostProcess determines if a container should be run as a 'Host Process' container.
                                This field is alpha-level and will only be honored by components that enable the
                                WindowsHostProcessContainers feature flag. Setting this field without the feature
                                flag will result in errors when validating the Pod. All of a Pod's containers must
                                have the same effective HostProcess value (it is not allowed to have a mix of HostProcess
                                containers and non-HostProcess containers).  In addition, if HostProcess is true
                                then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: |-
                                The UserName in Windows to run the entrypoint of the container process.
                                Defaults to the user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: string
                          type: object
                      type: object
                    startupProbe:
                      description: |-
                        StartupProbe indicates that the Pod has successfully initialized.
                        If specified, no other probes are executed until this completes successfully.
                        If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                        This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                        when it might take a long time to load data or warm a cache, than during steady-state operation.
                        This cannot be updated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                      properties:
                        exec:
                          description: Exec specifies the action to take.
                          properties:
                            command:
                              description: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: |-
                            Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            Defaults to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        grpc:
                          description: GRPC specifies an action involving a GRPC port.
                          properties:
                            port:
                              description: Port number of the gRPC service. Number
                                must be in the range 1 to 65535.
                              format: int32
                              type: integer
                            service:
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                If this is not specified, the default behavior is defined by gRPC.
                              type: string
                          required:
                          - port
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Name or number of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: |-
                            Number of seconds after the container has started before liveness probes are initiated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                        periodSeconds:
                          description: |-
                            How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: |-
                            Minimum consecutive successes for the probe to be considered successful after having failed.
                            Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: TCPSocket specifies an action involving a TCP
                            port.
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the container.
                                Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        terminationGracePeriodSeconds:
                          description: |-
                            Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                            The grace period is the duration in seconds after the processes running in the pod are sent
                            a termination signal and the time when the processes are forcibly halted with a kill signal.
                            Set this value longer than the expected cleanup time for your process.
                            If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                            value overrides the value provided by the pod spec.
                            Value must be non-negative integer. The value zero indicates stop immediately via
                            the kill signal (no opportunity to shut down).
                            This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                            Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: |-
                            Number of seconds after which the probe times out.
                            Defaults to 1 second. Minimum value is 1.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          format: int32
                          type: integer
                      type: object
                    stdin:
                      description: |-
                        Whether this container should allocate a buffer for stdin in the container runtime. If this
                        is not set, reads from stdin in the container will always result in EOF.
                        Default is false.
                      type: boolean
                    stdinOnce:
                      description: |-
                        Whether the container runtime should close the stdin channel after it has been opened by
                        a single attach. When stdin is true the stdin stream will remain open across multiple attach
                        sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                        first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                        at which time stdin is closed and remains closed until the container is restarted. If this
                        flag is false, a container processes that reads from stdin will never receive an EOF.
                        Default is false
                      type: boolean
                    terminationMessagePath:
                      description: |-
                        Optional: Path at which the file to which the container's termination message
                        will be written is mounted into the container's filesystem.
                        Message written is intended to be brief final status, such as an assertion failure message.
                        Will be truncated by the node if greater than 4096 bytes. The total message length across
                        all containers will be limited to 12kb.
                        Defaults to /dev/termination-log.
                        Cannot be updated.
                      type: string
                    terminationMessagePolicy:
                      description: |-
                        Indicate how the termination message should be populated. File will use the contents of
                        terminationMessagePath to populate the container status message on both success and failure.
                        FallbackToLogsOnError will use the last chunk of container log output if the termination
                        message file is empty and the container exited with an error.
                        The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                        Defaults to File.
                        Cannot be updated.
                      type: string
                    tty:
                      description: |-
                        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                        Default is false.
                      type: boolean
                    volumeDevices:
                      description: volumeDevices is the list of block devices to be
                        used by the container.
                      items:
                        description: volumeDevice describes a mapping of a raw block
                          device within a container.
                        properties:
                          devicePath:
                            description: devicePath is the path inside of the container
                              that the device will be mapped to.
                            type: string
                          name:
                            description: name must match the name of a persistentVolumeClaim
                              in the pod
                            type: string
                        required:
                        - devicePath
                        - name
                        type: object
                      type: array
                    volumeMounts:
                      description: |-
                        Pod volumes to mount into the container's filesystem.
                        Cannot be updated.
                      items:
                        description: VolumeMount describes a mounting of a Volume
                          within a container.
                        properties:
                          mountPath:
                            description: |-
                              Path within the container at which the volume should be mounted.  Must
                              not contain ':'.
                            type: string
                          mountPropagation:
                            description: |-
                              mountPropagation determines how mounts are propagated from the host
                              to container and the other way around.
                              When not set, MountPropagationNone is used.
                              This field is beta in 1.10.
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: |-
                              Mounted read-only if true, read-write otherwise (false or unspecified).
                              Defaults to false.
                            type: boolean
                          subPath:
                            description: |-
                              Path within the volume from which the container's volume should be mounted.
                              Defaults to "" (volume's root).
                            type: string
                          subPathExpr:
                            description: |-
                              Expanded path within the volume from which the container's volume should be mounted.
                              Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                              Defaults to "" (volume's root).
                              SubPathExpr and SubPath are mutually exclusive.
                            type: string
                        required:
                        - mountPath
                        - name
                        type: object
                      type: array
                    workingDir:
                      description: |-
                        Container's working directory.
                        If not specified, the container runtime's default will be used, which
                        might be configured in the container image.
                        Cannot be updated.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              insertPorts:
                description: InsertPorts - additional listen ports for data ingestion.
                properties:
                  graphitePort:
                    description: GraphitePort listen port
                    type: string
                  influxPort:
                    description: InfluxPort listen port
                    type: string
                  openTSDBHTTPPort:
                    description: OpenTSDBHTTPPort for http connections.
                    type: string
                  openTSDBPort:
                    description: OpenTSDBPort for tcp and udp listen
                    type: string
                type: object
              license:
                description: |-
                  License allows to configure license key to be used for enterprise features.
                  Using license key is supported starting from VictoriaMetrics v1.94.0.
                  See: https://docs.victoriametrics.com/enterprise.html
                properties:
                  key:
                    description: |-
                      Enterprise license key. This flag is available only in VictoriaMetrics enterprise.
                      Documentation - https://docs.victoriametrics.com/enterprise.html
                      for more information, visit https://victoriametrics.com/products/enterprise/ .
                      To request a trial license, go to https://victoriametrics.com/products/enterprise/trial/
                    type: string
                  keyRef:
                    description: KeyRef is reference to secret with license key for
                      enterprise features.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: |-
                          Command is the command line to execute inside the container, the working directory for the
                          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                          a shell, you need to explicitly call out to that shell.
                          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: |-
                      Minimum consecutive failures for the probe to be considered failed after having succeeded.
                      Defaults to 3. Minimum value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        description: |-
                          Service is the name of the service to place in the gRPC HealthCheckRequest
                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                          If this is not specified, the default behavior is defined by gRPC.
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: |-
                          Host name to connect to, defaults to the pod IP. You probably want to set
                          "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: |-
                                The header field name.
                                This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: |-
                          Scheme to use for connecting to the host.
                          Defaults to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: |-
                      Number of seconds after the container has started before liveness probes are initiated.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                  periodSeconds:
                    description: |-
                      How often (in seconds) to perform the probe.
                      Default to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: |-
                      Minimum consecutive successes for the probe to be considered successful after having failed.
                      Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: |-
                      Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                      The grace period is the duration in seconds after the processes running in the pod are sent
                      a termination signal and the time when the processes are forcibly halted with a kill signal.
                      Set this value longer than the expected cleanup time for your process.
                      If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec.
                      Value must be non-negative integer. The value zero indicates stop immediately via
                      the kill signal (no opportunity to shut down).
                      This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                      Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: |-
                      Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                type: object
              logFormat:
                description: LogFormat for VMSingle to be configured with.
                enum:
                - default
                - json
                type: string
              logLevel:
                description: LogLevel for victoria metrics single to be configured
                  with.
                enum:
                - INFO
                - WARN
                - ERROR
                - FATAL
                - PANIC
                type: string
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the VMSingle pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              port:
                description: Port listen port
                type: string
              priorityClassName:
                description: PriorityClassName assigned to the Pods
                type: string
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: |-
                          Command is the command line to execute inside the container, the working directory for the
                          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                          a shell, you need to explicitly call out to that shell.
                          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: |-
                      Minimum consecutive failures for the probe to be considered failed after having succeeded.
                      Defaults to 3. Minimum value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        description: |-
                          Service is the name of the service to place in the gRPC HealthCheckRequest
                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                          If this is not specified, the default behavior is defined by gRPC.
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: |-
                          Host name to connect to, defaults to the pod IP. You probably want to set
                          "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: |-
                                The header field name.
                                This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: |-
                          Scheme to use for connecting to the host.
                          Defaults to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: |-
                      Number of seconds after the container has started before liveness probes are initiated.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                  periodSeconds:
                    description: |-
                      How often (in seconds) to perform the probe.
                      Default to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: |-
                      Minimum consecutive successes for the probe to be considered successful after having failed.
                      Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: |-
                      Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                      The grace period is the duration in seconds after the processes running in the pod are sent
                      a termination signal and the time when the processes are forcibly halted with a kill signal.
                      Set this value longer than the expected cleanup time for your process.
                      If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec.
                      Value must be non-negative integer. The value zero indicates stop immediately via
                      the kill signal (no opportunity to shut down).
                      This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                      Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: |-
                      Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                type: object
              removePvcAfterDelete:
                description: |-
                  RemovePvcAfterDelete - if true, controller adds ownership to pvc
                  and after VMSingle objest deletion - pvc will be garbage collected
                  by controller manager
                type: boolean
              replicaCount:
                description: |-
                  ReplicaCount is the expected size of the VMSingle
                  it can be 0 or 1
                  if you need more - use vm cluster
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              retentionPeriod:
                description: |-
                  RetentionPeriod for the stored metrics
                  Note VictoriaMetrics has data/ and indexdb/ folders
                  metrics from data/ removed eventually as soon as partition leaves retention period
                  reverse index data at indexdb rotates once at the half of configured retention period
                  https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#retention
                type: string
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the StatefulSet's revision history.
                  Defaults to 10.
                format: int32
                type: integer
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the VMSingle
                  object, which shall be mounted into the VMSingle Pods.
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                properties:
                  fsGroup:
                    description: |-
                      A special supplemental group that applies to all containers in a pod.
                      Some volume types allow the Kubelet to change the ownership of that volume
                      to be owned by the pod:


                      1. The owning GID will be the FSGroup
                      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                      3. The permission bits are OR'd with rw-rw----


                      If unset, the Kubelet will not modify the ownership and permissions of any volume.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  fsGroupChangePolicy:
                    description: |-
                      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                      before being exposed inside Pod. This field will only apply to
                      volume types which support fsGroup based ownership(and permissions).
                      It will have no effect on ephemeral volume types such as: secret, configmaps
                      and emptydir.
                      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                      Note that this field cannot be set when spec.os.name is windows.
                    type: string
                  runAsGroup:
                    description: |-
                      The GID to run the entrypoint of the container process.
                      Uses runtime default if unset.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence
                      for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsNonRoot:
                    description: |-
                      Indicates that the container must run as a non-root user.
                      If true, the Kubelet will validate the image at runtime to ensure that it
                      does not run as UID 0 (root) and fail to start the container if it does.
                      If unset or false, no such validation will be performed.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                    type: boolean
                  runAsUser:
                    description: |-
                      The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in SecurityContext.  If set in both SecurityContext and
                      PodSecurityContext, the value specified in SecurityContext takes precedence
                      for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  seLinuxOptions:
                    description: |-
                      The SELinux context to be applied to all containers.
                      If unspecified, the container runtime will allocate a random SELinux context for each
                      container.  May also be set in SecurityContext.  If set in
                      both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                      takes precedence for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      level:
                        description: Level is SELinux level label that applies to
                          the container.
                        type: string
                      role:
                        description: Role is a SELinux role label that applies to
                          the container.
                        type: string
                      type:
                        description: Type is a SELinux type label that applies to
                          the container.
                        type: string
                      user:
                        description: User is a SELinux user label that applies to
                          the container.
                        type: string
                    type: object
                  seccompProfile:
                    description: |-
                      The seccomp options to use by the containers in this pod.
                      Note that this field cannot be set when spec.os.name is windows.
                    properties:
                      localhostProfile:
                        description: |-
                          localhostProfile indicates a profile defined in a file on the node should be used.
                          The profile must be preconfigured on the node to work.
                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                          Must only be set if type is "Localhost".
                        type: string
                      type:
                        description: |-
                          type indicates which kind of seccomp profile will be applied.
                          Valid options are:


                          Localhost - a profile defined in a file on the node should be used.
                          RuntimeDefault - the container runtime default profile should be used.
                          Unconfined - no profile should be applied.
                        type: string
                    required:
                    - type
                    type: object
                  supplementalGroups:
                    description: |-
                      A list of groups applied to the first process run in each container, in addition
                      to the container's primary GID, the fsGroup (if specified), and group memberships
                      defined in the container image for the uid of the container process. If unspecified,
                      no additional groups are added to any container. Note that group memberships
                      defined in the container image for the uid of the container process are still effective,
                      even if they are not included in this list.
                      Note that this field cannot be set when spec.os.name is windows.
                    items:
                      format: int64
                      type: integer
                    type: array
                  sysctls:
                    description: |-
                      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                      sysctls (by the container runtime) might fail to launch.
                      Note that this field cannot be set when spec.os.name is windows.
                    items:
                      description: Sysctl defines a kernel parameter to be set
                      properties:
                        name:
                          description: Name of a property to set
                          type: string
                        value:
                          description: Value of a property to set
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  windowsOptions:
                    description: |-
                      The Windows specific settings applied to all containers.
                      If unspecified, the options within a container's SecurityContext will be used.
                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                      Note that this field cannot be set when spec.os.name is linux.
                    properties:
                      gmsaCredentialSpec:
                        description: |-
                          GMSACredentialSpec is where the GMSA admission webhook
                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                          GMSA credential spec named by the GMSACredentialSpecName field.
                        type: string
                      gmsaCredentialSpecName:
                        description: GMSACredentialSpecName is the name of the GMSA
                          credential spec to use.
                        type: string
                      hostProcess:
                        description: |-
                          HostProcess determines if a container should be run as a 'Host Process' container.
                          This field is alpha-level and will only be honored by components that enable the
                          WindowsHostProcessContainers feature flag. Setting this field without the feature
                          flag will result in errors when validating the Pod. All of a Pod's containers must
                          have the same effective HostProcess value (it is not allowed to have a mix of HostProcess
                          containers and non-HostProcess containers).  In addition, if HostProcess is true
                          then HostNetwork must also be set to true.
                        type: boolean
                      runAsUserName:
                        description: |-
                          The UserName in Windows to run the entrypoint of the container process.
                          Defaults to the user specified in image metadata if unspecified.
                          May also be set in PodSecurityContext. If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                        type: string
                    type: object
                type: object
              serviceAccountName:
                description: |-
                  ServiceAccountName is the name of the ServiceAccount to use to run the
                  VMSingle Pods.
                type: string
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vmsingle VMServiceScrape
                  spec
                properties:
                  attach_metadata:
                    description: AttachMetadata configures metadata attaching from
                      service discovery
                    properties:
                      node:
                        description: |-
                          Node instructs vmagent to add node specific metadata from service discovery
                          Valid for roles: pod, endpoints, endpointslice.
                        type: boolean
                    type: object
                  discoveryRole:
                    description: |-
                      DiscoveryRole - defines kubernetes_sd role for objects discovery.
                      by default, its endpoints.
                      can be changed to service or endpointslices.
                      note, that with service setting, you have to use port: "name"
                      and cannot use targetPort for endpoints.
                    enum:
                    - endpoints
                    - service
                    - endpointslices
                    type: string
                  endpoints:
                    description: A list of endpoints allowed as part of this ServiceScrape.
                    items:
                      description: Endpoint defines a scrapeable endpoint serving
                        Prometheus metrics.
                      properties:
                        attach_metadata:
                          description: AttachMetadata configures metadata attaching
                            from service discovery
                          properties:
                            node:
                              description: |-
                                Node instructs vmagent to add node specific metadata from service discovery
                                Valid for roles: pod, endpoints, endpointslice.
                              type: boolean
                          type: object
                        authorization:
                          description: Authorization with http header Authorization
                          properties:
                            credentials:
                              description: Reference to the secret with value for
                                authorization
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            credentialsFile:
                              description: File with value for authorization
                              type: string
                            type:
                              description: Type of authorization, default to bearer
                              type: string
                          type: object
                        basicAuth:
                          description: |-
                            BasicAuth allow an endpoint to authenticate over basic authentication
                            More info: https://prometheus.io/docs/operating/configuration/#endpoints
                          properties:
                            password:
                              description: |-
                                The secret in the service scrape namespace that contains the password
                                for authentication.
                                It must be at them same namespace as CRD
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            password_file:
                              description: PasswordFile defines path to password file
                                at disk
                              type: string
                            username:
                              description: |-
                                The secret in the service scrape namespace that contains the username
                                for authentication.
                                It must be at them same namespace as CRD
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        bearerTokenFile:
                          description: File to read bearer token for scraping targets.
                          type: string
                        bearerTokenSecret:
                          description: |-
                            Secret to mount to read bearer token for scraping targets. The secret
                            needs to be in the same namespace as the service scrape and accessible by
                            the victoria-metrics operator.
                          nullable: true
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        follow_redirects:
                          description: FollowRedirects controls redirects for scraping.
                          type: boolean
                        honorLabels:
                          description: HonorLabels chooses the metric's labels on
                            collisions with target labels.
                          type: boolean
                        honorTimestamps:
                          description: HonorTimestamps controls whether vmagent respects
                            the timestamps present in scraped data.
                          type: boolean
                        interval:
                          description: Interval at which metrics should be scraped
                          type: string
                        metricRelabelConfigs:
                          description: MetricRelabelConfigs to apply to samples before
                            ingestion.
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.
                              It defines `<metric_relabel_configs>`-section of configuration.
                              More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        oauth2:
                          description: OAuth2 defines auth configuration
                          properties:
                            client_id:
                              description: The secret or configmap containing the
                                OAuth2 client id
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            client_secret:
                              description: The secret containing the OAuth2 client
                                secret
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            client_secret_file:
                              description: ClientSecretFile defines path for client
                                secret file.
                              type: string
                            endpoint_params:
                              additionalProperties:
                                type: string
                              description: Parameters to append to the token URL
                              type: object
                            scopes:
                              description: OAuth2 scopes used for the token request
                              items:
                                type: string
                              type: array
                            token_url:
                              description: The URL to fetch the token from
                              minLength: 1
                              type: string
                          required:
                          - client_id
                          - token_url
                          type: object
                        params:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Optional HTTP URL parameters
                          type: object
                        path:
                          description: HTTP path to scrape for metrics.
                          type: string
                        port:
                          description: Name of the service port this endpoint refers
                            to. Mutually exclusive with targetPort.
                          type: string
                        proxyURL:
                          description: ProxyURL eg http://proxyserver:2195 Directs
                            scrapes to proxy through this endpoint.
                          type: string
                        relabelConfigs:
                          description: |-
                            RelabelConfigs to apply to samples before scraping.
                            More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.
                              It defines `<metric_relabel_configs>`-section of configuration.
                              More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        sampleLimit:
                          description: SampleLimit defines per-endpoint limit on number
                            of scraped samples that will be accepted.
                          format: int64
                          type: integer
                        scheme:
                          description: HTTP scheme to use for scraping.
                          enum:
                          - http
                          - https
                          type: string
                        scrape_interval:
                          description: |-
                            ScrapeInterval is the same as Interval and has priority over it.
                            one of scrape_interval or interval can be used
                          type: string
                        scrapeTimeout:
                          description: Timeout after which the scrape is ended
                          type: string
                        seriesLimit:
                          description: |-
                            SeriesLimit defines per-scrape limit on number of unique time series
                            a single target can expose during all the scrapes on the time window of 24h.
                          format: int64
                          type: integer
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the pod port this endpoint
                            refers to. Mutually exclusive with port.
                          x-kubernetes-int-or-string: true
                        tlsConfig:
                          description: TLSConfig configuration to use when scraping
                            the endpoint
                          properties:
                            ca:
                              description: Stuct containing the CA cert to use for
                                the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            caFile:
                              description: Path to the CA cert in the container to
                                use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file
                                for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            certFile:
                              description: Path to the client cert file in the container
                                for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the container
                                for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for
                                the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                        vm_scrape_params:
                          description: VMScrapeParams defines VictoriaMetrics specific
                            scrape parameters
                          properties:
                            disable_compression:
                              type: boolean
                            disable_keep_alive:
                              description: |-
                                disable_keepalive allows disabling HTTP keep-alive when scraping targets.
                                By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
                                could be re-used.
                                See https://docs.victoriametrics.com/vmagent.html#scrape_config-enhancements
                              type: boolean
                            headers:
                              description: |-
                                Headers allows sending custom headers to scrape targets
                                must be in of semicolon separated header with it's value
                                eg:
                                headerName: headerValue
                                vmagent supports since 1.79.0 version
                              items:
                                type: string
                              type: array
                            metric_relabel_debug:
                              description: deprecated since [v1.85](https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/v1.85.0),
                                will be removed in next release
                              type: boolean
                            no_stale_markers:
                              type: boolean
                            proxy_client_config:
                              description: |-
                                ProxyClientConfig configures proxy auth settings for scraping
                                See feature description https://docs.victoriametrics.com/vmagent.html#scraping-targets-via-a-proxy
                              properties:
                                basic_auth:
                                  description: BasicAuth allow an endpoint to authenticate
                                    over basic authentication
                                  properties:
                                    password:
                                      description: |-
                                        The secret in the service scrape namespace that contains the password
                                        for authentication.
                                        It must be at them same namespace as CRD
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    password_file:
                                      description: PasswordFile defines path to password
                                        file at disk
                                      type: string
                                    username:
                                      description: |-
                                        The secret in the service scrape namespace that contains the username
                                        for authentication.
                                        It must be at them same namespace as CRD
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                bearer_token:
                                  description: SecretKeySelector selects a key of
                                    a Secret.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind, uid?
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                bearer_token_file:
                                  type: string
                                tls_config:
                                  description: TLSConfig specifies TLSConfig configuration
                                    parameters.
                                  properties:
                                    ca:
                                      description: Stuct containing the CA cert to
                                        use for the targets.
                                      properties:
                                        configMap:
                                          description: ConfigMap containing data to
                                            use for the targets.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        secret:
                                          description: Secret containing data to use
                                            for the targets.
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    caFile:
                                      description: Path to the CA cert in the container
                                        to use for the targets.
                                      type: string
                                    cert:
                                      description: Struct containing the client cert
                                        file for the targets.
                                      properties:
                                        configMap:
                                          description: ConfigMap containing data to
                                            use for the targets.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        secret:
                                          description: Secret containing data to use
                                            for the targets.
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion, kind, uid?
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    certFile:
                                      description: Path to the client cert file in
                                        the container for the targets.
                                      type: string
                                    insecureSkipVerify:
                                      description: Disable target certificate validation.
                                      type: boolean
                                    keyFile:
                                      description: Path to the client key file in
                                        the container for the targets.
                                      type: string
                                    keySecret:
                                      description: Secret containing the client key
                                        file for the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    serverName:
                                      description: Used to verify the hostname for
                                        the targets.
                                      type: string
                                  type: object
                              type: object
                            relabel_debug:
                              description: deprecated since [v1.85](https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/v1.85.0),
                                will be removed in next release
                              type: boolean
                            scrape_align_interval:
                              type: string
                            scrape_offset:
                              type: string
                            stream_parse:
                              type: boolean
                          type: object
                      type: object
                    type: array
                  jobLabel:
                    description: The label to use to retrieve the job name from.
                    type: string
                  namespaceSelector:
                    description: Selector to select which namespaces the Endpoints
                      objects are discovered from.
                    properties:
                      any:
                        description: |-
                          Boolean describing whether all namespaces are selected in contrast to a
                          list restricting them.
                        type: boolean
                      matchNames:
                        description: List of namespace names.
                        items:
                          type: string
                        type: array
                    type: object
                  podTargetLabels:
                    description: PodTargetLabels transfers labels on the Kubernetes
                      Pod onto the target.
                    items:
                      type: string
                    type: array
                  sampleLimit:
                    description: SampleLimit defines per-scrape limit on number of
                      scraped samples that will be accepted.
                    format: int64
                    type: integer
                  selector:
                    description: Selector to select Endpoints objects by corresponding
                      Service labels.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  seriesLimit:
                    description: |-
                      SeriesLimit defines per-scrape limit on number of unique time series
                      a single target can expose during all the scrapes on the time window of 24h.
                    format: int64
                    type: integer
                  targetLabels:
                    description: TargetLabels transfers labels on the Kubernetes Service
                      onto the target.
                    items:
                      type: string
                    type: array
                required:
                - endpoints
                type: object
              serviceSpec:
                description: ServiceSpec that will be added to vmsingle service spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    properties:
                      allocateLoadBalancerNodePorts:
                        description: |-
                          allocateLoadBalancerNodePorts defines if NodePorts will be automatically
                          allocated for services with type LoadBalancer.  Default is "true". It
                          may be set to "false" if the cluster load-balancer does not rely on
                          NodePorts.  If the caller requests specific NodePorts (by specifying a
                          value), those requests will be respected, regardless of this field.
                          This field may only be set for services with type LoadBalancer and will
                          be cleared if the type is changed to any other type.
                        type: boolean
                      clusterIP:
                        description: |-
                          clusterIP is the IP address of the service and is usually assigned
                          randomly. If an address is specified manually, is in-range (as per
                          system configuration), and is not in use, it will be allocated to the
                          service; otherwise creation of the service will fail. This field may not
                          be changed through updates unless the type field is also being changed
                          to ExternalName (which requires this field to be blank) or the type
                          field is being changed from ExternalName (in which case this field may
                          optionally be specified, as describe above).  Valid values are "None",
                          empty string (""), or a valid IP address. Setting this to "None" makes a
                          "headless service" (no virtual IP), which is useful when direct endpoint
                          connections are preferred and proxying is not required.  Only applies to
                          types ClusterIP, NodePort, and LoadBalancer. If this field is specified
                          when creating a Service of type ExternalName, creation will fail. This
                          field will be wiped when updating a Service to type ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        type: string
                      clusterIPs:
                        description: |-
                          ClusterIPs is a list of IP addresses assigned to this service, and are
                          usually assigned randomly.  If an address is specified manually, is
                          in-range (as per system configuration), and is not in use, it will be
                          allocated to the service; otherwise creation of the service will fail.
                          This field may not be changed through updates unless the type field is
                          also being changed to ExternalName (which requires this field to be
                          empty) or the type field is being changed from ExternalName (in which
                          case this field may optionally be specified, as describe above).  Valid
                          values are "None", empty string (""), or a valid IP address.  Setting
                          this to "None" makes a "headless service" (no virtual IP), which is
                          useful when direct endpoint connections are preferred and proxying is
                          not required.  Only applies to types ClusterIP, NodePort, and
                          LoadBalancer. If this field is specified when creating a Service of type
                          ExternalName, creation will fail. This field will be wiped when updating
                          a Service to type ExternalName.  If this field is not specified, it will
                          be initialized from the clusterIP field.  If this field is specified,
                          clients must ensure that clusterIPs[0] and clusterIP have the same
                          value.


                          This field may hold a maximum of two entries (dual-stack IPs, in either order).
                          These IPs must correspond to the values of the ipFamilies field. Both
                          clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      externalIPs:
                        description: |-
                          externalIPs is a list of IP addresses for which nodes in the cluster
                          will also accept traffic for this service.  These IPs are not managed by
                          Kubernetes.  The user is responsible for ensuring that traffic arrives
                          at a node with this IP.  A common example is external load-balancers
                          that are not part of the Kubernetes system.
                        items:
                          type: string
                        type: array
                      externalName:
                        description: |-
                          externalName is the external reference that discovery mechanisms will
                          return as an alias for this service (e.g. a DNS CNAME record). No
                          proxying will be involved.  Must be a lowercase RFC-1123 hostname
                          (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
                        type: string
                      externalTrafficPolicy:
                        description: |-
                          externalTrafficPolicy describes how nodes distribute service traffic they
                          receive on one of the Service's "externally-facing" addresses (NodePorts,
                          ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                          the service in a way that assumes that external load balancers will take care
                          of balancing the service traffic between nodes, and so each node will deliver
                          traffic only to the node-local endpoints of the service, without masquerading
                          the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                          be dropped.) The default value, "Cluster", uses the standard behavior of
                          routing to all endpoints evenly (possibly modified by topology and other
                          features). Note that traffic sent to an External IP or LoadBalancer IP from
                          within the cluster will always get "Cluster" semantics, but clients sending to
                          a NodePort from within the cluster may need to take traffic policy into account
                          when picking a node.
                        type: string
                      healthCheckNodePort:
                        description: |-
                          healthCheckNodePort specifies the healthcheck nodePort for the service.
                          This only applies when type is set to LoadBalancer and
                          externalTrafficPolicy is set to Local. If a value is specified, is
                          in-range, and is not in use, it will be used.  If not specified, a value
                          will be automatically allocated.  External systems (e.g. load-balancers)
                          can use this port to determine if a given node holds endpoints for this
                          service or not.  If this field is specified when creating a Service
                          which does not need it, creation will fail. This field will be wiped
                          when updating a Service to no longer need it (e.g. changing type).
                          This field cannot be updated once set.
                        format: int32
                        type: integer
                      internalTrafficPolicy:
                        description: |-
                          InternalTrafficPolicy describes how nodes distribute service traffic they
                          receive on the ClusterIP. If set to "Local", the proxy will assume that pods
                          only want to talk to endpoints of the service on the same node as the pod,
                          dropping the traffic if there are no local endpoints. The default value,
                          "Cluster", uses the standard behavior of routing to all endpoints evenly
                          (possibly modified by topology and other features).
                        type: string
                      ipFamilies:
                        description: |-
                          IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
                          service. This field is usually assigned automatically based on cluster
                          configuration and the ipFamilyPolicy field. If this field is specified
                          manually, the requested family is available in the cluster,
                          and ipFamilyPolicy allows it, it will be used; otherwise creation of
                          the service will fail. This field is conditionally mutable: it allows
                          for adding or removing a secondary IP family, but it does not allow
                          changing the primary IP family of the Service. Valid values are "IPv4"
                          and "IPv6".  This field only applies to Services of types ClusterIP,
                          NodePort, and LoadBalancer, and does apply to "headless" services.
                          This field will be wiped when updating a Service to type ExternalName.


                          This field may hold a maximum of two entries (dual-stack families, in
                          either order).  These families must correspond to the values of the
                          clusterIPs field, if specified. Both clusterIPs and ipFamilies are
                          governed by the ipFamilyPolicy field.
                        items:
                          description: |-
                            IPFamily represents the IP Family (IPv4 or IPv6). This type is used
                            to express the family of an IP expressed by a type (e.g. service.spec.ipFamilies).
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      ipFamilyPolicy:
                        description: |-
                          IPFamilyPolicy represents the dual-stack-ness requested or required by
                          this Service. If there is no value provided, then this field will be set
                          to SingleStack. Services can be "SingleStack" (a single IP family),
                          "PreferDualStack" (two IP families on dual-stack configured clusters or
                          a single IP family on single-stack clusters), or "RequireDualStack"
                          (two IP families on dual-stack configured clusters, otherwise fail). The
                          ipFamilies and clusterIPs fields depend on the value of this field. This
                          field will be wiped when updating a service to type ExternalName.
                        type: string
                      loadBalancerClass:
                        description: |-
                          loadBalancerClass is the class of the load balancer implementation this Service belongs to.
                          If specified, the value of this field must be a label-style identifier, with an optional prefix,
                          e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
                          This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
                          balancer implementation is used, today this is typically done through the cloud provider integration,
                          but should apply for any default implementation. If set, it is assumed that a load balancer
                          implementation is watching for Services with a matching class. Any default load balancer
                          implementation (e.g. cloud providers) should ignore Services that set this field.
                          This field can only be set when creating or updating a Service to type 'LoadBalancer'.
                          Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
                        type: string
                      loadBalancerIP:
                        description: |-
                          Only applies to Service Type: LoadBalancer.
                          This feature depends on whether the underlying cloud-provider supports specifying
                          the loadBalancerIP when a load balancer is created.
                          This field will be ignored if the cloud-provider does not support the feature.
                          Deprecated: This field was under-specified and its meaning varies across implementations,
                          and it cannot support dual-stack.
                          As of Kubernetes v1.24, users are encouraged to use implementation-specific annotations when available.
                          This field may be removed in a future API version.
                        type: string
                      loadBalancerSourceRanges:
                        description: |-
                          If specified and supported by the platform, this will restrict traffic through the cloud-provider
                          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                          cloud-provider does not support the feature."
                          More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
                        items:
                          type: string
                        type: array
                      ports:
                        description: |-
                          The list of ports that are exposed by this service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        items:
                          description: ServicePort contains information on service's
                            port.
                          properties:
                            appProtocol:
                              description: |-
                                The application protocol for this port.
                                This field follows standard Kubernetes label syntax.
                                Un-prefixed names are reserved for IANA standard service names (as per
                                RFC-6335 and https://www.iana.org/assignments/service-names).
                                Non-standard protocols should use prefixed names such as
                                mycompany.com/my-custom-protocol.
                              type: string
                            name:
                              description: |-
                                The name of this port within the service. This must be a DNS_LABEL.
                                All ports within a ServiceSpec must have unique names. When considering
                                the endpoints for a Service, this must match the 'name' field in the
                                EndpointPort.
                                Optional if only one ServicePort is defined on this service.
                              type: string
                            nodePort:
                              description: |-
                                The port on each node on which this service is exposed when type is
                                NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                                specified, in-range, and not in use it will be used, otherwise the
                                operation will fail.  If not specified, a port will be allocated if this
                                Service requires one.  If this field is specified when creating a
                                Service which does not need it, creation will fail. This field will be
                                wiped when updating a Service to no longer need it (e.g. changing type
                                from NodePort to ClusterIP).
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                              format: int32
                              type: integer
                            port:
                              description: The port that will be exposed by this service.
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: |-
                                The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                                Default is TCP.
                              type: string
                            targetPort:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the pods targeted by the service.
                                Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                If this is a string, it will be looked up as a named port in the
                                target Pod's container ports. If this is not specified, the value
                                of the 'port' field is used (an identity map).
                                This field is ignored for services with clusterIP=None, and should be
                                omitted or set equal to the 'port' field.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - port
                        - protocol
                        x-kubernetes-list-type: map
                      publishNotReadyAddresses:
                        description: |-
                          publishNotReadyAddresses indicates that any agent which deals with endpoints for this
                          Service should disregard any indications of ready/not-ready.
                          The primary use case for setting this field is for a StatefulSet's Headless Service to
                          propagate SRV DNS records for its Pods for the purpose of peer discovery.
                          The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
                          Services interpret this to mean that all endpoints are considered "ready" even if the
                          Pods themselves are not. Agents which consume only Kubernetes generated endpoints
                          through the Endpoints or EndpointSlice resources can safely assume this behavior.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Route service traffic to pods with label keys and values matching this
                          selector. If empty or not present, the service is assumed to have an
                          external process managing its endpoints, which Kubernetes will not
                          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
                          Ignored if type is ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/
                        type: object
                        x-kubernetes-map-type: atomic
                      sessionAffinity:
                        description: |-
                          Supports "ClientIP" and "None". Used to maintain session affinity.
                          Enable client IP based session affinity.
                          Must be ClientIP or None.
                          Defaults to None.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        type: string
                      sessionAffinityConfig:
                        description: sessionAffinityConfig contains the configurations
                          of session affinity.
                        properties:
                          clientIP:
                            description: clientIP contains the configurations of Client
                              IP based session affinity.
                            properties:
                              timeoutSeconds:
                                description: |-
                                  timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                                  The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                                  Default value is 10800(for 3 hours).
                                format: int32
                                type: integer
                            type: object
                        type: object
                      type:
                        description: |-
                          type determines how the Service is exposed. Defaults to ClusterIP. Valid
                          options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                          "ClusterIP" allocates a cluster-internal IP address for load-balancing
                          to endpoints. Endpoints are determined by the selector or if that is not
                          specified, by manual construction of an Endpoints object or
                          EndpointSlice objects. If clusterIP is "None", no virtual IP is
                          allocated and the endpoints are published as a set of endpoints rather
                          than a virtual IP.
                          "NodePort" builds on ClusterIP and allocates a port on every node which
                          routes to the same endpoints as the clusterIP.
                          "LoadBalancer" builds on NodePort and creates an external load-balancer
                          (if supported in the current cloud) which routes to the same endpoints
                          as the clusterIP.
                          "ExternalName" aliases this service to the specified externalName.
                          Several other fields do not apply to ExternalName services.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        type: string
                    type: object
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                properties:
                  exec:
                    description: Exec specifies the action to take.
                    properties:
                      command:
                        description: |-
                          Command is the command line to execute inside the container, the working directory for the
                          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                          a shell, you need to explicitly call out to that shell.
                          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  failureThreshold:
                    description: |-
                      Minimum consecutive failures for the probe to be considered failed after having succeeded.
                      Defaults to 3. Minimum value is 1.
                    format: int32
                    type: integer
                  grpc:
                    description: GRPC specifies an action involving a GRPC port.
                    properties:
                      port:
                        description: Port number of the gRPC service. Number must
                          be in the range 1 to 65535.
                        format: int32
                        type: integer
                      service:
                        description: |-
                          Service is the name of the service to place in the gRPC HealthCheckRequest
                          (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                          If this is not specified, the default behavior is defined by gRPC.
                        type: string
                    required:
                    - port
                    type: object
                  httpGet:
                    description: HTTPGet specifies the http request to perform.
                    properties:
                      host:
                        description: |-
                          Host name to connect to, defaults to the pod IP. You probably want to set
                          "Host" in httpHeaders instead.
                        type: string
                      httpHeaders:
                        description: Custom headers to set in the request. HTTP allows
                          repeated headers.
                        items:
                          description: HTTPHeader describes a custom header to be
                            used in HTTP probes
                          properties:
                            name:
                              description: |-
                                The header field name.
                                This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              type: string
                            value:
                              description: The header field value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Name or number of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                      scheme:
                        description: |-
                          Scheme to use for connecting to the host.
                          Defaults to HTTP.
                        type: string
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: |-
                      Number of seconds after the container has started before liveness probes are initiated.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                  periodSeconds:
                    description: |-
                      How often (in seconds) to perform the probe.
                      Default to 10 seconds. Minimum value is 1.
                    format: int32
                    type: integer
                  successThreshold:
                    description: |-
                      Minimum consecutive successes for the probe to be considered successful after having failed.
                      Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    format: int32
                    type: integer
                  tcpSocket:
                    description: TCPSocket specifies an action involving a TCP port.
                    properties:
                      host:
                        description: 'Optional: Host name to connect to, defaults
                          to the pod IP.'
                        type: string
                      port:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Number or name of the port to access on the container.
                          Number must be in the range 1 to 65535.
                          Name must be an IANA_SVC_NAME.
                        x-kubernetes-int-or-string: true
                    required:
                    - port
                    type: object
                  terminationGracePeriodSeconds:
                    description: |-
                      Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                      The grace period is the duration in seconds after the processes running in the pod are sent
                      a termination signal and the time when the processes are forcibly halted with a kill signal.
                      Set this value longer than the expected cleanup time for your process.
                      If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                      value overrides the value provided by the pod spec.
                      Value must be non-negative integer. The value zero indicates stop immediately via
                      the kill signal (no opportunity to shut down).
                      This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                      Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    format: int64
                    type: integer
                  timeoutSeconds:
                    description: |-
                      Number of seconds after which the probe times out.
                      Defaults to 1 second. Minimum value is 1.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    format: int32
                    type: integer
                type: object
              storage:
                description: |-
                  Storage is the definition of how storage will be used by the VMSingle
                  by default it`s empty dir
                properties:
                  accessModes:
                    description: |-
                      accessModes contains the desired access modes the volume should have.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                    items:
                      type: string
                    type: array
                  dataSource:
                    description: |-
                      dataSource field can be used to specify either:
                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                      * An existing PVC (PersistentVolumeClaim)
                      If the provisioner or an external controller can support the specified data source,
                      it will create a new volume based on the contents of the specified data source.
                      When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                      and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                      If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  dataSourceRef:
                    description: |-
                      dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                      volume is desired. This may be any object from a non-empty API group (non
                      core object) or a PersistentVolumeClaim object.
                      When this field is specified, volume binding will only succeed if the type of
                      the specified object matches some installed volume populator or dynamic
                      provisioner.
                      This field will replace the functionality of the dataSource field and as such
                      if both fields are non-empty, they must have the same value. For backwards
                      compatibility, when namespace isn't specified in dataSourceRef,
                      both fields (dataSource and dataSourceRef) will be set to the same
                      value automatically if one of them is empty and the other is non-empty.
                      When namespace is specified in dataSourceRef,
                      dataSource isn't set to the same value and must be empty.
                      There are three important differences between dataSource and dataSourceRef:
                      * While dataSource only allows two specific types of objects, dataSourceRef
                        allows any non-core object, as well as PersistentVolumeClaim objects.
                      * While dataSource ignores disallowed values (dropping them), dataSourceRef
                        preserves all values, and generates an error if a disallowed value is
                        specified.
                      * While dataSource only allows local objects, dataSourceRef allows objects
                        in any namespaces.
                      (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                      (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of resource being referenced
                          Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                          (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: |-
                      resources represents the minimum resources the volume should have.
                      If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                      that are lower than previous value but must still be higher than capacity recorded in the
                      status field of the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  selector:
                    description: selector is a label query over volumes to consider
                      for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  storageClassName:
                    description: |-
                      storageClassName is the name of the StorageClass required by the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                    type: string
                  volumeMode:
                    description: |-
                      volumeMode defines what type of volume is required by the claim.
                      Value of Filesystem is implied when not included in claim spec.
                    type: string
                  volumeName:
                    description: volumeName is the binding reference to the PersistentVolume
                      backing this claim.
                    type: string
                type: object
              storageDataPath:
                description: |-
                  StorageDataPath disables spec.storage option and overrides arg for victoria-metrics binary --storageDataPath,
                  its users responsibility to mount proper device into given path.
                type: string
              storageMetadata:
                description: StorageMeta defines annotations and labels attached to
                  PVC for given vmsingle CR
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              streamAggrConfig:
                description: StreamAggrConfig defines stream aggregation configuration
                  for VMSingle
                properties:
                  dedupInterval:
                    description: Allows setting different de-duplication intervals
                      per each configured remote storage
                    type: string
                  dropInput:
                    description: Allow drop all the input samples after the aggregation
                    type: boolean
                  keepInput:
                    description: Allows writing both raw and aggregate data
                    type: boolean
                  rules:
                    description: Stream aggregation rules
                    items:
                      description: StreamAggrRule defines the rule in stream aggregation
                        config
                      properties:
                        by:
                          description: |-
                            By is an optional list of labels for grouping input series.


                            See also Without.


                            If neither By nor Without are set, then the Outputs are calculated
                            individually per each input time series.
                          items:
                            type: string
                          type: array
                        dedup_interval:
                          description: DedupInterval is an optional interval for deduplication.
                          type: string
                        drop_input_labels:
                          description: |-
                            DropInputLabels is an optional list with labels, which must be dropped before further processing of input samples.


                            Labels are dropped before de-duplication and aggregation.
                          items:
                            type: string
                          type: array
                        flush_on_shutdown:
                          description: |-
                            FlushOnShutdown defines whether to flush the aggregation state on process termination
                            or config reload. Is `false` by default.
                            It is not recommended changing this setting, unless unfinished aggregations states
                            are preferred to missing data points.
                          type: boolean
                        ignore_old_samples:
                          description: IgnoreOldSamples instructs to ignore samples
                            with old timestamps outside the current aggregation interval.
                          type: boolean
                        input_relabel_configs:
                          description: |-
                            InputRelabelConfigs is an optional relabeling rules, which are applied on the input
                            before aggregation.
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.
                              It defines `<metric_relabel_configs>`-section of configuration.
                              More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        interval:
                          description: Interval is the interval between aggregations.
                          type: string
                        keep_metric_names:
                          description: KeepMetricNames instructs to leave metric names
                            as is for the output time series without adding any suffix.
                          type: boolean
                        match:
                          description: |-
                            Match is a label selector (or list of label selectors) for filtering time series for the given selector.


                            If the match isn't set, then all the input time series are processed.
                          x-kubernetes-preserve-unknown-fields: true
                        no_align_flush_to_interval:
                          description: |-
                            NoAlignFlushToInterval disables aligning of flushes to multiples of Interval.
                            By default flushes are aligned to Interval.
                          type: boolean
                        output_relabel_configs:
                          description: |-
                            OutputRelabelConfigs is an optional relabeling rules, which are applied
                            on the aggregated output before being sent to remote storage.
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.
                              It defines `<metric_relabel_configs>`-section of configuration.
                              More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        outputs:
                          description: |-
                            Outputs is a list of output aggregate functions to produce.


                            The following names are allowed:


                            - total - aggregates input counters
                            - increase - counts the increase over input counters
                            - count_series - counts the input series
                            - count_samples - counts the input samples
                            - sum_samples - sums the input samples
                            - last - the last biggest sample value
                            - min - the minimum sample value
                            - max - the maximum sample value
                            - avg - the average value across all the samples
                            - stddev - standard deviation across all the samples
                            - stdvar - standard variance across all the samples
                            - histogram_bucket - creates VictoriaMetrics histogram for input samples
                            - quantiles(phi1, ..., phiN) - quantiles' estimation for phi in the range [0..1]


                            The output time series will have the following names:


                              input_name:aggr_<interval>_<output>
                          items:
                            type: string
                          type: array
                        staleness_interval:
                          description: |-
                            Staleness interval is interval after which the series state will be reset if no samples have been sent during it.
                            The parameter is only relevant for outputs: total, total_prometheus, increase, increase_prometheus and histogram_bucket.
                          type: string
                        without:
                          description: |-
                            Without is an optional list of labels, which must be excluded when grouping input series.


                            See also By.


                            If neither By nor Without are set, then the Outputs are calculated
                            individually per each input time series.
                          items:
                            type: string
                          type: array
                      required:
                      - interval
                      - outputs
                      type: object
                    type: array
                required:
                - rules
                type: object
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  properties:
                    labelSelector:
                      description: |-
                        LabelSelector is used to find matching pods.
                        Pods that match this label selector are counted to determine the number of pods
                        in their corresponding topology domain.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    matchLabelKeys:
                      description: |-
                        MatchLabelKeys is a set of pod label keys to select the pods over which
                        spreading will be calculated. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are ANDed with labelSelector
                        to select the group of existing pods over which spreading will be calculated
                        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                        MatchLabelKeys cannot be set when LabelSelector isn't set.
                        Keys that don't exist in the incoming pod labels will
                        be ignored. A null or empty list means only match against labelSelector.


                        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    maxSkew:
                      description: |-
                        MaxSkew describes the degree to which pods may be unevenly distributed.
                        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                        between the number of matching pods in the target topology and the global minimum.
                        The global minimum is the minimum number of matching pods in an eligible domain
                        or zero if the number of eligible domains is less than MinDomains.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 2/2/1:
                        In this case, the global minimum is 1.
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |   P   |
                        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                        violate MaxSkew(1).
                        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                        to topologies that satisfy it.
                        It's a required field. Default value is 1 and 0 is not allowed.
                      format: int32
                      type: integer
                    minDomains:
                      description: |-
                        MinDomains indicates a minimum number of eligible domains.
                        When the number of eligible domains with matching topology keys is less than minDomains,
                        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                        this value has no effect on scheduling.
                        As a result, when the number of eligible domains is less than minDomains,
                        scheduler won't schedule more than maxSkew Pods to those domains.
                        If value is nil, the constraint behaves as if MinDomains is equal to 1.
                        Valid values are integers greater than 0.
                        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.


                        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                        labelSelector spread as 2/2/2:
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |  P P  |
                        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                        In this situation, new pod with the same labelSelector cannot be scheduled,
                        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                        it will violate MaxSkew.


                        This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
                      format: int32
                      type: integer
                    nodeAffinityPolicy:
                      description: |-
                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                        when calculating pod topology spread skew. Options are:
                        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.


                        If this value is nil, the behavior is equivalent to the Honor policy.
                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                      type: string
                    nodeTaintsPolicy:
                      description: |-
                        NodeTaintsPolicy indicates how we will treat node taints when calculating
                        pod topology spread skew. Options are:
                        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                        has a toleration, are included.
                        - Ignore: node taints are ignored. All nodes are included.


                        If this value is nil, the behavior is equivalent to the Ignore policy.
                        This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                      type: string
                    topologyKey:
                      description: |-
                        TopologyKey is the key of node labels. Nodes that have a label with this key
                        and identical values are considered to be in the same topology.
                        We consider each <key, value> as a "bucket", and try to put balanced number
                        of pods into each bucket.
                        We define a domain as a particular instance of a topology.
                        Also, we define an eligible domain as a domain whose nodes meet the requirements of
                        nodeAffinityPolicy and nodeTaintsPolicy.
                        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                        It's a required field.
                      type: string
                    whenUnsatisfiable:
                      description: |-
                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                        the spread constraint.
                        - DoNotSchedule (default) tells the scheduler not to schedule it.
                        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                          but giving higher precedence to topologies that would help reduce the
                          skew.
                        A constraint is considered "Unsatisfiable" for an incoming pod
                        if and only if every possible node assignment for that pod would violate
                        "MaxSkew" on some topology.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 3/1/1:
                        | zone1 | zone2 | zone3 |
                        | P P P |   P   |   P   |
                        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                        won't make it *more* imbalanced.
                        It's a required field.
                      type: string
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                type: array
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              vmBackup:
                description: VMBackup configuration for backup
                properties:
                  acceptEULA:
                    description: |-
                      AcceptEULA accepts enterprise feature usage, must be set to true.
                      otherwise backupmanager cannot be added to single/cluster version.
                      https://victoriametrics.com/legal/esa/
                    type: boolean
                  concurrency:
                    description: Defines number of concurrent workers. Higher concurrency
                      may reduce backup duration (default 10)
                    format: int32
                    type: integer
                  credentialsSecret:
                    description: |-
                      CredentialsSecret is secret in the same namespace for access to remote storage
                      The secret is mounted into /etc/vm/creds.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  customS3Endpoint:
                    description: Custom S3 endpoint for use with S3-compatible storages
                      (e.g. MinIO). S3 is used if not set
                    type: string
                  destination:
                    description: Defines destination for backup
                    type: string
                  destinationDisableSuffixAdd:
                    description: |-
                      DestinationDisableSuffixAdd - disables suffix adding for cluster version backups
                      each vmstorage backup must have unique backup folder
                      so operator adds POD_NAME as suffix for backup destination folder.
                    type: boolean
                  disableDaily:
                    description: Defines if daily backups disabled (default false)
                    type: boolean
                  disableHourly:
                    description: Defines if hourly backups disabled (default false)
                    type: boolean
                  disableMonthly:
                    description: Defines if monthly backups disabled (default false)
                    type: boolean
                  disableWeekly:
                    description: Defines if weekly backups disabled (default false)
                    type: boolean
                  extraArgs:
                    additionalProperties:
                      type: string
                    description: extra args like maxBytesPerSecond default 0
                    type: object
                  extraEnvs:
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image - docker image settings for VMBackuper
                    properties:
                      pullPolicy:
                        description: PullPolicy describes how to pull docker image
                        type: string
                      repository:
                        description: Repository contains name of docker image + it's
                          repository if needed
                        type: string
                      tag:
                        description: Tag contains desired docker image version
                        type: string
                    type: object
                  logFormat:
                    description: |-
                      LogFormat for VMBackup to be configured with.
                      default or json
                    enum:
                    - default
                    - json
                    type: string
                  logLevel:
                    description: LogLevel for VMBackup to be configured with.
                    enum:
                    - INFO
                    - WARN
                    - ERROR
                    - FATAL
                    - PANIC
                    type: string
                  port:
                    description: Port for health check connections
                    type: string
                  resources:
                    description: |-
                      Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      if not defined default resources from operator config will be used
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  restore:
                    description: |-
                      Restore Allows to enable restore options for pod
                      Read more: https://docs.victoriametrics.com/vmbackupmanager.html#restore-commands
                    properties:
                      onStart:
                        description: OnStart defines configuration for restore on
                          pod start
                        properties:
                          enabled:
                            description: Enabled defines if restore on start enabled
                            type: boolean
                        type: object
                    type: object
                  snapshotCreateURL:
                    description: SnapshotCreateURL overwrites url for snapshot create
                    type: string
                  snapshotDeleteURL:
                    description: SnapShotDeleteURL overwrites url for snapshot delete
                    type: string
                  volumeMounts:
                    description: |-
                      VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
                      VolumeMounts specified will be appended to other VolumeMounts in the vmbackupmanager container,
                      that are generated as a result of StorageSpec objects.
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                type: object
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the VMSingle container,
                  that are generated as a result of StorageSpec objects.
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output deploy definition.
                  Volumes specified will be appended to other volumes that are generated as a result of
                  StorageSpec objects.
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  properties:
                    awsElasticBlockStore:
                      description: |-
                        awsElasticBlockStore represents an AWS Disk resource that is attached to a
                        kubelet's host machine and then exposed to the pod.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        partition:
                          description: |-
                            partition is the partition in the volume that you want to mount.
                            If omitted, the default is to mount by volume name.
                            Examples: For volume /dev/sda1, you specify the partition as "1".
                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                          format: int32
                          type: integer
                        readOnly:
                          description: |-
                            readOnly value true will force the readOnly setting in VolumeMounts.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          type: boolean
                        volumeID:
                          description: |-
                            volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          type: string
                      required:
                      - volumeID
                      type: object
                    azureDisk:
                      description: azureDisk represents an Azure Data Disk mount on
                        the host and bind mount to the pod.
                      properties:
                        cachingMode:
                          description: 'cachingMode is the Host Caching mode: None,
                            Read Only, Read Write.'
                          type: string
                        diskName:
                          description: diskName is the Name of the data disk in the
                            blob storage
                          type: string
                        diskURI:
                          description: diskURI is the URI of data disk in the blob
                            storage
                          type: string
                        fsType:
                          description: |-
                            fsType is Filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        kind:
                          description: 'kind expected values are Shared: multiple
                            blob disks per storage account  Dedicated: single blob
                            disk per storage account  Managed: azure managed data
                            disk (only in managed availability set). defaults to shared'
                          type: string
                        readOnly:
                          description: |-
                            readOnly Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                      required:
                      - diskName
                      - diskURI
                      type: object
                    azureFile:
                      description: azureFile represents an Azure File Service mount
                        on the host and bind mount to the pod.
                      properties:
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretName:
                          description: secretName is the  name of secret that contains
                            Azure Storage Account Name and Key
                          type: string
                        shareName:
                          description: shareName is the azure share Name
                          type: string
                      required:
                      - secretName
                      - shareName
                      type: object
                    cephfs:
                      description: cephFS represents a Ceph FS mount on the host that
                        shares a pod's lifetime
                      properties:
                        monitors:
                          description: |-
                            monitors is Required: Monitors is a collection of Ceph monitors
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          items:
                            type: string
                          type: array
                        path:
                          description: 'path is Optional: Used as the mounted root,
                            rather than the full Ceph tree, default is /'
                          type: string
                        readOnly:
                          description: |-
                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          type: boolean
                        secretFile:
                          description: |-
                            secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          type: string
                        secretRef:
                          description: |-
                            secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        user:
                          description: |-
                            user is optional: User is the rados user name, default is admin
                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                          type: string
                      required:
                      - monitors
                      type: object
                    cinder:
                      description: |-
                        cinder represents a cinder volume attached and mounted on kubelets host machine.
                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          type: string
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef is optional: points to a secret object containing parameters used to connect
                            to OpenStack.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        volumeID:
                          description: |-
                            volumeID used to identify the volume in cinder.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          type: string
                      required:
                      - volumeID
                      type: object
                    configMap:
                      description: configMap represents a configMap that should populate
                        this volume
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items if unspecified, each key-value pair in the Data field of the referenced
                            ConfigMap will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the ConfigMap,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                        optional:
                          description: optional specify whether the ConfigMap or its
                            keys must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                    csi:
                      description: csi (Container Storage Interface) represents ephemeral
                        storage that is handled by certain external CSI drivers (Beta
                        feature).
                      properties:
                        driver:
                          description: |-
                            driver is the name of the CSI driver that handles this volume.
                            Consult with your admin for the correct name as registered in the cluster.
                          type: string
                        fsType:
                          description: |-
                            fsType to mount. Ex. "ext4", "xfs", "ntfs".
                            If not provided, the empty value is passed to the associated CSI driver
                            which will determine the default filesystem to apply.
                          type: string
                        nodePublishSecretRef:
                          description: |-
                            nodePublishSecretRef is a reference to the secret object containing
                            sensitive information to pass to the CSI driver to complete the CSI
                            NodePublishVolume and NodeUnpublishVolume calls.
                            This field is optional, and  may be empty if no secret is required. If the
                            secret object contains more than one secret, all secret references are passed.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        readOnly:
                          description: |-
                            readOnly specifies a read-only configuration for the volume.
                            Defaults to false (read/write).
                          type: boolean
                        volumeAttributes:
                          additionalProperties:
                            type: string
                          description: |-
                            volumeAttributes stores driver-specific properties that are passed to the CSI
                            driver. Consult your driver's documentation for supported values.
                          type: object
                      required:
                      - driver
                      type: object
                    downwardAPI:
                      description: downwardAPI represents downward API about the pod
                        that should populate this volume
                      properties:
                        defaultMode:
                          description: |-
                            Optional: mode bits to use on created files by default. Must be a
                            Optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: Items is a list of downward API volume file
                          items:
                            description: DownwardAPIVolumeFile represents information
                              to create the file containing the pod field
                            properties:
                              fieldRef:
                                description: 'Required: Selects a field of the pod:
                                  only annotations, labels, name and namespace are
                                  supported.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              mode:
                                description: |-
                                  Optional: mode bits used to set permissions on this file, must be an octal value
                                  between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: 'Required: Path is  the relative path
                                  name of the file to be created. Must not be absolute
                                  or contain the ''..'' path. Must be utf-8 encoded.
                                  The first item of the relative path must not start
                                  with ''..'''
                                type: string
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                            required:
                            - path
                            type: object
                          type: array
                      type: object
                    emptyDir:
                      description: |-
                        emptyDir represents a temporary directory that shares a pod's lifetime.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                      properties:
                        medium:
                          description: |-
                            medium represents what type of storage medium should back this directory.
                            The default is "" which means to use the node's default medium.
                            Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          type: string
                        sizeLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            sizeLimit is the total amount of local storage required for this EmptyDir volume.
                            The size limit is also applicable for memory medium.
                            The maximum usage on memory medium EmptyDir would be the minimum value between
                            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                            The default is nil which means that the limit is undefined.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    ephemeral:
                      description: |-
                        ephemeral represents a volume that is handled by a cluster storage driver.
                        The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                        and deleted when the pod is removed.


                        Use this if:
                        a) the volume is only needed while the pod runs,
                        b) features of normal volumes like restoring from snapshot or capacity
                           tracking are needed,
                        c) the storage driver is specified through a storage class, and
                        d) the storage driver supports dynamic volume provisioning through
                           a PersistentVolumeClaim (see EphemeralVolumeSource for more
                           information on the connection between this volume type
                           and PersistentVolumeClaim).


                        Use PersistentVolumeClaim or one of the vendor-specific
                        APIs for volumes that persist for longer than the lifecycle
                        of an individual pod.


                        Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                        be used that way - see the documentation of the driver for
                        more information.


                        A pod can use both types of ephemeral volumes and
                        persistent volumes at the same time.
                      properties:
                        volumeClaimTemplate:
                          description: |-
                            Will be used to create a stand-alone PVC to provision the volume.
                            The pod in which this EphemeralVolumeSource is embedded will be the
                            owner of the PVC, i.e. the PVC will be deleted together with the
                            pod.  The name of the PVC will be `<pod name>-<volume name>` where
                            `<volume name>` is the name from the `PodSpec.Volumes` array
                            entry. Pod validation will reject the pod if the concatenated name
                            is not valid for a PVC (for example, too long).


                            An existing PVC with that name that is not owned by the pod
                            will *not* be used for the pod to avoid using an unrelated
                            volume by mistake. Starting the pod is then blocked until
                            the unrelated PVC is removed. If such a pre-created PVC is
                            meant to be used by the pod, the PVC has to updated with an
                            owner reference to the pod once the pod exists. Normally
                            this should not be necessary, but it may be useful when
                            manually reconstructing a broken cluster.


                            This field is read-only and no changes will be made by Kubernetes
                            to the PVC after it has been created.


                            Required, must not be nil.
                          properties:
                            metadata:
                              description: |-
                                May contain labels and annotations that will be copied into the PVC
                                when creating it. No other fields are allowed and will be rejected during
                                validation.
                              type: object
                            spec:
                              description: |-
                                The specification for the PersistentVolumeClaim. The entire content is
                                copied unchanged into the PVC that gets created from this
                                template. The same fields as in a PersistentVolumeClaim
                                are also valid here.
                              properties:
                                accessModes:
                                  description: |-
                                    accessModes contains the desired access modes the volume should have.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                  items:
                                    type: string
                                  type: array
                                dataSource:
                                  description: |-
                                    dataSource field can be used to specify either:
                                    * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                    * An existing PVC (PersistentVolumeClaim)
                                    If the provisioner or an external controller can support the specified data source,
                                    it will create a new volume based on the contents of the specified data source.
                                    When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                    and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                    If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                  properties:
                                    apiGroup:
                                      description: |-
                                        APIGroup is the group for the resource being referenced.
                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                        For any other third-party types, APIGroup is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                dataSourceRef:
                                  description: |-
                                    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                    volume is desired. This may be any object from a non-empty API group (non
                                    core object) or a PersistentVolumeClaim object.
                                    When this field is specified, volume binding will only succeed if the type of
                                    the specified object matches some installed volume populator or dynamic
                                    provisioner.
                                    This field will replace the functionality of the dataSource field and as such
                                    if both fields are non-empty, they must have the same value. For backwards
                                    compatibility, when namespace isn't specified in dataSourceRef,
                                    both fields (dataSource and dataSourceRef) will be set to the same
                                    value automatically if one of them is empty and the other is non-empty.
                                    When namespace is specified in dataSourceRef,
                                    dataSource isn't set to the same value and must be empty.
                                    There are three important differences between dataSource and dataSourceRef:
                                    * While dataSource only allows two specific types of objects, dataSourceRef
                                      allows any non-core object, as well as PersistentVolumeClaim objects.
                                    * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                      preserves all values, and generates an error if a disallowed value is
                                      specified.
                                    * While dataSource only allows local objects, dataSourceRef allows objects
                                      in any namespaces.
                                    (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                    (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                  properties:
                                    apiGroup:
                                      description: |-
                                        APIGroup is the group for the resource being referenced.
                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                        For any other third-party types, APIGroup is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of resource being referenced
                                        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                        (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                resources:
                                  description: |-
                                    resources represents the minimum resources the volume should have.
                                    If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                    that are lower than previous value but must still be higher than capacity recorded in the
                                    status field of the claim.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.


                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.


                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                selector:
                                  description: selector is a label query over volumes
                                    to consider for binding.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                storageClassName:
                                  description: |-
                                    storageClassName is the name of the StorageClass required by the claim.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                  type: string
                                volumeMode:
                                  description: |-
                                    volumeMode defines what type of volume is required by the claim.
                                    Value of Filesystem is implied when not included in claim spec.
                                  type: string
                                volumeName:
                                  description: volumeName is the binding reference
                                    to the PersistentVolume backing this claim.
                                  type: string
                              type: object
                          required:
                          - spec
                          type: object
                      type: object
                    fc:
                      description: fc represents a Fibre Channel resource that is
                        attached to a kubelet's host machine and then exposed to the
                        pod.
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        lun:
                          description: 'lun is Optional: FC target lun number'
                          format: int32
                          type: integer
                        readOnly:
                          description: |-
                            readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        targetWWNs:
                          description: 'targetWWNs is Optional: FC target worldwide
                            names (WWNs)'
                          items:
                            type: string
                          type: array
                        wwids:
                          description: |-
                            wwids Optional: FC volume world wide identifiers (wwids)
                            Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                          items:
                            type: string
                          type: array
                      type: object
                    flexVolume:
                      description: |-
                        flexVolume represents a generic volume resource that is
                        provisioned/attached using an exec based plugin.
                      properties:
                        driver:
                          description: driver is the name of the driver to use for
                            this volume.
                          type: string
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: 'options is Optional: this field holds extra
                            command options if any.'
                          type: object
                        readOnly:
                          description: |-
                            readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef is Optional: secretRef is reference to the secret object containing
                            sensitive information to pass to the plugin scripts. This may be
                            empty if no secret object is specified. If the secret object
                            contains more than one secret, all secrets are passed to the plugin
                            scripts.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - driver
                      type: object
                    flocker:
                      description: flocker represents a Flocker volume attached to
                        a kubelet's host machine. This depends on the Flocker control
                        service being running
                      properties:
                        datasetName:
                          description: |-
                            datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                            should be considered as deprecated
                          type: string
                        datasetUUID:
                          description: datasetUUID is the UUID of the dataset. This
                            is unique identifier of a Flocker dataset
                          type: string
                      type: object
                    gcePersistentDisk:
                      description: |-
                        gcePersistentDisk represents a GCE Disk resource that is attached to a
                        kubelet's host machine and then exposed to the pod.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                      properties:
                        fsType:
                          description: |-
                            fsType is filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        partition:
                          description: |-
                            partition is the partition in the volume that you want to mount.
                            If omitted, the default is to mount by volume name.
                            Examples: For volume /dev/sda1, you specify the partition as "1".
                            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          format: int32
                          type: integer
                        pdName:
                          description: |-
                            pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the ReadOnly setting in VolumeMounts.
                            Defaults to false.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          type: boolean
                      required:
                      - pdName
                      type: object
                    gitRepo:
                      description: |-
                        gitRepo represents a git repository at a particular revision.
                        DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                        EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                        into the Pod's container.
                      properties:
                        directory:
                          description: |-
                            directory is the target directory name.
                            Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                            git repository.  Otherwise, if specified, the volume will contain the git repository in
                            the subdirectory with the given name.
                          type: string
                        repository:
                          description: repository is the URL
                          type: string
                        revision:
                          description: revision is the commit hash for the specified
                            revision.
                          type: string
                      required:
                      - repository
                      type: object
                    glusterfs:
                      description: |-
                        glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                        More info: https://examples.k8s.io/volumes/glusterfs/README.md
                      properties:
                        endpoints:
                          description: |-
                            endpoints is the endpoint name that details Glusterfs topology.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          type: string
                        path:
                          description: |-
                            path is the Glusterfs volume path.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                            Defaults to false.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                          type: boolean
                      required:
                      - endpoints
                      - path
                      type: object
                    hostPath:
                      description: |-
                        hostPath represents a pre-existing file or directory on the host
                        machine that is directly exposed to the container. This is generally
                        used for system agents or other privileged things that are allowed
                        to see the host machine. Most containers will NOT need this.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                        ---
                        TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
                        mount host directories as read/write.
                      properties:
                        path:
                          description: |-
                            path of the directory on the host.
                            If the path is a symlink, it will follow the link to the real path.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          type: string
                        type:
                          description: |-
                            type for HostPath Volume
                            Defaults to ""
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          type: string
                      required:
                      - path
                      type: object
                    iscsi:
                      description: |-
                        iscsi represents an ISCSI Disk resource that is attached to a
                        kubelet's host machine and then exposed to the pod.
                        More info: https://examples.k8s.io/volumes/iscsi/README.md
                      properties:
                        chapAuthDiscovery:
                          description: chapAuthDiscovery defines whether support iSCSI
                            Discovery CHAP authentication
                          type: boolean
                        chapAuthSession:
                          description: chapAuthSession defines whether support iSCSI
                            Session CHAP authentication
                          type: boolean
                        fsType:
                          description: |-
                            fsType is the filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        initiatorName:
                          description: |-
                            initiatorName is the custom iSCSI Initiator Name.
                            If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                            <target portal>:<volume name> will be created for the connection.
                          type: string
                        iqn:
                          description: iqn is the target iSCSI Qualified Name.
                          type: string
                        iscsiInterface:
                          description: |-
                            iscsiInterface is the interface Name that uses an iSCSI transport.
                            Defaults to 'default' (tcp).
                          type: string
                        lun:
                          description: lun represents iSCSI Target Lun number.
                          format: int32
                          type: integer
                        portals:
                          description: |-
                            portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                            is other than default (typically TCP ports 860 and 3260).
                          items:
                            type: string
                          type: array
                        readOnly:
                          description: |-
                            readOnly here will force the ReadOnly setting in VolumeMounts.
                            Defaults to false.
                          type: boolean
                        secretRef:
                          description: secretRef is the CHAP Secret for iSCSI target
                            and initiator authentication
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        targetPortal:
                          description: |-
                            targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                            is other than default (typically TCP ports 860 and 3260).
                          type: string
                      required:
                      - iqn
                      - lun
                      - targetPortal
                      type: object
                    name:
                      description: |-
                        name of the volume.
                        Must be a DNS_LABEL and unique within the pod.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    nfs:
                      description: |-
                        nfs represents an NFS mount on the host that shares a pod's lifetime
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                      properties:
                        path:
                          description: |-
                            path that is exported by the NFS server.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the NFS export to be mounted with read-only permissions.
                            Defaults to false.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: boolean
                        server:
                          description: |-
                            server is the hostname or IP address of the NFS server.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          type: string
                      required:
                      - path
                      - server
                      type: object
                    persistentVolumeClaim:
                      description: |-
                        persistentVolumeClaimVolumeSource represents a reference to a
                        PersistentVolumeClaim in the same namespace.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        claimName:
                          description: |-
                            claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          type: string
                        readOnly:
                          description: |-
                            readOnly Will force the ReadOnly setting in VolumeMounts.
                            Default false.
                          type: boolean
                      required:
                      - claimName
                      type: object
                    photonPersistentDisk:
                      description: photonPersistentDisk represents a PhotonController
                        persistent disk attached and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        pdID:
                          description: pdID is the ID that identifies Photon Controller
                            persistent disk
                          type: string
                      required:
                      - pdID
                      type: object
                    portworxVolume:
                      description: portworxVolume represents a portworx volume attached
                        and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: |-
                            fSType represents the filesystem type to mount
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        volumeID:
                          description: volumeID uniquely identifies a Portworx volume
                          type: string
                      required:
                      - volumeID
                      type: object
                    projected:
                      description: projected items for all in one resources secrets,
                        configmaps, and downward API
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode are the mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        sources:
                          description: sources is the list of volume projections
                          items:
                            description: Projection that may be projected along with
                              other supported volume types
                            properties:
                              configMap:
                                description: configMap information about the configMap
                                  data to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      ConfigMap will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the ConfigMap,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: optional specify whether the ConfigMap
                                      or its keys must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              downwardAPI:
                                description: downwardAPI information about the downwardAPI
                                  data to project
                                properties:
                                  items:
                                    description: Items is a list of DownwardAPIVolume
                                      file
                                    items:
                                      description: DownwardAPIVolumeFile represents
                                        information to create the file containing
                                        the pod field
                                      properties:
                                        fieldRef:
                                          description: 'Required: Selects a field
                                            of the pod: only annotations, labels,
                                            name and namespace are supported.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        mode:
                                          description: |-
                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: 'Required: Path is  the relative
                                            path name of the file to be created. Must
                                            not be absolute or contain the ''..''
                                            path. Must be utf-8 encoded. The first
                                            item of the relative path must not start
                                            with ''..'''
                                          type: string
                                        resourceFieldRef:
                                          description: |-
                                            Selects a resource of the container: only resources limits and requests
                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - path
                                      type: object
                                    type: array
                                type: object
                              secret:
                                description: secret information about the secret data
                                  to project
                                properties:
                                  items:
                                    description: |-
                                      items if unspecified, each key-value pair in the Data field of the referenced
                                      Secret will be projected into the volume as a file whose name is the
                                      key and content is the value. If specified, the listed keys will be
                                      projected into the specified paths, and unlisted keys will not be
                                      present. If a key is specified which is not present in the Secret,
                                      the volume setup will error unless it is marked optional. Paths must be
                                      relative and may not contain the '..' path or start with '..'.
                                    items:
                                      description: Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: key is the key to project.
                                          type: string
                                        mode:
                                          description: |-
                                            mode is Optional: mode bits used to set permissions on this file.
                                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                            If not specified, the volume defaultMode will be used.
                                            This might be in conflict with other options that affect the file
                                            mode, like fsGroup, and the result can be other mode bits set.
                                          format: int32
                                          type: integer
                                        path:
                                          description: |-
                                            path is the relative path of the file to map the key to.
                                            May not be an absolute path.
                                            May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                      - key
                                      - path
                                      type: object
                                    type: array
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                    type: string
                                  optional:
                                    description: optional field specify whether the
                                      Secret or its key must be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              serviceAccountToken:
                                description: serviceAccountToken is information about
                                  the serviceAccountToken data to project
                                properties:
                                  audience:
                                    description: |-
                                      audience is the intended audience of the token. A recipient of a token
                                      must identify itself with an identifier specified in the audience of the
                                      token, and otherwise should reject the token. The audience defaults to the
                                      identifier of the apiserver.
                                    type: string
                                  expirationSeconds:
                                    description: |-
                                      expirationSeconds is the requested duration of validity of the service
                                      account token. As the token approaches expiration, the kubelet volume
                                      plugin will proactively rotate the service account token. The kubelet will
                                      start trying to rotate the token if the token is older than 80 percent of
                                      its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                      and must be at least 10 minutes.
                                    format: int64
                                    type: integer
                                  path:
                                    description: |-
                                      path is the path relative to the mount point of the file to project the
                                      token into.
                                    type: string
                                required:
                                - path
                                type: object
                            type: object
                          type: array
                      type: object
                    quobyte:
                      description: quobyte represents a Quobyte mount on the host
                        that shares a pod's lifetime
                      properties:
                        group:
                          description: |-
                            group to map volume access to
                            Default is no group
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                            Defaults to false.
                          type: boolean
                        registry:
                          description: |-
                            registry represents a single or multiple Quobyte Registry services
                            specified as a string as host:port pair (multiple entries are separated with commas)
                            which acts as the central registry for volumes
                          type: string
                        tenant:
                          description: |-
                            tenant owning the given Quobyte volume in the Backend
                            Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                          type: string
                        user:
                          description: |-
                            user to map volume access to
                            Defaults to serivceaccount user
                          type: string
                        volume:
                          description: volume is a string that references an already
                            created Quobyte volume by name.
                          type: string
                      required:
                      - registry
                      - volume
                      type: object
                    rbd:
                      description: |-
                        rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                        More info: https://examples.k8s.io/volumes/rbd/README.md
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type of the volume that you want to mount.
                            Tip: Ensure that the filesystem type is supported by the host operating system.
                            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                            TODO: how do we prevent errors in the filesystem from compromising the machine
                          type: string
                        image:
                          description: |-
                            image is the rados image name.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                        keyring:
                          description: |-
                            keyring is the path to key ring for RBDUser.
                            Default is /etc/ceph/keyring.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                        monitors:
                          description: |-
                            monitors is a collection of Ceph monitors.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          items:
                            type: string
                          type: array
                        pool:
                          description: |-
                            pool is the rados pool name.
                            Default is rbd.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                        readOnly:
                          description: |-
                            readOnly here will force the ReadOnly setting in VolumeMounts.
                            Defaults to false.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef is name of the authentication secret for RBDUser. If provided
                            overrides keyring.
                            Default is nil.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        user:
                          description: |-
                            user is the rados user name.
                            Default is admin.
                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                          type: string
                      required:
                      - image
                      - monitors
                      type: object
                    scaleIO:
                      description: scaleIO represents a ScaleIO persistent volume
                        attached and mounted on Kubernetes nodes.
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs".
                            Default is "xfs".
                          type: string
                        gateway:
                          description: gateway is the host address of the ScaleIO
                            API Gateway.
                          type: string
                        protectionDomain:
                          description: protectionDomain is the name of the ScaleIO
                            Protection Domain for the configured storage.
                          type: string
                        readOnly:
                          description: |-
                            readOnly Defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef references to the secret for ScaleIO user and other
                            sensitive information. If this is not provided, Login operation will fail.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        sslEnabled:
                          description: sslEnabled Flag enable/disable SSL communication
                            with Gateway, default false
                          type: boolean
                        storageMode:
                          description: |-
                            storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                            Default is ThinProvisioned.
                          type: string
                        storagePool:
                          description: storagePool is the ScaleIO Storage Pool associated
                            with the protection domain.
                          type: string
                        system:
                          description: system is the name of the storage system as
                            configured in ScaleIO.
                          type: string
                        volumeName:
                          description: |-
                            volumeName is the name of a volume already created in the ScaleIO system
                            that is associated with this volume source.
                          type: string
                      required:
                      - gateway
                      - secretRef
                      - system
                      type: object
                    secret:
                      description: |-
                        secret represents a secret that should populate this volume.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                      properties:
                        defaultMode:
                          description: |-
                            defaultMode is Optional: mode bits used to set permissions on created files by default.
                            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                            YAML accepts both octal and decimal values, JSON requires decimal values
                            for mode bits. Defaults to 0644.
                            Directories within the path are not affected by this setting.
                            This might be in conflict with other options that affect the file
                            mode, like fsGroup, and the result can be other mode bits set.
                          format: int32
                          type: integer
                        items:
                          description: |-
                            items If unspecified, each key-value pair in the Data field of the referenced
                            Secret will be projected into the volume as a file whose name is the
                            key and content is the value. If specified, the listed keys will be
                            projected into the specified paths, and unlisted keys will not be
                            present. If a key is specified which is not present in the Secret,
                            the volume setup will error unless it is marked optional. Paths must be
                            relative and may not contain the '..' path or start with '..'.
                          items:
                            description: Maps a string key to a path within a volume.
                            properties:
                              key:
                                description: key is the key to project.
                                type: string
                              mode:
                                description: |-
                                  mode is Optional: mode bits used to set permissions on this file.
                                  Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                  YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                  If not specified, the volume defaultMode will be used.
                                  This might be in conflict with other options that affect the file
                                  mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              path:
                                description: |-
                                  path is the relative path of the file to map the key to.
                                  May not be an absolute path.
                                  May not contain the path element '..'.
                                  May not start with the string '..'.
                                type: string
                            required:
                            - key
                            - path
                            type: object
                          type: array
                        optional:
                          description: optional field specify whether the Secret or
                            its keys must be defined
                          type: boolean
                        secretName:
                          description: |-
                            secretName is the name of the secret in the pod's namespace to use.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          type: string
                      type: object
                    storageos:
                      description: storageOS represents a StorageOS volume attached
                        and mounted on Kubernetes nodes.
                      properties:
                        fsType:
                          description: |-
                            fsType is the filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        readOnly:
                          description: |-
                            readOnly defaults to false (read/write). ReadOnly here will force
                            the ReadOnly setting in VolumeMounts.
                          type: boolean
                        secretRef:
                          description: |-
                            secretRef specifies the secret to use for obtaining the StorageOS API
                            credentials.  If not specified, default values will be attempted.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        volumeName:
                          description: |-
                            volumeName is the human-readable name of the StorageOS volume.  Volume
                            names are only unique within a namespace.
                          type: string
                        volumeNamespace:
                          description: |-
                            volumeNamespace specifies the scope of the volume within StorageOS.  If no
                            namespace is specified then the Pod's namespace will be used.  This allows the
                            Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                            Set VolumeName to any name to override the default behaviour.
                            Set to "default" if you are not using namespaces within StorageOS.
                            Namespaces that do not pre-exist within StorageOS will be created.
                          type: string
                      type: object
                    vsphereVolume:
                      description: vsphereVolume represents a vSphere volume attached
                        and mounted on kubelets host machine
                      properties:
                        fsType:
                          description: |-
                            fsType is filesystem type to mount.
                            Must be a filesystem type supported by the host operating system.
                            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                          type: string
                        storagePolicyID:
                          description: storagePolicyID is the storage Policy Based
                            Management (SPBM) profile ID associated with the StoragePolicyName.
                          type: string
                        storagePolicyName:
                          description: storagePolicyName is the storage Policy Based
                            Management (SPBM) profile name.
                          type: string
                        volumePath:
                          description: volumePath is the path that identifies vSphere
                            volume vmdk
                          type: string
                      required:
                      - volumePath
                      type: object
                  required:
                  - name
                  type: object
                type: array
            required:
            - retentionPeriod
            type: object
          status:
            description: VMSingleStatus defines the observed state of VMSingle
            properties:
              availableReplicas:
                description: AvailableReplicas Total number of available pods (ready
                  for at least minReadySeconds) targeted by this VMSingle.
                format: int32
                type: integer
              reason:
                description: Reason defines a reason in case of update failure
                type: string
              replicas:
                description: ReplicaCount Total number of non-terminated pods targeted
                  by this VMSingle.
                format: int32
                type: integer
              singleStatus:
                description: UpdateStatus defines a status of single node rollout
                type: string
              unavailableReplicas:
                description: UnavailableReplicas Total number of unavailable pods
                  targeted by this VMSingle.
                format: int32
                type: integer
              updatedReplicas:
                description: UpdatedReplicas Total number of non-terminated pods targeted
                  by this VMSingle.
                format: int32
                type: integer
            required:
            - availableReplicas
            - replicas
            - unavailableReplicas
            - updatedReplicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
